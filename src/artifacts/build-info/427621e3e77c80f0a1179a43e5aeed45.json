{
	"id": "427621e3e77c80f0a1179a43e5aeed45",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ninterface nftIface {\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n    function nftOwnerInfo(address user) external view returns (uint256);\n}\n\ninterface IMintableToken is IERC20 {\n    function mintTo(address recipient, uint256 amount) external;\n}\n\n/**\n * @title TokenStaking\n * @dev This contract allows users to stake ERC20 tokens and claim rewards based on the staking duration.\n * It also supports NFT-based reward bonuses. The contract is protected against reentrancy attacks and\n * uses role-based access control for administrative functions.\n */\ncontract TokenStaking is AccessControl, ReentrancyGuard {\n\n    IMintableToken public token; // The ERC-20 token being staked, with minting capability\n    IERC721 public nft; // The NFT contract used to determine staking eligibility and bonuses\n    nftIface public ifacenft; // Interface for retrieving NFT owner information\n    uint256 public rewardRatePerBlock; // Reward rate per block for staking\n    uint256 public lastUpdateBlock; // Block number of the last update to the reward rate\n    uint256 public totalStaked; // Total amount of tokens staked in the contract\n    uint256 public totalRewards; // Total amount of rewards distributed\n    uint256 public claimInterval; // Number of blocks between reward claims\n\n    // Role identifiers for different administrative actions\n    bytes32 public constant _RESCUE = keccak256(\"_RESCUE\");\n    bytes32 public constant _ADMIN = keccak256(\"_ADMIN\");\n    bytes32 public constant _MINTER = keccak256(\"_MINTER\");\n\n    // Structure to hold user-specific staking information\n    struct UserInfo {\n        uint256 stakedBalance; // The amount of tokens staked by the user\n        uint256 lastClaimBlock; // The block number of the user's last reward claim\n    }\n\n    // Structure to hold reward bonuses for different NFT levels\n    struct RewardLevelBonus {\n        uint256 gold;   // Bonus for Gold level NFT holders\n        uint256 silver; // Bonus for Silver level NFT holders\n        uint256 bronze; // Bonus for Bronze level NFT holders\n    }\n\n    RewardLevelBonus public rewardBonus; // Instance of the RewardLevelBonus struct\n\n    // Mapping from user address to their staking information\n    mapping(address => UserInfo) public userInfo;\n\n    // Events to track staking, unstaking, and reward claims\n    event Staked(address indexed staker, uint256 amount);\n    event Unstaked(address indexed staker, uint256 amount);\n    event ClaimedRewards(address indexed staker, uint256 amount);\n\n    /**\n     * @dev Constructor to initialize the staking contract with the token, claim interval, NFT, and NFT interface.\n     * @param _token The address of the mintable ERC-20 token contract.\n     * @param _claimInterval The interval (in blocks) between reward claims.\n     * @param _nft The address of the ERC-721 NFT contract.\n     * @param _ifacenft The address of the NFT interface contract.\n     */\n    constructor(IMintableToken _token, uint _claimInterval, IERC721 _nft, nftIface _ifacenft) {\n        token = _token;\n        nft = _nft;\n        ifacenft = _ifacenft;\n        rewardRatePerBlock = 0.0008 ether;\n        lastUpdateBlock = block.number;\n        claimInterval = _claimInterval;\n        rewardBonus = RewardLevelBonus({ gold: 0.001 ether, silver: 0.0005 ether, bronze: 0.0002 ether });\n    }\n\n    /**\n     * @dev Public function to stake tokens. The nonReentrant modifier ensures no reentrancy attack.\n     * @param _amount The amount of tokens to stake.\n     */\n    function stake(uint256 _amount) external nonReentrant {\n        _stake(_amount);\n    }\n\n    /**\n     * @dev Public function to unstake tokens. The nonReentrant modifier ensures no reentrancy attack.\n     * @param _amount The amount of tokens to unstake.\n     */\n    function unstake(uint256 _amount) external nonReentrant {\n        _unstake(_amount);\n    }\n\n    /**\n     * @dev Public function to claim staking rewards. The nonReentrant modifier ensures no reentrancy attack.\n     */\n    function claimRewards() public nonReentrant {\n        _claimRewards(_msgSender());\n    }\n\n    /**\n     * @dev Internal function to handle staking logic.\n     * @param _amount The amount of tokens to stake.\n     */\n    function _stake(uint256 _amount) internal {\n        require(_amount > 0, \"Staking: Amount must be greater than 0\");\n        require(nft.balanceOf(_msgSender()) > 0, \"Staking: No NFT balance\");\n\n        require(token.approve(address(this), _amount), \"Staking: Approval failed\");\n        require(token.transferFrom(_msgSender(), address(this), _amount), \"Staking: Token transfer failed\");\n\n        UserInfo storage user = userInfo[_msgSender()];\n\n        user.stakedBalance += _amount;\n        require(user.stakedBalance <= 1e20, \"Stake exceeds cap\");\n\n        totalStaked += _amount;\n        user.lastClaimBlock = block.number;\n\n        emit Staked(_msgSender(), _amount);\n    }\n\n    /**\n     * @dev Internal function to handle unstaking logic.\n     * @param _amount The amount of tokens to unstake.\n     */\n    function _unstake(uint256 _amount) internal {\n        UserInfo storage user = userInfo[_msgSender()];\n        require(_amount > 0, \"TokenStaking: Amount must be greater than 0\");\n        require(user.stakedBalance >= _amount, \"TokenStaking: Insufficient staked balance\");\n        require(block.number >= user.lastClaimBlock + claimInterval, \"TokenStaking: Claim interval not met\");\n\n        _claimRewards(_msgSender());\n\n        user.stakedBalance -= _amount;\n        totalStaked -= _amount;\n\n        require(token.transfer(_msgSender(), _amount), \"TokenStaking: Unstake transfer failed\");\n\n        emit Unstaked(_msgSender(), _amount);\n    }\n\n    /**\n     * @dev Internal function to handle reward claiming logic.\n     * @param staker The address of the staker claiming rewards.\n     */\n    function _claimRewards(address staker) internal {\n        UserInfo storage user = userInfo[staker];\n        require(user.stakedBalance > 0, \"TokenStaking: No staked balance\");\n        require(block.number >= user.lastClaimBlock + claimInterval, \"TokenStaking: Claim interval not met\");\n\n        uint256 pendingRewards = calculatePendingRewards(staker);\n        require(pendingRewards > 0, \"TokenStaking: No rewards to claim\");\n\n        user.lastClaimBlock = block.number;\n        totalRewards += pendingRewards;\n\n        token.mintTo(staker, pendingRewards);\n\n        emit ClaimedRewards(staker, pendingRewards);\n    }\n\n    /**\n     * @dev Calculates the pending rewards for a staker based on their staking duration and NFT level.\n     * @param _staker The address of the staker.\n     * @return The amount of pending rewards.\n     */\n    function calculatePendingRewards(address _staker) public view returns (uint256) {\n        uint256 level = getLevel(_staker);\n        uint256 rewardBonusLevel;\n\n        if (level == 1) {\n            rewardBonusLevel = rewardBonus.gold;\n        } else if (level == 2) {\n            rewardBonusLevel = rewardBonus.silver;\n        } else if (level == 3) {\n            rewardBonusLevel = rewardBonus.bronze;\n        } else {\n            revert(\"No NFT Level\");\n        }\n\n        uint256 blocksElapsed = block.number - userInfo[_staker].lastClaimBlock;\n        uint256 rewards = (rewardRatePerBlock + rewardBonusLevel) * blocksElapsed;\n    \n        return rewards;\n    }\n\n    /**\n     * @dev Gets the NFT level of a user.\n     * @param user The address of the user.\n     * @return The NFT level of the user.\n     */\n    function getLevel(address user) public view returns (uint256) {\n        return ifacenft.nftOwnerInfo(user);\n    }\n\n    /**\n     * @dev Sets a new reward rate per block. Only callable by an admin.\n     * @param _newRewardRatePerBlock The new reward rate per block.\n     */\n    function setRewardRatePerBlock(uint256 _newRewardRatePerBlock) external {\n        require(_newRewardRatePerBlock > 0, \"Reward rate must be positive\");\n        require(hasRole(_ADMIN, _msgSender()));\n        rewardRatePerBlock = _newRewardRatePerBlock;\n        lastUpdateBlock = block.number;\n    }\n\n    /**\n     * @dev Sets a new claim interval. Only callable by an admin.\n     * @param _niw The new claim interval in blocks.\n     */\n    function setClaimInterval(uint256 _niw) external {\n        require(hasRole(_ADMIN, _msgSender()));\n        claimInterval = _niw;\n    }\n\n    /**\n     * @dev Sets a new token contract for staking. Only callable by an admin.\n     * @param _newToken The address of the new mintable token contract.\n     */\n    function setToken(IMintableToken _newToken) external {\n        require(hasRole(_ADMIN, _msgSender()));\n        token = _newToken;\n    }\n\n    /**\n     * @dev Sets a new NFT contract. Only callable by an admin.\n     * @param _newGoldNFT The address of the new ERC-721 NFT contract.\n     */\n    function setNFT(IERC721 _newGoldNFT) external {\n        require(hasRole(_ADMIN, _msgSender()));\n        nft = _newGoldNFT;\n    }\n\n    /**\n     * @dev Returns the current block number.\n     * @return The current block number.\n     */\n    function getBlock() external view returns (uint256) {\n        uint cb = block.number;\n        return cb;\n    }\n\n    /**\n     * @dev Allows an authorized user to rescue ERC20 tokens sent to the contract by mistake.\n     * Only callable by a user with the RESCUE role.\n     * @param _ERC20 The address of the ERC20 token to rescue.\n     * @param _dest The address to send the rescued tokens to.\n     * @param _ERC20Amount The amount of tokens to rescue.\n     */\n    function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {\n        require(hasRole(_RESCUE, _msgSender())); \n        IERC20(_ERC20).transfer(_dest, _ERC20Amount);\n    }\n\n    /**\n     * @dev Allows an authorized user to rescue Ether sent to the contract by mistake.\n     * Only callable by a user with the RESCUE role.\n     * @param _dest The address to send the rescued Ether to.\n     * @param _etherAmount The amount of Ether to rescue.\n     */\n    function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {\n        require(hasRole(_RESCUE, _msgSender()));\n        _dest.transfer(_etherAmount);\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/staking.sol": {
				"IMintableToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mintTo(address,uint256)": "449a52f8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking.sol\":\"IMintableToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/staking.sol\":{\"keccak256\":\"0x074121075388873b92cd86e7f9aca37f82e430a368076cdf9eec55887aee3dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f267caf6d1affa96ba144079bc389ebdb87098711a397f460d81ab08745646af\",\"dweb:/ipfs/QmZbzS5atAJZKMxgm8hADtANKffHAJJYcxAU3um4Dsy2dm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IMintableToken",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimInterval",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "contract nftIface",
									"name": "_ifacenft",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimedRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_MINTER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_RESCUE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "calculatePendingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_etherAmount",
									"type": "uint256"
								}
							],
							"name": "ethRescue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ifacenft",
							"outputs": [
								{
									"internalType": "contract nftIface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_ERC20",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ERC20Amount",
									"type": "uint256"
								}
							],
							"name": "moveERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "gold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "silver",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bronze",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRatePerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_niw",
									"type": "uint256"
								}
							],
							"name": "setClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_newGoldNFT",
									"type": "address"
								}
							],
							"name": "setNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRewardRatePerBlock",
									"type": "uint256"
								}
							],
							"name": "setRewardRatePerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMintableToken",
									"name": "_newToken",
									"type": "address"
								}
							],
							"name": "setToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IMintableToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract allows users to stake ERC20 tokens and claim rewards based on the staking duration. It also supports NFT-based reward bonuses. The contract is protected against reentrancy attacks and uses role-based access control for administrative functions.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"calculatePendingRewards(address)": {
								"details": "Calculates the pending rewards for a staker based on their staking duration and NFT level.",
								"params": {
									"_staker": "The address of the staker."
								},
								"returns": {
									"_0": "The amount of pending rewards."
								}
							},
							"claimRewards()": {
								"details": "Public function to claim staking rewards. The nonReentrant modifier ensures no reentrancy attack."
							},
							"constructor": {
								"details": "Constructor to initialize the staking contract with the token, claim interval, NFT, and NFT interface.",
								"params": {
									"_claimInterval": "The interval (in blocks) between reward claims.",
									"_ifacenft": "The address of the NFT interface contract.",
									"_nft": "The address of the ERC-721 NFT contract.",
									"_token": "The address of the mintable ERC-20 token contract."
								}
							},
							"ethRescue(address,uint256)": {
								"details": "Allows an authorized user to rescue Ether sent to the contract by mistake. Only callable by a user with the RESCUE role.",
								"params": {
									"_dest": "The address to send the rescued Ether to.",
									"_etherAmount": "The amount of Ether to rescue."
								}
							},
							"getBlock()": {
								"details": "Returns the current block number.",
								"returns": {
									"_0": "The current block number."
								}
							},
							"getLevel(address)": {
								"details": "Gets the NFT level of a user.",
								"params": {
									"user": "The address of the user."
								},
								"returns": {
									"_0": "The NFT level of the user."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"moveERC20(address,address,uint256)": {
								"details": "Allows an authorized user to rescue ERC20 tokens sent to the contract by mistake. Only callable by a user with the RESCUE role.",
								"params": {
									"_ERC20": "The address of the ERC20 token to rescue.",
									"_ERC20Amount": "The amount of tokens to rescue.",
									"_dest": "The address to send the rescued tokens to."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setClaimInterval(uint256)": {
								"details": "Sets a new claim interval. Only callable by an admin.",
								"params": {
									"_niw": "The new claim interval in blocks."
								}
							},
							"setNFT(address)": {
								"details": "Sets a new NFT contract. Only callable by an admin.",
								"params": {
									"_newGoldNFT": "The address of the new ERC-721 NFT contract."
								}
							},
							"setRewardRatePerBlock(uint256)": {
								"details": "Sets a new reward rate per block. Only callable by an admin.",
								"params": {
									"_newRewardRatePerBlock": "The new reward rate per block."
								}
							},
							"setToken(address)": {
								"details": "Sets a new token contract for staking. Only callable by an admin.",
								"params": {
									"_newToken": "The address of the new mintable token contract."
								}
							},
							"stake(uint256)": {
								"details": "Public function to stake tokens. The nonReentrant modifier ensures no reentrancy attack.",
								"params": {
									"_amount": "The amount of tokens to stake."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"unstake(uint256)": {
								"details": "Public function to unstake tokens. The nonReentrant modifier ensures no reentrancy attack.",
								"params": {
									"_amount": "The amount of tokens to unstake."
								}
							}
						},
						"title": "TokenStaking",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/staking.sol\":953:10510  contract TokenStaking is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"src/staking.sol\":3300:3701  constructor(IMintableToken _token, uint _claimInterval, IERC721 _nft, nftIface _ifacenft) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3408:3414  _token */\n  dup4\n    /* \"src/staking.sol\":3400:3405  token */\n  0x02\n  0x00\n    /* \"src/staking.sol\":3400:3414  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3430:3434  _nft */\n  dup2\n    /* \"src/staking.sol\":3424:3427  nft */\n  0x03\n  0x00\n    /* \"src/staking.sol\":3424:3434  nft = _nft */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3455:3464  _ifacenft */\n  dup1\n    /* \"src/staking.sol\":3444:3452  ifacenft */\n  0x04\n  0x00\n    /* \"src/staking.sol\":3444:3464  ifacenft = _ifacenft */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3495:3507  0.0008 ether */\n  0x02d79883d20000\n    /* \"src/staking.sol\":3474:3492  rewardRatePerBlock */\n  0x05\n    /* \"src/staking.sol\":3474:3507  rewardRatePerBlock = 0.0008 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3535:3547  block.number */\n  number\n    /* \"src/staking.sol\":3517:3532  lastUpdateBlock */\n  0x06\n    /* \"src/staking.sol\":3517:3547  lastUpdateBlock = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3573:3587  _claimInterval */\n  dup3\n    /* \"src/staking.sol\":3557:3570  claimInterval */\n  0x09\n    /* \"src/staking.sol\":3557:3587  claimInterval = _claimInterval */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/staking.sol\":3611:3694  RewardLevelBonus({ gold: 0.001 ether, silver: 0.0005 ether, bronze: 0.0002 ether }) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"src/staking.sol\":3636:3647  0.001 ether */\n  0x038d7ea4c68000\n    /* \"src/staking.sol\":3611:3694  RewardLevelBonus({ gold: 0.001 ether, silver: 0.0005 ether, bronze: 0.0002 ether }) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"src/staking.sol\":3657:3669  0.0005 ether */\n  0x01c6bf52634000\n    /* \"src/staking.sol\":3611:3694  RewardLevelBonus({ gold: 0.001 ether, silver: 0.0005 ether, bronze: 0.0002 ether }) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"src/staking.sol\":3679:3691  0.0002 ether */\n  0xb5e620f48000\n    /* \"src/staking.sol\":3611:3694  RewardLevelBonus({ gold: 0.001 ether, silver: 0.0005 ether, bronze: 0.0002 ether }) */\n  dup2\n  mstore\n  pop\n    /* \"src/staking.sol\":3597:3608  rewardBonus */\n  0x0a\n    /* \"src/staking.sol\":3597:3694  rewardBonus = RewardLevelBonus({ gold: 0.001 ether, silver: 0.0005 ether, bronze: 0.0002 ether }) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"src/staking.sol\":3300:3701  constructor(IMintableToken _token, uint _claimInterval, IERC721 _nft, nftIface _ifacenft) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"src/staking.sol\":953:10510  contract TokenStaking is AccessControl, ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:686   */\ntag_14:\n    /* \"#utility.yul\":627:634   */\n  0x00\n    /* \"#utility.yul\":656:680   */\n  tag_34\n    /* \"#utility.yul\":674:679   */\n  dup3\n    /* \"#utility.yul\":656:680   */\n  tag_13\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":645:680   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:686   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":692:858   */\ntag_15:\n    /* \"#utility.yul\":787:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":787:833   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":780:785   */\n  dup2\n    /* \"#utility.yul\":777:834   */\n  eq\n    /* \"#utility.yul\":767:852   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":848:849   */\n  0x00\n    /* \"#utility.yul\":845:846   */\n  dup1\n    /* \"#utility.yul\":838:850   */\n  revert\n    /* \"#utility.yul\":767:852   */\ntag_37:\n    /* \"#utility.yul\":692:858   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":864:1051   */\ntag_16:\n    /* \"#utility.yul\":943:948   */\n  0x00\n    /* \"#utility.yul\":974:980   */\n  dup2\n    /* \"#utility.yul\":968:981   */\n  mload\n    /* \"#utility.yul\":959:981   */\n  swap1\n  pop\n    /* \"#utility.yul\":990:1045   */\n  tag_39\n    /* \"#utility.yul\":1039:1044   */\n  dup2\n    /* \"#utility.yul\":990:1045   */\n  tag_15\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":864:1051   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1057:1134   */\ntag_17:\n    /* \"#utility.yul\":1094:1101   */\n  0x00\n    /* \"#utility.yul\":1123:1128   */\n  dup2\n    /* \"#utility.yul\":1112:1128   */\n  swap1\n  pop\n    /* \"#utility.yul\":1057:1134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1140:1262   */\ntag_18:\n    /* \"#utility.yul\":1213:1237   */\n  tag_42\n    /* \"#utility.yul\":1231:1236   */\n  dup2\n    /* \"#utility.yul\":1213:1237   */\n  tag_17\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1206:1211   */\n  dup2\n    /* \"#utility.yul\":1203:1238   */\n  eq\n    /* \"#utility.yul\":1193:1256   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1252:1253   */\n  0x00\n    /* \"#utility.yul\":1249:1250   */\n  dup1\n    /* \"#utility.yul\":1242:1254   */\n  revert\n    /* \"#utility.yul\":1193:1256   */\ntag_43:\n    /* \"#utility.yul\":1140:1262   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1268:1411   */\ntag_19:\n    /* \"#utility.yul\":1325:1330   */\n  0x00\n    /* \"#utility.yul\":1356:1362   */\n  dup2\n    /* \"#utility.yul\":1350:1363   */\n  mload\n    /* \"#utility.yul\":1341:1363   */\n  swap1\n  pop\n    /* \"#utility.yul\":1372:1405   */\n  tag_45\n    /* \"#utility.yul\":1399:1404   */\n  dup2\n    /* \"#utility.yul\":1372:1405   */\n  tag_18\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1268:1411   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1417:1528   */\ntag_20:\n    /* \"#utility.yul\":1469:1476   */\n  0x00\n    /* \"#utility.yul\":1498:1522   */\n  tag_47\n    /* \"#utility.yul\":1516:1521   */\n  dup3\n    /* \"#utility.yul\":1498:1522   */\n  tag_13\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1487:1522   */\n  swap1\n  pop\n    /* \"#utility.yul\":1417:1528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1534:1686   */\ntag_21:\n    /* \"#utility.yul\":1622:1661   */\n  tag_49\n    /* \"#utility.yul\":1655:1660   */\n  dup2\n    /* \"#utility.yul\":1622:1661   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1615:1620   */\n  dup2\n    /* \"#utility.yul\":1612:1662   */\n  eq\n    /* \"#utility.yul\":1602:1680   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1676:1677   */\n  0x00\n    /* \"#utility.yul\":1673:1674   */\n  dup1\n    /* \"#utility.yul\":1666:1678   */\n  revert\n    /* \"#utility.yul\":1602:1680   */\ntag_50:\n    /* \"#utility.yul\":1534:1686   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1692:1865   */\ntag_22:\n    /* \"#utility.yul\":1764:1769   */\n  0x00\n    /* \"#utility.yul\":1795:1801   */\n  dup2\n    /* \"#utility.yul\":1789:1802   */\n  mload\n    /* \"#utility.yul\":1780:1802   */\n  swap1\n  pop\n    /* \"#utility.yul\":1811:1859   */\n  tag_52\n    /* \"#utility.yul\":1853:1858   */\n  dup2\n    /* \"#utility.yul\":1811:1859   */\n  tag_21\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1692:1865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1871:1983   */\ntag_23:\n    /* \"#utility.yul\":1924:1931   */\n  0x00\n    /* \"#utility.yul\":1953:1977   */\n  tag_54\n    /* \"#utility.yul\":1971:1976   */\n  dup3\n    /* \"#utility.yul\":1953:1977   */\n  tag_13\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1942:1977   */\n  swap1\n  pop\n    /* \"#utility.yul\":1871:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1989:2143   */\ntag_24:\n    /* \"#utility.yul\":2078:2118   */\n  tag_56\n    /* \"#utility.yul\":2112:2117   */\n  dup2\n    /* \"#utility.yul\":2078:2118   */\n  tag_23\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2071:2076   */\n  dup2\n    /* \"#utility.yul\":2068:2119   */\n  eq\n    /* \"#utility.yul\":2058:2137   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2133:2134   */\n  0x00\n    /* \"#utility.yul\":2130:2131   */\n  dup1\n    /* \"#utility.yul\":2123:2135   */\n  revert\n    /* \"#utility.yul\":2058:2137   */\ntag_57:\n    /* \"#utility.yul\":1989:2143   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2149:2324   */\ntag_25:\n    /* \"#utility.yul\":2222:2227   */\n  0x00\n    /* \"#utility.yul\":2253:2259   */\n  dup2\n    /* \"#utility.yul\":2247:2260   */\n  mload\n    /* \"#utility.yul\":2238:2260   */\n  swap1\n  pop\n    /* \"#utility.yul\":2269:2318   */\n  tag_59\n    /* \"#utility.yul\":2312:2317   */\n  dup2\n    /* \"#utility.yul\":2269:2318   */\n  tag_24\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2149:2324   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2330:3256   */\ntag_3:\n    /* \"#utility.yul\":2480:2486   */\n  0x00\n    /* \"#utility.yul\":2488:2494   */\n  dup1\n    /* \"#utility.yul\":2496:2502   */\n  0x00\n    /* \"#utility.yul\":2504:2510   */\n  dup1\n    /* \"#utility.yul\":2553:2556   */\n  0x80\n    /* \"#utility.yul\":2541:2550   */\n  dup6\n    /* \"#utility.yul\":2532:2539   */\n  dup8\n    /* \"#utility.yul\":2528:2551   */\n  sub\n    /* \"#utility.yul\":2524:2557   */\n  slt\n    /* \"#utility.yul\":2521:2641   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2560:2639   */\n  tag_62\n  tag_10\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2521:2641   */\ntag_61:\n    /* \"#utility.yul\":2680:2681   */\n  0x00\n    /* \"#utility.yul\":2705:2791   */\n  tag_63\n    /* \"#utility.yul\":2783:2790   */\n  dup8\n    /* \"#utility.yul\":2774:2780   */\n  dup3\n    /* \"#utility.yul\":2763:2772   */\n  dup9\n    /* \"#utility.yul\":2759:2781   */\n  add\n    /* \"#utility.yul\":2705:2791   */\n  tag_16\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2695:2791   */\n  swap5\n  pop\n    /* \"#utility.yul\":2651:2801   */\n  pop\n    /* \"#utility.yul\":2840:2842   */\n  0x20\n    /* \"#utility.yul\":2866:2930   */\n  tag_64\n    /* \"#utility.yul\":2922:2929   */\n  dup8\n    /* \"#utility.yul\":2913:2919   */\n  dup3\n    /* \"#utility.yul\":2902:2911   */\n  dup9\n    /* \"#utility.yul\":2898:2920   */\n  add\n    /* \"#utility.yul\":2866:2930   */\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2856:2930   */\n  swap4\n  pop\n    /* \"#utility.yul\":2811:2940   */\n  pop\n    /* \"#utility.yul\":2979:2981   */\n  0x40\n    /* \"#utility.yul\":3005:3084   */\n  tag_65\n    /* \"#utility.yul\":3076:3083   */\n  dup8\n    /* \"#utility.yul\":3067:3073   */\n  dup3\n    /* \"#utility.yul\":3056:3065   */\n  dup9\n    /* \"#utility.yul\":3052:3074   */\n  add\n    /* \"#utility.yul\":3005:3084   */\n  tag_22\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2995:3084   */\n  swap3\n  pop\n    /* \"#utility.yul\":2950:3094   */\n  pop\n    /* \"#utility.yul\":3133:3135   */\n  0x60\n    /* \"#utility.yul\":3159:3239   */\n  tag_66\n    /* \"#utility.yul\":3231:3238   */\n  dup8\n    /* \"#utility.yul\":3222:3228   */\n  dup3\n    /* \"#utility.yul\":3211:3220   */\n  dup9\n    /* \"#utility.yul\":3207:3229   */\n  add\n    /* \"#utility.yul\":3159:3239   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3149:3239   */\n  swap2\n  pop\n    /* \"#utility.yul\":3104:3249   */\n  pop\n    /* \"#utility.yul\":2330:3256   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"src/staking.sol\":953:10510  contract TokenStaking is AccessControl, ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/staking.sol\":953:10510  contract TokenStaking is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf2d57adf\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xf2d57adf\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf56e9c66\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xfdf553cf\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xa694fc3a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb0ad08df\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb2f196f6\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x91d14854\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa218141b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa56bef5d\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x817b1cd2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x817c8966\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8d580b9f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x90870492\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x2e97766d\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x41f431fd\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x41f431fd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x48132f48\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x51557289\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x2e97766d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x144fa6d7\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x144fa6d7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x097aad10\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b433a12\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":7024:7689  function calculatePendingRewards(address _staker) public view returns (uint256) {... */\n    tag_4:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1600:1628  uint256 public claimInterval */\n    tag_5:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1528:1555  uint256 public totalRewards */\n    tag_6:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":8859:8994  function setToken(IMintableToken _newToken) external {... */\n    tag_7:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"src/staking.sol\":2596:2640  mapping(address => UserInfo) public userInfo */\n    tag_8:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":4143:4233  function unstake(uint256 _amount) external nonReentrant {... */\n    tag_10:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"src/staking.sol\":9388:9498  function getBlock() external view returns (uint256) {... */\n    tag_11:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_12:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_13:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"src/staking.sol\":4365:4453  function claimRewards() public nonReentrant {... */\n    tag_14:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"src/staking.sol\":9852:10051  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {... */\n    tag_15:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"src/staking.sol\":1107:1125  IERC721 public nft */\n    tag_16:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":10333:10508  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {... */\n    tag_17:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"src/staking.sol\":1798:1850  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n    tag_18:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1447:1473  uint256 public totalStaked */\n    tag_19:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":7839:7952  function getLevel(address user) public view returns (uint256) {... */\n    tag_20:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1738:1792  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n    tag_21:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1281:1314  uint256 public rewardRatePerBlock */\n    tag_22:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_23:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1357:1387  uint256 public lastUpdateBlock */\n    tag_25:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":1856:1910  bytes32 public constant _MINTER = keccak256(\"_MINTER\") */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":3877:3963  function stake(uint256 _amount) external nonReentrant {... */\n    tag_27:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"src/staking.sol\":1201:1225  nftIface public ifacenft */\n    tag_28:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":8115:8412  function setRewardRatePerBlock(uint256 _newRewardRatePerBlock) external {... */\n    tag_29:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_30:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"src/staking.sol\":8553:8687  function setClaimInterval(uint256 _niw) external {... */\n    tag_31:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"src/staking.sol\":9151:9279  function setNFT(IERC721 _newGoldNFT) external {... */\n    tag_32:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n    tag_148:\n      stop\n        /* \"src/staking.sol\":1016:1043  IMintableToken public token */\n    tag_33:\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/staking.sol\":2449:2484  RewardLevelBonus public rewardBonus */\n    tag_34:\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_158\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_161\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":7024:7689  function calculatePendingRewards(address _staker) public view returns (uint256) {... */\n    tag_51:\n        /* \"src/staking.sol\":7095:7102  uint256 */\n      0x00\n        /* \"src/staking.sol\":7114:7127  uint256 level */\n      dup1\n        /* \"src/staking.sol\":7130:7147  getLevel(_staker) */\n      tag_165\n        /* \"src/staking.sol\":7139:7146  _staker */\n      dup4\n        /* \"src/staking.sol\":7130:7138  getLevel */\n      tag_111\n        /* \"src/staking.sol\":7130:7147  getLevel(_staker) */\n      jump\t// in\n    tag_165:\n        /* \"src/staking.sol\":7114:7147  uint256 level = getLevel(_staker) */\n      swap1\n      pop\n        /* \"src/staking.sol\":7157:7181  uint256 rewardBonusLevel */\n      0x00\n        /* \"src/staking.sol\":7205:7206  1 */\n      0x01\n        /* \"src/staking.sol\":7196:7201  level */\n      dup3\n        /* \"src/staking.sol\":7196:7206  level == 1 */\n      sub\n        /* \"src/staking.sol\":7192:7489  if (level == 1) {... */\n      tag_166\n      jumpi\n        /* \"src/staking.sol\":7241:7252  rewardBonus */\n      0x0a\n        /* \"src/staking.sol\":7241:7257  rewardBonus.gold */\n      0x00\n      add\n      sload\n        /* \"src/staking.sol\":7222:7257  rewardBonusLevel = rewardBonus.gold */\n      swap1\n      pop\n        /* \"src/staking.sol\":7192:7489  if (level == 1) {... */\n      jump(tag_167)\n    tag_166:\n        /* \"src/staking.sol\":7287:7288  2 */\n      0x02\n        /* \"src/staking.sol\":7278:7283  level */\n      dup3\n        /* \"src/staking.sol\":7278:7288  level == 2 */\n      sub\n        /* \"src/staking.sol\":7274:7489  if (level == 2) {... */\n      tag_168\n      jumpi\n        /* \"src/staking.sol\":7323:7334  rewardBonus */\n      0x0a\n        /* \"src/staking.sol\":7323:7341  rewardBonus.silver */\n      0x01\n      add\n      sload\n        /* \"src/staking.sol\":7304:7341  rewardBonusLevel = rewardBonus.silver */\n      swap1\n      pop\n        /* \"src/staking.sol\":7274:7489  if (level == 2) {... */\n      jump(tag_169)\n    tag_168:\n        /* \"src/staking.sol\":7371:7372  3 */\n      0x03\n        /* \"src/staking.sol\":7362:7367  level */\n      dup3\n        /* \"src/staking.sol\":7362:7372  level == 3 */\n      sub\n        /* \"src/staking.sol\":7358:7489  if (level == 3) {... */\n      tag_170\n      jumpi\n        /* \"src/staking.sol\":7407:7418  rewardBonus */\n      0x0a\n        /* \"src/staking.sol\":7407:7425  rewardBonus.bronze */\n      0x02\n      add\n      sload\n        /* \"src/staking.sol\":7388:7425  rewardBonusLevel = rewardBonus.bronze */\n      swap1\n      pop\n        /* \"src/staking.sol\":7358:7489  if (level == 3) {... */\n      jump(tag_171)\n    tag_170:\n        /* \"src/staking.sol\":7456:7478  revert(\"No NFT Level\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/staking.sol\":7358:7489  if (level == 3) {... */\n    tag_171:\n        /* \"src/staking.sol\":7274:7489  if (level == 2) {... */\n    tag_169:\n        /* \"src/staking.sol\":7192:7489  if (level == 1) {... */\n    tag_167:\n        /* \"src/staking.sol\":7499:7520  uint256 blocksElapsed */\n      0x00\n        /* \"src/staking.sol\":7538:7546  userInfo */\n      0x0d\n        /* \"src/staking.sol\":7538:7555  userInfo[_staker] */\n      0x00\n        /* \"src/staking.sol\":7547:7554  _staker */\n      dup7\n        /* \"src/staking.sol\":7538:7555  userInfo[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/staking.sol\":7538:7570  userInfo[_staker].lastClaimBlock */\n      0x01\n      add\n      sload\n        /* \"src/staking.sol\":7523:7535  block.number */\n      number\n        /* \"src/staking.sol\":7523:7570  block.number - userInfo[_staker].lastClaimBlock */\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"src/staking.sol\":7499:7570  uint256 blocksElapsed = block.number - userInfo[_staker].lastClaimBlock */\n      swap1\n      pop\n        /* \"src/staking.sol\":7580:7595  uint256 rewards */\n      0x00\n        /* \"src/staking.sol\":7640:7653  blocksElapsed */\n      dup2\n        /* \"src/staking.sol\":7620:7636  rewardBonusLevel */\n      dup4\n        /* \"src/staking.sol\":7599:7617  rewardRatePerBlock */\n      sload(0x05)\n        /* \"src/staking.sol\":7599:7636  rewardRatePerBlock + rewardBonusLevel */\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"src/staking.sol\":7598:7653  (rewardRatePerBlock + rewardBonusLevel) * blocksElapsed */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"src/staking.sol\":7580:7653  uint256 rewards = (rewardRatePerBlock + rewardBonusLevel) * blocksElapsed */\n      swap1\n      pop\n        /* \"src/staking.sol\":7675:7682  rewards */\n      dup1\n        /* \"src/staking.sol\":7668:7682  return rewards */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/staking.sol\":7024:7689  function calculatePendingRewards(address _staker) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":1600:1628  uint256 public claimInterval */\n    tag_55:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":1528:1555  uint256 public totalRewards */\n    tag_58:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":8859:8994  function setToken(IMintableToken _newToken) external {... */\n    tag_63:\n        /* \"src/staking.sol\":8930:8959  hasRole(_ADMIN, _msgSender()) */\n      tag_181\n        /* \"src/staking.sol\":1831:1850  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/staking.sol\":8946:8958  _msgSender() */\n      tag_182\n        /* \"src/staking.sol\":8946:8956  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":8946:8958  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"src/staking.sol\":8930:8937  hasRole */\n      tag_121\n        /* \"src/staking.sol\":8930:8959  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_181:\n        /* \"src/staking.sol\":8922:8960  require(hasRole(_ADMIN, _msgSender())) */\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n        /* \"src/staking.sol\":8978:8987  _newToken */\n      dup1\n        /* \"src/staking.sol\":8970:8975  token */\n      0x02\n      0x00\n        /* \"src/staking.sol\":8970:8987  token = _newToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":8859:8994  function setToken(IMintableToken _newToken) external {... */\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":2596:2640  mapping(address => UserInfo) public userInfo */\n    tag_66:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":4143:4233  function unstake(uint256 _amount) external nonReentrant {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_187:\n        /* \"src/staking.sol\":4209:4226  _unstake(_amount) */\n      tag_190\n        /* \"src/staking.sol\":4218:4225  _amount */\n      dup2\n        /* \"src/staking.sol\":4209:4217  _unstake */\n      tag_191\n        /* \"src/staking.sol\":4209:4226  _unstake(_amount) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_192\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_192:\n        /* \"src/staking.sol\":4143:4233  function unstake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":9388:9498  function getBlock() external view returns (uint256) {... */\n    tag_80:\n        /* \"src/staking.sol\":9431:9438  uint256 */\n      0x00\n        /* \"src/staking.sol\":9450:9457  uint cb */\n      dup1\n        /* \"src/staking.sol\":9460:9472  block.number */\n      number\n        /* \"src/staking.sol\":9450:9472  uint cb = block.number */\n      swap1\n      pop\n        /* \"src/staking.sol\":9489:9491  cb */\n      dup1\n        /* \"src/staking.sol\":9482:9491  return cb */\n      swap2\n      pop\n      pop\n        /* \"src/staking.sol\":9388:9498  function getBlock() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_198\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_200:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_205:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":4365:4453  function claimRewards() public nonReentrant {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_208\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_208:\n        /* \"src/staking.sol\":4419:4446  _claimRewards(_msgSender()) */\n      tag_210\n        /* \"src/staking.sol\":4433:4445  _msgSender() */\n      tag_211\n        /* \"src/staking.sol\":4433:4443  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":4433:4445  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"src/staking.sol\":4419:4432  _claimRewards */\n      tag_212\n        /* \"src/staking.sol\":4419:4446  _claimRewards(_msgSender()) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_213\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_213:\n        /* \"src/staking.sol\":4365:4453  function claimRewards() public nonReentrant {... */\n      jump\t// out\n        /* \"src/staking.sol\":9852:10051  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_215\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_215:\n        /* \"src/staking.sol\":9958:9988  hasRole(_RESCUE, _msgSender()) */\n      tag_217\n        /* \"src/staking.sol\":1772:1792  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/staking.sol\":9975:9987  _msgSender() */\n      tag_218\n        /* \"src/staking.sol\":9975:9985  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":9975:9987  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"src/staking.sol\":9958:9965  hasRole */\n      tag_121\n        /* \"src/staking.sol\":9958:9988  hasRole(_RESCUE, _msgSender()) */\n      jump\t// in\n    tag_217:\n        /* \"src/staking.sol\":9950:9989  require(hasRole(_RESCUE, _msgSender())) */\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n        /* \"src/staking.sol\":10007:10013  _ERC20 */\n      dup3\n        /* \"src/staking.sol\":10000:10023  IERC20(_ERC20).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/staking.sol\":10024:10029  _dest */\n      dup4\n        /* \"src/staking.sol\":10031:10043  _ERC20Amount */\n      dup4\n        /* \"src/staking.sol\":10000:10044  IERC20(_ERC20).transfer(_dest, _ERC20Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_226\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_226:\n        /* \"src/staking.sol\":9852:10051  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":1107:1125  IERC721 public nft */\n    tag_96:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":10333:10508  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_228:\n        /* \"src/staking.sol\":10432:10462  hasRole(_RESCUE, _msgSender()) */\n      tag_230\n        /* \"src/staking.sol\":1772:1792  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/staking.sol\":10449:10461  _msgSender() */\n      tag_231\n        /* \"src/staking.sol\":10449:10459  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":10449:10461  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"src/staking.sol\":10432:10439  hasRole */\n      tag_121\n        /* \"src/staking.sol\":10432:10462  hasRole(_RESCUE, _msgSender()) */\n      jump\t// in\n    tag_230:\n        /* \"src/staking.sol\":10424:10463  require(hasRole(_RESCUE, _msgSender())) */\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n        /* \"src/staking.sol\":10473:10478  _dest */\n      dup2\n        /* \"src/staking.sol\":10473:10487  _dest.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":10473:10501  _dest.transfer(_etherAmount) */\n      0x08fc\n        /* \"src/staking.sol\":10488:10500  _etherAmount */\n      dup3\n        /* \"src/staking.sol\":10473:10501  _dest.transfer(_etherAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_235:\n        /* \"src/staking.sol\":10333:10508  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":1798:1850  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n    tag_104:\n        /* \"src/staking.sol\":1831:1850  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/staking.sol\":1798:1850  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":1447:1473  uint256 public totalStaked */\n    tag_107:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":7839:7952  function getLevel(address user) public view returns (uint256) {... */\n    tag_111:\n        /* \"src/staking.sol\":7892:7899  uint256 */\n      0x00\n        /* \"src/staking.sol\":7918:7926  ifacenft */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":7918:7939  ifacenft.nftOwnerInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1ab0d49e\n        /* \"src/staking.sol\":7940:7944  user */\n      dup4\n        /* \"src/staking.sol\":7918:7945  ifacenft.nftOwnerInfo(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"src/staking.sol\":7911:7945  return ifacenft.nftOwnerInfo(user) */\n      swap1\n      pop\n        /* \"src/staking.sol\":7839:7952  function getLevel(address user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":1738:1792  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n    tag_114:\n        /* \"src/staking.sol\":1772:1792  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/staking.sol\":1738:1792  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":1281:1314  uint256 public rewardRatePerBlock */\n    tag_117:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":1357:1387  uint256 public lastUpdateBlock */\n    tag_127:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":1856:1910  bytes32 public constant _MINTER = keccak256(\"_MINTER\") */\n    tag_130:\n        /* \"src/staking.sol\":1890:1910  keccak256(\"_MINTER\") */\n      0x8c342c7aca7f35847406e6353e35c5762132fa3e958179931981d120af75dfb2\n        /* \"src/staking.sol\":1856:1910  bytes32 public constant _MINTER = keccak256(\"_MINTER\") */\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":3877:3963  function stake(uint256 _amount) external nonReentrant {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_245:\n        /* \"src/staking.sol\":3941:3956  _stake(_amount) */\n      tag_247\n        /* \"src/staking.sol\":3948:3955  _amount */\n      dup2\n        /* \"src/staking.sol\":3941:3947  _stake */\n      tag_248\n        /* \"src/staking.sol\":3941:3956  _stake(_amount) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_249\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_249:\n        /* \"src/staking.sol\":3877:3963  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":1201:1225  nftIface public ifacenft */\n    tag_136:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":8115:8412  function setRewardRatePerBlock(uint256 _newRewardRatePerBlock) external {... */\n    tag_141:\n        /* \"src/staking.sol\":8230:8231  0 */\n      0x00\n        /* \"src/staking.sol\":8205:8227  _newRewardRatePerBlock */\n      dup2\n        /* \"src/staking.sol\":8205:8231  _newRewardRatePerBlock > 0 */\n      gt\n        /* \"src/staking.sol\":8197:8264  require(_newRewardRatePerBlock > 0, \"Reward rate must be positive\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"src/staking.sol\":8282:8311  hasRole(_ADMIN, _msgSender()) */\n      tag_254\n        /* \"src/staking.sol\":1831:1850  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/staking.sol\":8298:8310  _msgSender() */\n      tag_255\n        /* \"src/staking.sol\":8298:8308  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":8298:8310  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"src/staking.sol\":8282:8289  hasRole */\n      tag_121\n        /* \"src/staking.sol\":8282:8311  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_254:\n        /* \"src/staking.sol\":8274:8312  require(hasRole(_ADMIN, _msgSender())) */\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n        /* \"src/staking.sol\":8343:8365  _newRewardRatePerBlock */\n      dup1\n        /* \"src/staking.sol\":8322:8340  rewardRatePerBlock */\n      0x05\n        /* \"src/staking.sol\":8322:8365  rewardRatePerBlock = _newRewardRatePerBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":8393:8405  block.number */\n      number\n        /* \"src/staking.sol\":8375:8390  lastUpdateBlock */\n      0x06\n        /* \"src/staking.sol\":8375:8405  lastUpdateBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":8115:8412  function setRewardRatePerBlock(uint256 _newRewardRatePerBlock) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_198\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_261:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":8553:8687  function setClaimInterval(uint256 _niw) external {... */\n    tag_147:\n        /* \"src/staking.sol\":8620:8649  hasRole(_ADMIN, _msgSender()) */\n      tag_263\n        /* \"src/staking.sol\":1831:1850  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/staking.sol\":8636:8648  _msgSender() */\n      tag_264\n        /* \"src/staking.sol\":8636:8646  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":8636:8648  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"src/staking.sol\":8620:8627  hasRole */\n      tag_121\n        /* \"src/staking.sol\":8620:8649  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_263:\n        /* \"src/staking.sol\":8612:8650  require(hasRole(_ADMIN, _msgSender())) */\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n        /* \"src/staking.sol\":8676:8680  _niw */\n      dup1\n        /* \"src/staking.sol\":8660:8673  claimInterval */\n      0x09\n        /* \"src/staking.sol\":8660:8680  claimInterval = _niw */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":8553:8687  function setClaimInterval(uint256 _niw) external {... */\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":9151:9279  function setNFT(IERC721 _newGoldNFT) external {... */\n    tag_151:\n        /* \"src/staking.sol\":9215:9244  hasRole(_ADMIN, _msgSender()) */\n      tag_267\n        /* \"src/staking.sol\":1831:1850  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/staking.sol\":9231:9243  _msgSender() */\n      tag_268\n        /* \"src/staking.sol\":9231:9241  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":9231:9243  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"src/staking.sol\":9215:9222  hasRole */\n      tag_121\n        /* \"src/staking.sol\":9215:9244  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_267:\n        /* \"src/staking.sol\":9207:9245  require(hasRole(_ADMIN, _msgSender())) */\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n        /* \"src/staking.sol\":9261:9272  _newGoldNFT */\n      dup1\n        /* \"src/staking.sol\":9255:9258  nft */\n      0x03\n      0x00\n        /* \"src/staking.sol\":9255:9272  nft = _newGoldNFT */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":9151:9279  function setNFT(IERC721 _newGoldNFT) external {... */\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":1016:1043  IMintableToken public token */\n    tag_153:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/staking.sol\":2449:2484  RewardLevelBonus public rewardBonus */\n    tag_157:\n      0x0a\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"src/staking.sol\":5394:6036  function _unstake(uint256 _amount) internal {... */\n    tag_191:\n        /* \"src/staking.sol\":5448:5469  UserInfo storage user */\n      0x00\n        /* \"src/staking.sol\":5472:5480  userInfo */\n      0x0d\n        /* \"src/staking.sol\":5472:5494  userInfo[_msgSender()] */\n      0x00\n        /* \"src/staking.sol\":5481:5493  _msgSender() */\n      tag_277\n        /* \"src/staking.sol\":5481:5491  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":5481:5493  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"src/staking.sol\":5472:5494  userInfo[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/staking.sol\":5448:5494  UserInfo storage user = userInfo[_msgSender()] */\n      swap1\n      pop\n        /* \"src/staking.sol\":5522:5523  0 */\n      0x00\n        /* \"src/staking.sol\":5512:5519  _amount */\n      dup3\n        /* \"src/staking.sol\":5512:5523  _amount > 0 */\n      gt\n        /* \"src/staking.sol\":5504:5571  require(_amount > 0, \"TokenStaking: Amount must be greater than 0\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"src/staking.sol\":5611:5618  _amount */\n      dup2\n        /* \"src/staking.sol\":5589:5593  user */\n      dup2\n        /* \"src/staking.sol\":5589:5607  user.stakedBalance */\n      0x00\n      add\n      sload\n        /* \"src/staking.sol\":5589:5618  user.stakedBalance >= _amount */\n      lt\n      iszero\n        /* \"src/staking.sol\":5581:5664  require(user.stakedBalance >= _amount, \"TokenStaking: Insufficient staked balance\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"src/staking.sol\":5720:5733  claimInterval */\n      sload(0x09)\n        /* \"src/staking.sol\":5698:5702  user */\n      dup2\n        /* \"src/staking.sol\":5698:5717  user.lastClaimBlock */\n      0x01\n      add\n      sload\n        /* \"src/staking.sol\":5698:5733  user.lastClaimBlock + claimInterval */\n      tag_284\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_284:\n        /* \"src/staking.sol\":5682:5694  block.number */\n      number\n        /* \"src/staking.sol\":5682:5733  block.number >= user.lastClaimBlock + claimInterval */\n      lt\n      iszero\n        /* \"src/staking.sol\":5674:5774  require(block.number >= user.lastClaimBlock + claimInterval, \"TokenStaking: Claim interval not met\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"src/staking.sol\":5785:5812  _claimRewards(_msgSender()) */\n      tag_288\n        /* \"src/staking.sol\":5799:5811  _msgSender() */\n      tag_289\n        /* \"src/staking.sol\":5799:5809  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":5799:5811  _msgSender() */\n      jump\t// in\n    tag_289:\n        /* \"src/staking.sol\":5785:5798  _claimRewards */\n      tag_212\n        /* \"src/staking.sol\":5785:5812  _claimRewards(_msgSender()) */\n      jump\t// in\n    tag_288:\n        /* \"src/staking.sol\":5845:5852  _amount */\n      dup2\n        /* \"src/staking.sol\":5823:5827  user */\n      dup2\n        /* \"src/staking.sol\":5823:5841  user.stakedBalance */\n      0x00\n      add\n      0x00\n        /* \"src/staking.sol\":5823:5852  user.stakedBalance -= _amount */\n      dup3\n      dup3\n      sload\n      tag_290\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_290:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":5877:5884  _amount */\n      dup2\n        /* \"src/staking.sol\":5862:5873  totalStaked */\n      0x07\n      0x00\n        /* \"src/staking.sol\":5862:5884  totalStaked -= _amount */\n      dup3\n      dup3\n      sload\n      tag_291\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_291:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":5903:5908  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":5903:5917  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/staking.sol\":5918:5930  _msgSender() */\n      tag_292\n        /* \"src/staking.sol\":5918:5928  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":5918:5930  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"src/staking.sol\":5932:5939  _amount */\n      dup5\n        /* \"src/staking.sol\":5903:5940  token.transfer(_msgSender(), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_293:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_296:\n        /* \"src/staking.sol\":5895:5982  require(token.transfer(_msgSender(), _amount), \"TokenStaking: Unstake transfer failed\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"src/staking.sol\":6007:6019  _msgSender() */\n      tag_300\n        /* \"src/staking.sol\":6007:6017  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":6007:6019  _msgSender() */\n      jump\t// in\n    tag_300:\n        /* \"src/staking.sol\":5998:6029  Unstaked(_msgSender(), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"src/staking.sol\":6021:6028  _amount */\n      dup4\n        /* \"src/staking.sol\":5998:6029  Unstaked(_msgSender(), _amount) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/staking.sol\":5438:6036  {... */\n      pop\n        /* \"src/staking.sol\":5394:6036  function _unstake(uint256 _amount) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_304\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_306\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_310\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_307)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_307:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_313\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_315\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_312)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_312:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":6186:6804  function _claimRewards(address staker) internal {... */\n    tag_212:\n        /* \"src/staking.sol\":6244:6265  UserInfo storage user */\n      0x00\n        /* \"src/staking.sol\":6268:6276  userInfo */\n      0x0d\n        /* \"src/staking.sol\":6268:6284  userInfo[staker] */\n      0x00\n        /* \"src/staking.sol\":6277:6283  staker */\n      dup4\n        /* \"src/staking.sol\":6268:6284  userInfo[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/staking.sol\":6244:6284  UserInfo storage user = userInfo[staker] */\n      swap1\n      pop\n        /* \"src/staking.sol\":6323:6324  0 */\n      0x00\n        /* \"src/staking.sol\":6302:6306  user */\n      dup2\n        /* \"src/staking.sol\":6302:6320  user.stakedBalance */\n      0x00\n      add\n      sload\n        /* \"src/staking.sol\":6302:6324  user.stakedBalance > 0 */\n      gt\n        /* \"src/staking.sol\":6294:6360  require(user.stakedBalance > 0, \"TokenStaking: No staked balance\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"src/staking.sol\":6416:6429  claimInterval */\n      sload(0x09)\n        /* \"src/staking.sol\":6394:6398  user */\n      dup2\n        /* \"src/staking.sol\":6394:6413  user.lastClaimBlock */\n      0x01\n      add\n      sload\n        /* \"src/staking.sol\":6394:6429  user.lastClaimBlock + claimInterval */\n      tag_321\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_321:\n        /* \"src/staking.sol\":6378:6390  block.number */\n      number\n        /* \"src/staking.sol\":6378:6429  block.number >= user.lastClaimBlock + claimInterval */\n      lt\n      iszero\n        /* \"src/staking.sol\":6370:6470  require(block.number >= user.lastClaimBlock + claimInterval, \"TokenStaking: Claim interval not met\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_287\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"src/staking.sol\":6481:6503  uint256 pendingRewards */\n      0x00\n        /* \"src/staking.sol\":6506:6537  calculatePendingRewards(staker) */\n      tag_324\n        /* \"src/staking.sol\":6530:6536  staker */\n      dup4\n        /* \"src/staking.sol\":6506:6529  calculatePendingRewards */\n      tag_51\n        /* \"src/staking.sol\":6506:6537  calculatePendingRewards(staker) */\n      jump\t// in\n    tag_324:\n        /* \"src/staking.sol\":6481:6537  uint256 pendingRewards = calculatePendingRewards(staker) */\n      swap1\n      pop\n        /* \"src/staking.sol\":6572:6573  0 */\n      0x00\n        /* \"src/staking.sol\":6555:6569  pendingRewards */\n      dup2\n        /* \"src/staking.sol\":6555:6573  pendingRewards > 0 */\n      gt\n        /* \"src/staking.sol\":6547:6611  require(pendingRewards > 0, \"TokenStaking: No rewards to claim\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"src/staking.sol\":6644:6656  block.number */\n      number\n        /* \"src/staking.sol\":6622:6626  user */\n      dup3\n        /* \"src/staking.sol\":6622:6641  user.lastClaimBlock */\n      0x01\n      add\n        /* \"src/staking.sol\":6622:6656  user.lastClaimBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":6682:6696  pendingRewards */\n      dup1\n        /* \"src/staking.sol\":6666:6678  totalRewards */\n      0x08\n      0x00\n        /* \"src/staking.sol\":6666:6696  totalRewards += pendingRewards */\n      dup3\n      dup3\n      sload\n      tag_328\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_328:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":6707:6712  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":6707:6719  token.mintTo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x449a52f8\n        /* \"src/staking.sol\":6720:6726  staker */\n      dup5\n        /* \"src/staking.sol\":6728:6742  pendingRewards */\n      dup4\n        /* \"src/staking.sol\":6707:6743  token.mintTo(staker, pendingRewards) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_329:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/staking.sol\":6774:6780  staker */\n      dup3\n        /* \"src/staking.sol\":6759:6797  ClaimedRewards(staker, pendingRewards) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2d5429efdeca7741a8cd94067b18d988bc4e5f1d5b8272c37b7bfc31e9bfa32c\n        /* \"src/staking.sol\":6782:6796  pendingRewards */\n      dup3\n        /* \"src/staking.sol\":6759:6797  ClaimedRewards(staker, pendingRewards) */\n      mload(0x40)\n      tag_333\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/staking.sol\":6234:6804  {... */\n      pop\n      pop\n        /* \"src/staking.sol\":6186:6804  function _claimRewards(address staker) internal {... */\n      pop\n      jump\t// out\n        /* \"src/staking.sol\":4583:5260  function _stake(uint256 _amount) internal {... */\n    tag_248:\n        /* \"src/staking.sol\":4653:4654  0 */\n      0x00\n        /* \"src/staking.sol\":4643:4650  _amount */\n      dup2\n        /* \"src/staking.sol\":4643:4654  _amount > 0 */\n      gt\n        /* \"src/staking.sol\":4635:4697  require(_amount > 0, \"Staking: Amount must be greater than 0\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"src/staking.sol\":4745:4746  0 */\n      0x00\n        /* \"src/staking.sol\":4715:4718  nft */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":4715:4728  nft.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/staking.sol\":4729:4741  _msgSender() */\n      tag_338\n        /* \"src/staking.sol\":4729:4739  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":4729:4741  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"src/staking.sol\":4715:4742  nft.balanceOf(_msgSender()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_339:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_342\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_342:\n        /* \"src/staking.sol\":4715:4746  nft.balanceOf(_msgSender()) > 0 */\n      gt\n        /* \"src/staking.sol\":4707:4774  require(nft.balanceOf(_msgSender()) > 0, \"Staking: No NFT balance\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"src/staking.sol\":4793:4798  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":4793:4806  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"src/staking.sol\":4815:4819  this */\n      address\n        /* \"src/staking.sol\":4822:4829  _amount */\n      dup4\n        /* \"src/staking.sol\":4793:4830  token.approve(address(this), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_346:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_348:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_349\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_349:\n        /* \"src/staking.sol\":4785:4859  require(token.approve(address(this), _amount), \"Staking: Approval failed\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"src/staking.sol\":4877:4882  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/staking.sol\":4877:4895  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/staking.sol\":4896:4908  _msgSender() */\n      tag_353\n        /* \"src/staking.sol\":4896:4906  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":4896:4908  _msgSender() */\n      jump\t// in\n    tag_353:\n        /* \"src/staking.sol\":4918:4922  this */\n      address\n        /* \"src/staking.sol\":4925:4932  _amount */\n      dup5\n        /* \"src/staking.sol\":4877:4933  token.transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_357\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_357:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_358\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_358:\n        /* \"src/staking.sol\":4869:4968  require(token.transferFrom(_msgSender(), address(this), _amount), \"Staking: Token transfer failed\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_359:\n        /* \"src/staking.sol\":4979:5000  UserInfo storage user */\n      0x00\n        /* \"src/staking.sol\":5003:5011  userInfo */\n      0x0d\n        /* \"src/staking.sol\":5003:5025  userInfo[_msgSender()] */\n      0x00\n        /* \"src/staking.sol\":5012:5024  _msgSender() */\n      tag_362\n        /* \"src/staking.sol\":5012:5022  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":5012:5024  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"src/staking.sol\":5003:5025  userInfo[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/staking.sol\":4979:5025  UserInfo storage user = userInfo[_msgSender()] */\n      swap1\n      pop\n        /* \"src/staking.sol\":5058:5065  _amount */\n      dup2\n        /* \"src/staking.sol\":5036:5040  user */\n      dup2\n        /* \"src/staking.sol\":5036:5054  user.stakedBalance */\n      0x00\n      add\n      0x00\n        /* \"src/staking.sol\":5036:5065  user.stakedBalance += _amount */\n      dup3\n      dup3\n      sload\n      tag_363\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_363:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":5105:5109  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/staking.sol\":5083:5087  user */\n      dup2\n        /* \"src/staking.sol\":5083:5101  user.stakedBalance */\n      0x00\n      add\n      sload\n        /* \"src/staking.sol\":5083:5109  user.stakedBalance <= 1e20 */\n      gt\n      iszero\n        /* \"src/staking.sol\":5075:5131  require(user.stakedBalance <= 1e20, \"Stake exceeds cap\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_364:\n        /* \"src/staking.sol\":5157:5164  _amount */\n      dup2\n        /* \"src/staking.sol\":5142:5153  totalStaked */\n      0x07\n      0x00\n        /* \"src/staking.sol\":5142:5164  totalStaked += _amount */\n      dup3\n      dup3\n      sload\n      tag_367\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_367:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":5196:5208  block.number */\n      number\n        /* \"src/staking.sol\":5174:5178  user */\n      dup2\n        /* \"src/staking.sol\":5174:5193  user.lastClaimBlock */\n      0x01\n      add\n        /* \"src/staking.sol\":5174:5208  user.lastClaimBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/staking.sol\":5231:5243  _msgSender() */\n      tag_368\n        /* \"src/staking.sol\":5231:5241  _msgSender */\n      tag_183\n        /* \"src/staking.sol\":5231:5243  _msgSender() */\n      jump\t// in\n    tag_368:\n        /* \"src/staking.sol\":5224:5253  Staked(_msgSender(), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"src/staking.sol\":5245:5252  _amount */\n      dup4\n        /* \"src/staking.sol\":5224:5253  Staked(_msgSender(), _amount) */\n      mload(0x40)\n      tag_369\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/staking.sol\":4625:5260  {... */\n      pop\n        /* \"src/staking.sol\":4583:5260  function _stake(uint256 _amount) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_371\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap3\n      swap2\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_376:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_378:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_379:\n        /* \"#utility.yul\":561:584   */\n      tag_456\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_378\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_457:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_380:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_459\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_379\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_44:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_462\n      tag_376\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":833:952   */\n    tag_461:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_463\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_380\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_381:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_382:\n        /* \"#utility.yul\":1268:1289   */\n      tag_466\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_381\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_47:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_468\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_382\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_383:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_384:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_471\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_383\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_385:\n        /* \"#utility.yul\":1825:1849   */\n      tag_473\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_384\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_474:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_386:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_476\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_385\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_50:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_479\n      tag_376\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2101:2220   */\n    tag_478:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_480\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_386\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_387:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_388:\n        /* \"#utility.yul\":2530:2554   */\n      tag_483\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_387\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_53:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_485\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_388\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2913   */\n    tag_389:\n        /* \"#utility.yul\":2854:2861   */\n      0x00\n        /* \"#utility.yul\":2883:2907   */\n      tag_487\n        /* \"#utility.yul\":2901:2906   */\n      dup3\n        /* \"#utility.yul\":2883:2907   */\n      tag_384\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2872:2907   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3085   */\n    tag_390:\n        /* \"#utility.yul\":3014:3060   */\n      tag_489\n        /* \"#utility.yul\":3054:3059   */\n      dup2\n        /* \"#utility.yul\":3014:3060   */\n      tag_389\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3007:3012   */\n      dup2\n        /* \"#utility.yul\":3004:3061   */\n      eq\n        /* \"#utility.yul\":2994:3079   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":3075:3076   */\n      0x00\n        /* \"#utility.yul\":3072:3073   */\n      dup1\n        /* \"#utility.yul\":3065:3077   */\n      revert\n        /* \"#utility.yul\":2994:3079   */\n    tag_490:\n        /* \"#utility.yul\":2919:3085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3091:3274   */\n    tag_391:\n        /* \"#utility.yul\":3159:3164   */\n      0x00\n        /* \"#utility.yul\":3197:3203   */\n      dup2\n        /* \"#utility.yul\":3184:3204   */\n      calldataload\n        /* \"#utility.yul\":3175:3204   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3268   */\n      tag_492\n        /* \"#utility.yul\":3262:3267   */\n      dup2\n        /* \"#utility.yul\":3213:3268   */\n      tag_390\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3091:3274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3280:3653   */\n    tag_62:\n        /* \"#utility.yul\":3361:3367   */\n      0x00\n        /* \"#utility.yul\":3410:3412   */\n      0x20\n        /* \"#utility.yul\":3398:3407   */\n      dup3\n        /* \"#utility.yul\":3389:3396   */\n      dup5\n        /* \"#utility.yul\":3385:3408   */\n      sub\n        /* \"#utility.yul\":3381:3413   */\n      slt\n        /* \"#utility.yul\":3378:3497   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":3416:3495   */\n      tag_495\n      tag_376\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3378:3497   */\n    tag_494:\n        /* \"#utility.yul\":3536:3537   */\n      0x00\n        /* \"#utility.yul\":3561:3636   */\n      tag_496\n        /* \"#utility.yul\":3628:3635   */\n      dup5\n        /* \"#utility.yul\":3619:3625   */\n      dup3\n        /* \"#utility.yul\":3608:3617   */\n      dup6\n        /* \"#utility.yul\":3604:3626   */\n      add\n        /* \"#utility.yul\":3561:3636   */\n      tag_391\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":3551:3636   */\n      swap2\n      pop\n        /* \"#utility.yul\":3507:3646   */\n      pop\n        /* \"#utility.yul\":3280:3653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3659:3991   */\n    tag_68:\n        /* \"#utility.yul\":3780:3784   */\n      0x00\n        /* \"#utility.yul\":3818:3820   */\n      0x40\n        /* \"#utility.yul\":3807:3816   */\n      dup3\n        /* \"#utility.yul\":3803:3821   */\n      add\n        /* \"#utility.yul\":3795:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3831:3902   */\n      tag_498\n        /* \"#utility.yul\":3899:3900   */\n      0x00\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3884:3901   */\n      add\n        /* \"#utility.yul\":3875:3881   */\n      dup6\n        /* \"#utility.yul\":3831:3902   */\n      tag_388\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":3912:3984   */\n      tag_499\n        /* \"#utility.yul\":3980:3982   */\n      0x20\n        /* \"#utility.yul\":3969:3978   */\n      dup4\n        /* \"#utility.yul\":3965:3983   */\n      add\n        /* \"#utility.yul\":3956:3962   */\n      dup5\n        /* \"#utility.yul\":3912:3984   */\n      tag_388\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3659:3991   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4074   */\n    tag_392:\n        /* \"#utility.yul\":4034:4041   */\n      0x00\n        /* \"#utility.yul\":4063:4068   */\n      dup2\n        /* \"#utility.yul\":4052:4068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3997:4074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4202   */\n    tag_393:\n        /* \"#utility.yul\":4153:4177   */\n      tag_502\n        /* \"#utility.yul\":4171:4176   */\n      dup2\n        /* \"#utility.yul\":4153:4177   */\n      tag_392\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4146:4151   */\n      dup2\n        /* \"#utility.yul\":4143:4178   */\n      eq\n        /* \"#utility.yul\":4133:4196   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4189:4190   */\n      dup1\n        /* \"#utility.yul\":4182:4194   */\n      revert\n        /* \"#utility.yul\":4133:4196   */\n    tag_503:\n        /* \"#utility.yul\":4080:4202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4347   */\n    tag_394:\n        /* \"#utility.yul\":4254:4259   */\n      0x00\n        /* \"#utility.yul\":4292:4298   */\n      dup2\n        /* \"#utility.yul\":4279:4299   */\n      calldataload\n        /* \"#utility.yul\":4270:4299   */\n      swap1\n      pop\n        /* \"#utility.yul\":4308:4341   */\n      tag_505\n        /* \"#utility.yul\":4335:4340   */\n      dup2\n        /* \"#utility.yul\":4308:4341   */\n      tag_393\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4208:4347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4353:4682   */\n    tag_71:\n        /* \"#utility.yul\":4412:4418   */\n      0x00\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"#utility.yul\":4449:4458   */\n      dup3\n        /* \"#utility.yul\":4440:4447   */\n      dup5\n        /* \"#utility.yul\":4436:4459   */\n      sub\n        /* \"#utility.yul\":4432:4464   */\n      slt\n        /* \"#utility.yul\":4429:4548   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":4467:4546   */\n      tag_508\n      tag_376\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":4429:4548   */\n    tag_507:\n        /* \"#utility.yul\":4587:4588   */\n      0x00\n        /* \"#utility.yul\":4612:4665   */\n      tag_509\n        /* \"#utility.yul\":4657:4664   */\n      dup5\n        /* \"#utility.yul\":4648:4654   */\n      dup3\n        /* \"#utility.yul\":4637:4646   */\n      dup6\n        /* \"#utility.yul\":4633:4655   */\n      add\n        /* \"#utility.yul\":4612:4665   */\n      tag_394\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4602:4665   */\n      swap2\n      pop\n        /* \"#utility.yul\":4558:4675   */\n      pop\n        /* \"#utility.yul\":4353:4682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4688:4806   */\n    tag_395:\n        /* \"#utility.yul\":4775:4799   */\n      tag_511\n        /* \"#utility.yul\":4793:4798   */\n      dup2\n        /* \"#utility.yul\":4775:4799   */\n      tag_392\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":4770:4773   */\n      dup3\n        /* \"#utility.yul\":4763:4800   */\n      mstore\n        /* \"#utility.yul\":4688:4806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4812:5034   */\n    tag_74:\n        /* \"#utility.yul\":4905:4909   */\n      0x00\n        /* \"#utility.yul\":4943:4945   */\n      0x20\n        /* \"#utility.yul\":4932:4941   */\n      dup3\n        /* \"#utility.yul\":4928:4946   */\n      add\n        /* \"#utility.yul\":4920:4946   */\n      swap1\n      pop\n        /* \"#utility.yul\":4956:5027   */\n      tag_513\n        /* \"#utility.yul\":5024:5025   */\n      0x00\n        /* \"#utility.yul\":5013:5022   */\n      dup4\n        /* \"#utility.yul\":5009:5026   */\n      add\n        /* \"#utility.yul\":5000:5006   */\n      dup5\n        /* \"#utility.yul\":4956:5027   */\n      tag_395\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":4812:5034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5040:5162   */\n    tag_396:\n        /* \"#utility.yul\":5113:5137   */\n      tag_515\n        /* \"#utility.yul\":5131:5136   */\n      dup2\n        /* \"#utility.yul\":5113:5137   */\n      tag_387\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5106:5111   */\n      dup2\n        /* \"#utility.yul\":5103:5138   */\n      eq\n        /* \"#utility.yul\":5093:5156   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":5152:5153   */\n      0x00\n        /* \"#utility.yul\":5149:5150   */\n      dup1\n        /* \"#utility.yul\":5142:5154   */\n      revert\n        /* \"#utility.yul\":5093:5156   */\n    tag_516:\n        /* \"#utility.yul\":5040:5162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5168:5307   */\n    tag_397:\n        /* \"#utility.yul\":5214:5219   */\n      0x00\n        /* \"#utility.yul\":5252:5258   */\n      dup2\n        /* \"#utility.yul\":5239:5259   */\n      calldataload\n        /* \"#utility.yul\":5230:5259   */\n      swap1\n      pop\n        /* \"#utility.yul\":5268:5301   */\n      tag_518\n        /* \"#utility.yul\":5295:5300   */\n      dup2\n        /* \"#utility.yul\":5268:5301   */\n      tag_396\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5168:5307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5313:5642   */\n    tag_77:\n        /* \"#utility.yul\":5372:5378   */\n      0x00\n        /* \"#utility.yul\":5421:5423   */\n      0x20\n        /* \"#utility.yul\":5409:5418   */\n      dup3\n        /* \"#utility.yul\":5400:5407   */\n      dup5\n        /* \"#utility.yul\":5396:5419   */\n      sub\n        /* \"#utility.yul\":5392:5424   */\n      slt\n        /* \"#utility.yul\":5389:5508   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":5427:5506   */\n      tag_521\n      tag_376\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5389:5508   */\n    tag_520:\n        /* \"#utility.yul\":5547:5548   */\n      0x00\n        /* \"#utility.yul\":5572:5625   */\n      tag_522\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5608:5614   */\n      dup3\n        /* \"#utility.yul\":5597:5606   */\n      dup6\n        /* \"#utility.yul\":5593:5615   */\n      add\n        /* \"#utility.yul\":5572:5625   */\n      tag_397\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5562:5625   */\n      swap2\n      pop\n        /* \"#utility.yul\":5518:5635   */\n      pop\n        /* \"#utility.yul\":5313:5642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5648:6122   */\n    tag_84:\n        /* \"#utility.yul\":5716:5722   */\n      0x00\n        /* \"#utility.yul\":5724:5730   */\n      dup1\n        /* \"#utility.yul\":5773:5775   */\n      0x40\n        /* \"#utility.yul\":5761:5770   */\n      dup4\n        /* \"#utility.yul\":5752:5759   */\n      dup6\n        /* \"#utility.yul\":5748:5771   */\n      sub\n        /* \"#utility.yul\":5744:5776   */\n      slt\n        /* \"#utility.yul\":5741:5860   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":5779:5858   */\n      tag_525\n      tag_376\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5741:5860   */\n    tag_524:\n        /* \"#utility.yul\":5899:5900   */\n      0x00\n        /* \"#utility.yul\":5924:5977   */\n      tag_526\n        /* \"#utility.yul\":5969:5976   */\n      dup6\n        /* \"#utility.yul\":5960:5966   */\n      dup3\n        /* \"#utility.yul\":5949:5958   */\n      dup7\n        /* \"#utility.yul\":5945:5967   */\n      add\n        /* \"#utility.yul\":5924:5977   */\n      tag_394\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":5914:5977   */\n      swap3\n      pop\n        /* \"#utility.yul\":5870:5987   */\n      pop\n        /* \"#utility.yul\":6026:6028   */\n      0x20\n        /* \"#utility.yul\":6052:6105   */\n      tag_527\n        /* \"#utility.yul\":6097:6104   */\n      dup6\n        /* \"#utility.yul\":6088:6094   */\n      dup3\n        /* \"#utility.yul\":6077:6086   */\n      dup7\n        /* \"#utility.yul\":6073:6095   */\n      add\n        /* \"#utility.yul\":6052:6105   */\n      tag_386\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6042:6105   */\n      swap2\n      pop\n        /* \"#utility.yul\":5997:6115   */\n      pop\n        /* \"#utility.yul\":5648:6122   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6128:6238   */\n    tag_398:\n        /* \"#utility.yul\":6179:6186   */\n      0x00\n        /* \"#utility.yul\":6208:6232   */\n      tag_529\n        /* \"#utility.yul\":6226:6231   */\n      dup3\n        /* \"#utility.yul\":6208:6232   */\n      tag_384\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6197:6232   */\n      swap1\n      pop\n        /* \"#utility.yul\":6128:6238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6244:6394   */\n    tag_399:\n        /* \"#utility.yul\":6331:6369   */\n      tag_531\n        /* \"#utility.yul\":6363:6368   */\n      dup2\n        /* \"#utility.yul\":6331:6369   */\n      tag_398\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6324:6329   */\n      dup2\n        /* \"#utility.yul\":6321:6370   */\n      eq\n        /* \"#utility.yul\":6311:6388   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":6384:6385   */\n      0x00\n        /* \"#utility.yul\":6381:6382   */\n      dup1\n        /* \"#utility.yul\":6374:6386   */\n      revert\n        /* \"#utility.yul\":6311:6388   */\n    tag_532:\n        /* \"#utility.yul\":6244:6394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6400:6567   */\n    tag_400:\n        /* \"#utility.yul\":6460:6465   */\n      0x00\n        /* \"#utility.yul\":6498:6504   */\n      dup2\n        /* \"#utility.yul\":6485:6505   */\n      calldataload\n        /* \"#utility.yul\":6476:6505   */\n      swap1\n      pop\n        /* \"#utility.yul\":6514:6561   */\n      tag_534\n        /* \"#utility.yul\":6555:6560   */\n      dup2\n        /* \"#utility.yul\":6514:6561   */\n      tag_399\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":6400:6567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6573:7220   */\n    tag_93:\n        /* \"#utility.yul\":6664:6670   */\n      0x00\n        /* \"#utility.yul\":6672:6678   */\n      dup1\n        /* \"#utility.yul\":6680:6686   */\n      0x00\n        /* \"#utility.yul\":6729:6731   */\n      0x60\n        /* \"#utility.yul\":6717:6726   */\n      dup5\n        /* \"#utility.yul\":6708:6715   */\n      dup7\n        /* \"#utility.yul\":6704:6727   */\n      sub\n        /* \"#utility.yul\":6700:6732   */\n      slt\n        /* \"#utility.yul\":6697:6816   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":6735:6814   */\n      tag_537\n      tag_376\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6697:6816   */\n    tag_536:\n        /* \"#utility.yul\":6855:6856   */\n      0x00\n        /* \"#utility.yul\":6880:6947   */\n      tag_538\n        /* \"#utility.yul\":6939:6946   */\n      dup7\n        /* \"#utility.yul\":6930:6936   */\n      dup3\n        /* \"#utility.yul\":6919:6928   */\n      dup8\n        /* \"#utility.yul\":6915:6937   */\n      add\n        /* \"#utility.yul\":6880:6947   */\n      tag_400\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":6870:6947   */\n      swap4\n      pop\n        /* \"#utility.yul\":6826:6957   */\n      pop\n        /* \"#utility.yul\":6996:6998   */\n      0x20\n        /* \"#utility.yul\":7022:7075   */\n      tag_539\n        /* \"#utility.yul\":7067:7074   */\n      dup7\n        /* \"#utility.yul\":7058:7064   */\n      dup3\n        /* \"#utility.yul\":7047:7056   */\n      dup8\n        /* \"#utility.yul\":7043:7065   */\n      add\n        /* \"#utility.yul\":7022:7075   */\n      tag_386\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7012:7075   */\n      swap3\n      pop\n        /* \"#utility.yul\":6967:7085   */\n      pop\n        /* \"#utility.yul\":7124:7126   */\n      0x40\n        /* \"#utility.yul\":7150:7203   */\n      tag_540\n        /* \"#utility.yul\":7195:7202   */\n      dup7\n        /* \"#utility.yul\":7186:7192   */\n      dup3\n        /* \"#utility.yul\":7175:7184   */\n      dup8\n        /* \"#utility.yul\":7171:7193   */\n      add\n        /* \"#utility.yul\":7150:7203   */\n      tag_397\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7140:7203   */\n      swap2\n      pop\n        /* \"#utility.yul\":7095:7213   */\n      pop\n        /* \"#utility.yul\":6573:7220   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7226:7286   */\n    tag_401:\n        /* \"#utility.yul\":7254:7257   */\n      0x00\n        /* \"#utility.yul\":7275:7280   */\n      dup2\n        /* \"#utility.yul\":7268:7280   */\n      swap1\n      pop\n        /* \"#utility.yul\":7226:7286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7292:7434   */\n    tag_402:\n        /* \"#utility.yul\":7342:7351   */\n      0x00\n        /* \"#utility.yul\":7375:7428   */\n      tag_543\n        /* \"#utility.yul\":7393:7427   */\n      tag_544\n        /* \"#utility.yul\":7402:7426   */\n      tag_545\n        /* \"#utility.yul\":7420:7425   */\n      dup5\n        /* \"#utility.yul\":7402:7426   */\n      tag_383\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7393:7427   */\n      tag_401\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7375:7428   */\n      tag_383\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7362:7428   */\n      swap1\n      pop\n        /* \"#utility.yul\":7292:7434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7440:7566   */\n    tag_403:\n        /* \"#utility.yul\":7490:7499   */\n      0x00\n        /* \"#utility.yul\":7523:7560   */\n      tag_547\n        /* \"#utility.yul\":7554:7559   */\n      dup3\n        /* \"#utility.yul\":7523:7560   */\n      tag_402\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":7510:7560   */\n      swap1\n      pop\n        /* \"#utility.yul\":7440:7566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7572:7713   */\n    tag_404:\n        /* \"#utility.yul\":7637:7646   */\n      0x00\n        /* \"#utility.yul\":7670:7707   */\n      tag_549\n        /* \"#utility.yul\":7701:7706   */\n      dup3\n        /* \"#utility.yul\":7670:7707   */\n      tag_403\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":7657:7707   */\n      swap1\n      pop\n        /* \"#utility.yul\":7572:7713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7719:7880   */\n    tag_405:\n        /* \"#utility.yul\":7821:7873   */\n      tag_551\n        /* \"#utility.yul\":7867:7872   */\n      dup2\n        /* \"#utility.yul\":7821:7873   */\n      tag_404\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7816:7819   */\n      dup3\n        /* \"#utility.yul\":7809:7874   */\n      mstore\n        /* \"#utility.yul\":7719:7880   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7886:8138   */\n    tag_98:\n        /* \"#utility.yul\":7994:7998   */\n      0x00\n        /* \"#utility.yul\":8032:8034   */\n      0x20\n        /* \"#utility.yul\":8021:8030   */\n      dup3\n        /* \"#utility.yul\":8017:8035   */\n      add\n        /* \"#utility.yul\":8009:8035   */\n      swap1\n      pop\n        /* \"#utility.yul\":8045:8131   */\n      tag_553\n        /* \"#utility.yul\":8128:8129   */\n      0x00\n        /* \"#utility.yul\":8117:8126   */\n      dup4\n        /* \"#utility.yul\":8113:8130   */\n      add\n        /* \"#utility.yul\":8104:8110   */\n      dup5\n        /* \"#utility.yul\":8045:8131   */\n      tag_405\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":7886:8138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8144:8248   */\n    tag_406:\n        /* \"#utility.yul\":8189:8196   */\n      0x00\n        /* \"#utility.yul\":8218:8242   */\n      tag_555\n        /* \"#utility.yul\":8236:8241   */\n      dup3\n        /* \"#utility.yul\":8218:8242   */\n      tag_383\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8207:8242   */\n      swap1\n      pop\n        /* \"#utility.yul\":8144:8248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8254:8392   */\n    tag_407:\n        /* \"#utility.yul\":8335:8367   */\n      tag_557\n        /* \"#utility.yul\":8361:8366   */\n      dup2\n        /* \"#utility.yul\":8335:8367   */\n      tag_406\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":8328:8333   */\n      dup2\n        /* \"#utility.yul\":8325:8368   */\n      eq\n        /* \"#utility.yul\":8315:8386   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":8382:8383   */\n      0x00\n        /* \"#utility.yul\":8379:8380   */\n      dup1\n        /* \"#utility.yul\":8372:8384   */\n      revert\n        /* \"#utility.yul\":8315:8386   */\n    tag_558:\n        /* \"#utility.yul\":8254:8392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8398:8553   */\n    tag_408:\n        /* \"#utility.yul\":8452:8457   */\n      0x00\n        /* \"#utility.yul\":8490:8496   */\n      dup2\n        /* \"#utility.yul\":8477:8497   */\n      calldataload\n        /* \"#utility.yul\":8468:8497   */\n      swap1\n      pop\n        /* \"#utility.yul\":8506:8547   */\n      tag_560\n        /* \"#utility.yul\":8541:8546   */\n      dup2\n        /* \"#utility.yul\":8506:8547   */\n      tag_407\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":8398:8553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8559:9049   */\n    tag_101:\n        /* \"#utility.yul\":8635:8641   */\n      0x00\n        /* \"#utility.yul\":8643:8649   */\n      dup1\n        /* \"#utility.yul\":8692:8694   */\n      0x40\n        /* \"#utility.yul\":8680:8689   */\n      dup4\n        /* \"#utility.yul\":8671:8678   */\n      dup6\n        /* \"#utility.yul\":8667:8690   */\n      sub\n        /* \"#utility.yul\":8663:8695   */\n      slt\n        /* \"#utility.yul\":8660:8779   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":8698:8777   */\n      tag_563\n      tag_376\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":8660:8779   */\n    tag_562:\n        /* \"#utility.yul\":8818:8819   */\n      0x00\n        /* \"#utility.yul\":8843:8904   */\n      tag_564\n        /* \"#utility.yul\":8896:8903   */\n      dup6\n        /* \"#utility.yul\":8887:8893   */\n      dup3\n        /* \"#utility.yul\":8876:8885   */\n      dup7\n        /* \"#utility.yul\":8872:8894   */\n      add\n        /* \"#utility.yul\":8843:8904   */\n      tag_408\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":8833:8904   */\n      swap3\n      pop\n        /* \"#utility.yul\":8789:8914   */\n      pop\n        /* \"#utility.yul\":8953:8955   */\n      0x20\n        /* \"#utility.yul\":8979:9032   */\n      tag_565\n        /* \"#utility.yul\":9024:9031   */\n      dup6\n        /* \"#utility.yul\":9015:9021   */\n      dup3\n        /* \"#utility.yul\":9004:9013   */\n      dup7\n        /* \"#utility.yul\":9000:9022   */\n      add\n        /* \"#utility.yul\":8979:9032   */\n      tag_397\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":8969:9032   */\n      swap2\n      pop\n        /* \"#utility.yul\":8924:9042   */\n      pop\n        /* \"#utility.yul\":8559:9049   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9055:9197   */\n    tag_409:\n        /* \"#utility.yul\":9121:9130   */\n      0x00\n        /* \"#utility.yul\":9154:9191   */\n      tag_567\n        /* \"#utility.yul\":9185:9190   */\n      dup3\n        /* \"#utility.yul\":9154:9191   */\n      tag_403\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":9141:9191   */\n      swap1\n      pop\n        /* \"#utility.yul\":9055:9197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9203:9366   */\n    tag_410:\n        /* \"#utility.yul\":9306:9359   */\n      tag_569\n        /* \"#utility.yul\":9353:9358   */\n      dup2\n        /* \"#utility.yul\":9306:9359   */\n      tag_409\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":9301:9304   */\n      dup3\n        /* \"#utility.yul\":9294:9360   */\n      mstore\n        /* \"#utility.yul\":9203:9366   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9372:9626   */\n    tag_138:\n        /* \"#utility.yul\":9481:9485   */\n      0x00\n        /* \"#utility.yul\":9519:9521   */\n      0x20\n        /* \"#utility.yul\":9508:9517   */\n      dup3\n        /* \"#utility.yul\":9504:9522   */\n      add\n        /* \"#utility.yul\":9496:9522   */\n      swap1\n      pop\n        /* \"#utility.yul\":9532:9619   */\n      tag_571\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9592:9598   */\n      dup5\n        /* \"#utility.yul\":9532:9619   */\n      tag_410\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":9372:9626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9632:9743   */\n    tag_411:\n        /* \"#utility.yul\":9684:9691   */\n      0x00\n        /* \"#utility.yul\":9713:9737   */\n      tag_573\n        /* \"#utility.yul\":9731:9736   */\n      dup3\n        /* \"#utility.yul\":9713:9737   */\n      tag_384\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":9702:9737   */\n      swap1\n      pop\n        /* \"#utility.yul\":9632:9743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9749:9901   */\n    tag_412:\n        /* \"#utility.yul\":9837:9876   */\n      tag_575\n        /* \"#utility.yul\":9870:9875   */\n      dup2\n        /* \"#utility.yul\":9837:9876   */\n      tag_411\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":9830:9835   */\n      dup2\n        /* \"#utility.yul\":9827:9877   */\n      eq\n        /* \"#utility.yul\":9817:9895   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":9891:9892   */\n      0x00\n        /* \"#utility.yul\":9888:9889   */\n      dup1\n        /* \"#utility.yul\":9881:9893   */\n      revert\n        /* \"#utility.yul\":9817:9895   */\n    tag_576:\n        /* \"#utility.yul\":9749:9901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9907:10076   */\n    tag_413:\n        /* \"#utility.yul\":9968:9973   */\n      0x00\n        /* \"#utility.yul\":10006:10012   */\n      dup2\n        /* \"#utility.yul\":9993:10013   */\n      calldataload\n        /* \"#utility.yul\":9984:10013   */\n      swap1\n      pop\n        /* \"#utility.yul\":10022:10070   */\n      tag_578\n        /* \"#utility.yul\":10064:10069   */\n      dup2\n        /* \"#utility.yul\":10022:10070   */\n      tag_412\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":9907:10076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10082:10441   */\n    tag_150:\n        /* \"#utility.yul\":10156:10162   */\n      0x00\n        /* \"#utility.yul\":10205:10207   */\n      0x20\n        /* \"#utility.yul\":10193:10202   */\n      dup3\n        /* \"#utility.yul\":10184:10191   */\n      dup5\n        /* \"#utility.yul\":10180:10203   */\n      sub\n        /* \"#utility.yul\":10176:10208   */\n      slt\n        /* \"#utility.yul\":10173:10292   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":10211:10290   */\n      tag_581\n      tag_376\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":10173:10292   */\n    tag_580:\n        /* \"#utility.yul\":10331:10332   */\n      0x00\n        /* \"#utility.yul\":10356:10424   */\n      tag_582\n        /* \"#utility.yul\":10416:10423   */\n      dup5\n        /* \"#utility.yul\":10407:10413   */\n      dup3\n        /* \"#utility.yul\":10396:10405   */\n      dup6\n        /* \"#utility.yul\":10392:10414   */\n      add\n        /* \"#utility.yul\":10356:10424   */\n      tag_413\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":10346:10424   */\n      swap2\n      pop\n        /* \"#utility.yul\":10302:10434   */\n      pop\n        /* \"#utility.yul\":10082:10441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10447:10595   */\n    tag_414:\n        /* \"#utility.yul\":10519:10528   */\n      0x00\n        /* \"#utility.yul\":10552:10589   */\n      tag_584\n        /* \"#utility.yul\":10583:10588   */\n      dup3\n        /* \"#utility.yul\":10552:10589   */\n      tag_403\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":10539:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10447:10595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10601:10776   */\n    tag_415:\n        /* \"#utility.yul\":10710:10769   */\n      tag_586\n        /* \"#utility.yul\":10763:10768   */\n      dup2\n        /* \"#utility.yul\":10710:10769   */\n      tag_414\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10705:10708   */\n      dup3\n        /* \"#utility.yul\":10698:10770   */\n      mstore\n        /* \"#utility.yul\":10601:10776   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10782:11048   */\n    tag_155:\n        /* \"#utility.yul\":10897:10901   */\n      0x00\n        /* \"#utility.yul\":10935:10937   */\n      0x20\n        /* \"#utility.yul\":10924:10933   */\n      dup3\n        /* \"#utility.yul\":10920:10938   */\n      add\n        /* \"#utility.yul\":10912:10938   */\n      swap1\n      pop\n        /* \"#utility.yul\":10948:11041   */\n      tag_588\n        /* \"#utility.yul\":11038:11039   */\n      0x00\n        /* \"#utility.yul\":11027:11036   */\n      dup4\n        /* \"#utility.yul\":11023:11040   */\n      add\n        /* \"#utility.yul\":11014:11020   */\n      dup5\n        /* \"#utility.yul\":10948:11041   */\n      tag_415\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":10782:11048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11054:11496   */\n    tag_159:\n        /* \"#utility.yul\":11203:11207   */\n      0x00\n        /* \"#utility.yul\":11241:11243   */\n      0x60\n        /* \"#utility.yul\":11230:11239   */\n      dup3\n        /* \"#utility.yul\":11226:11244   */\n      add\n        /* \"#utility.yul\":11218:11244   */\n      swap1\n      pop\n        /* \"#utility.yul\":11254:11325   */\n      tag_590\n        /* \"#utility.yul\":11322:11323   */\n      0x00\n        /* \"#utility.yul\":11311:11320   */\n      dup4\n        /* \"#utility.yul\":11307:11324   */\n      add\n        /* \"#utility.yul\":11298:11304   */\n      dup7\n        /* \"#utility.yul\":11254:11325   */\n      tag_388\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":11335:11407   */\n      tag_591\n        /* \"#utility.yul\":11403:11405   */\n      0x20\n        /* \"#utility.yul\":11392:11401   */\n      dup4\n        /* \"#utility.yul\":11388:11406   */\n      add\n        /* \"#utility.yul\":11379:11385   */\n      dup6\n        /* \"#utility.yul\":11335:11407   */\n      tag_388\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":11417:11489   */\n      tag_592\n        /* \"#utility.yul\":11485:11487   */\n      0x40\n        /* \"#utility.yul\":11474:11483   */\n      dup4\n        /* \"#utility.yul\":11470:11488   */\n      add\n        /* \"#utility.yul\":11461:11467   */\n      dup5\n        /* \"#utility.yul\":11417:11489   */\n      tag_388\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":11054:11496   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11502:11671   */\n    tag_416:\n        /* \"#utility.yul\":11586:11597   */\n      0x00\n        /* \"#utility.yul\":11620:11626   */\n      dup3\n        /* \"#utility.yul\":11615:11618   */\n      dup3\n        /* \"#utility.yul\":11608:11627   */\n      mstore\n        /* \"#utility.yul\":11660:11664   */\n      0x20\n        /* \"#utility.yul\":11655:11658   */\n      dup3\n        /* \"#utility.yul\":11651:11665   */\n      add\n        /* \"#utility.yul\":11636:11665   */\n      swap1\n      pop\n        /* \"#utility.yul\":11502:11671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11677:11839   */\n    tag_417:\n        /* \"#utility.yul\":11817:11831   */\n      0x4e6f204e4654204c6576656c0000000000000000000000000000000000000000\n        /* \"#utility.yul\":11813:11814   */\n      0x00\n        /* \"#utility.yul\":11805:11811   */\n      dup3\n        /* \"#utility.yul\":11801:11815   */\n      add\n        /* \"#utility.yul\":11794:11832   */\n      mstore\n        /* \"#utility.yul\":11677:11839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11845:12211   */\n    tag_418:\n        /* \"#utility.yul\":11987:11990   */\n      0x00\n        /* \"#utility.yul\":12008:12075   */\n      tag_596\n        /* \"#utility.yul\":12072:12074   */\n      0x0c\n        /* \"#utility.yul\":12067:12070   */\n      dup4\n        /* \"#utility.yul\":12008:12075   */\n      tag_416\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":12001:12075   */\n      swap2\n      pop\n        /* \"#utility.yul\":12084:12177   */\n      tag_597\n        /* \"#utility.yul\":12173:12176   */\n      dup3\n        /* \"#utility.yul\":12084:12177   */\n      tag_417\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":12202:12204   */\n      0x20\n        /* \"#utility.yul\":12197:12200   */\n      dup3\n        /* \"#utility.yul\":12193:12205   */\n      add\n        /* \"#utility.yul\":12186:12205   */\n      swap1\n      pop\n        /* \"#utility.yul\":11845:12211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12217:12636   */\n    tag_173:\n        /* \"#utility.yul\":12383:12387   */\n      0x00\n        /* \"#utility.yul\":12421:12423   */\n      0x20\n        /* \"#utility.yul\":12410:12419   */\n      dup3\n        /* \"#utility.yul\":12406:12424   */\n      add\n        /* \"#utility.yul\":12398:12424   */\n      swap1\n      pop\n        /* \"#utility.yul\":12470:12479   */\n      dup2\n        /* \"#utility.yul\":12464:12468   */\n      dup2\n        /* \"#utility.yul\":12460:12480   */\n      sub\n        /* \"#utility.yul\":12456:12457   */\n      0x00\n        /* \"#utility.yul\":12445:12454   */\n      dup4\n        /* \"#utility.yul\":12441:12458   */\n      add\n        /* \"#utility.yul\":12434:12481   */\n      mstore\n        /* \"#utility.yul\":12498:12629   */\n      tag_599\n        /* \"#utility.yul\":12624:12628   */\n      dup2\n        /* \"#utility.yul\":12498:12629   */\n      tag_418\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":12490:12629   */\n      swap1\n      pop\n        /* \"#utility.yul\":12217:12636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12642:12822   */\n    tag_419:\n        /* \"#utility.yul\":12690:12767   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12687:12688   */\n      0x00\n        /* \"#utility.yul\":12680:12768   */\n      mstore\n        /* \"#utility.yul\":12787:12791   */\n      0x11\n        /* \"#utility.yul\":12784:12785   */\n      0x04\n        /* \"#utility.yul\":12777:12792   */\n      mstore\n        /* \"#utility.yul\":12811:12815   */\n      0x24\n        /* \"#utility.yul\":12808:12809   */\n      0x00\n        /* \"#utility.yul\":12801:12816   */\n      revert\n        /* \"#utility.yul\":12828:13022   */\n    tag_175:\n        /* \"#utility.yul\":12868:12872   */\n      0x00\n        /* \"#utility.yul\":12888:12908   */\n      tag_602\n        /* \"#utility.yul\":12906:12907   */\n      dup3\n        /* \"#utility.yul\":12888:12908   */\n      tag_387\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":12883:12908   */\n      swap2\n      pop\n        /* \"#utility.yul\":12922:12942   */\n      tag_603\n        /* \"#utility.yul\":12940:12941   */\n      dup4\n        /* \"#utility.yul\":12922:12942   */\n      tag_387\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":12917:12942   */\n      swap3\n      pop\n        /* \"#utility.yul\":12966:12967   */\n      dup3\n        /* \"#utility.yul\":12963:12964   */\n      dup3\n        /* \"#utility.yul\":12959:12968   */\n      sub\n        /* \"#utility.yul\":12951:12968   */\n      swap1\n      pop\n        /* \"#utility.yul\":12990:12991   */\n      dup2\n        /* \"#utility.yul\":12984:12988   */\n      dup2\n        /* \"#utility.yul\":12981:12992   */\n      gt\n        /* \"#utility.yul\":12978:13015   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":12995:13013   */\n      tag_605\n      tag_419\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":12978:13015   */\n    tag_604:\n        /* \"#utility.yul\":12828:13022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13028:13219   */\n    tag_177:\n        /* \"#utility.yul\":13068:13071   */\n      0x00\n        /* \"#utility.yul\":13087:13107   */\n      tag_607\n        /* \"#utility.yul\":13105:13106   */\n      dup3\n        /* \"#utility.yul\":13087:13107   */\n      tag_387\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":13082:13107   */\n      swap2\n      pop\n        /* \"#utility.yul\":13121:13141   */\n      tag_608\n        /* \"#utility.yul\":13139:13140   */\n      dup4\n        /* \"#utility.yul\":13121:13141   */\n      tag_387\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":13116:13141   */\n      swap3\n      pop\n        /* \"#utility.yul\":13164:13165   */\n      dup3\n        /* \"#utility.yul\":13161:13162   */\n      dup3\n        /* \"#utility.yul\":13157:13166   */\n      add\n        /* \"#utility.yul\":13150:13166   */\n      swap1\n      pop\n        /* \"#utility.yul\":13185:13188   */\n      dup1\n        /* \"#utility.yul\":13182:13183   */\n      dup3\n        /* \"#utility.yul\":13179:13189   */\n      gt\n        /* \"#utility.yul\":13176:13212   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":13192:13210   */\n      tag_610\n      tag_419\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":13176:13212   */\n    tag_609:\n        /* \"#utility.yul\":13028:13219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13225:13635   */\n    tag_179:\n        /* \"#utility.yul\":13265:13272   */\n      0x00\n        /* \"#utility.yul\":13288:13308   */\n      tag_612\n        /* \"#utility.yul\":13306:13307   */\n      dup3\n        /* \"#utility.yul\":13288:13308   */\n      tag_387\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":13283:13308   */\n      swap2\n      pop\n        /* \"#utility.yul\":13322:13342   */\n      tag_613\n        /* \"#utility.yul\":13340:13341   */\n      dup4\n        /* \"#utility.yul\":13322:13342   */\n      tag_387\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":13317:13342   */\n      swap3\n      pop\n        /* \"#utility.yul\":13377:13378   */\n      dup3\n        /* \"#utility.yul\":13374:13375   */\n      dup3\n        /* \"#utility.yul\":13370:13379   */\n      mul\n        /* \"#utility.yul\":13399:13429   */\n      tag_614\n        /* \"#utility.yul\":13417:13428   */\n      dup2\n        /* \"#utility.yul\":13399:13429   */\n      tag_387\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":13388:13429   */\n      swap2\n      pop\n        /* \"#utility.yul\":13578:13579   */\n      dup3\n        /* \"#utility.yul\":13569:13576   */\n      dup3\n        /* \"#utility.yul\":13565:13580   */\n      div\n        /* \"#utility.yul\":13562:13563   */\n      dup5\n        /* \"#utility.yul\":13559:13581   */\n      eq\n        /* \"#utility.yul\":13539:13540   */\n      dup4\n        /* \"#utility.yul\":13532:13541   */\n      iszero\n        /* \"#utility.yul\":13512:13595   */\n      or\n        /* \"#utility.yul\":13489:13628   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":13608:13626   */\n      tag_616\n      tag_419\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":13489:13628   */\n    tag_615:\n        /* \"#utility.yul\":13273:13635   */\n      pop\n        /* \"#utility.yul\":13225:13635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13641:13759   */\n    tag_420:\n        /* \"#utility.yul\":13728:13752   */\n      tag_618\n        /* \"#utility.yul\":13746:13751   */\n      dup2\n        /* \"#utility.yul\":13728:13752   */\n      tag_384\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":13723:13726   */\n      dup3\n        /* \"#utility.yul\":13716:13753   */\n      mstore\n        /* \"#utility.yul\":13641:13759   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13765:14097   */\n    tag_221:\n        /* \"#utility.yul\":13886:13890   */\n      0x00\n        /* \"#utility.yul\":13924:13926   */\n      0x40\n        /* \"#utility.yul\":13913:13922   */\n      dup3\n        /* \"#utility.yul\":13909:13927   */\n      add\n        /* \"#utility.yul\":13901:13927   */\n      swap1\n      pop\n        /* \"#utility.yul\":13937:14008   */\n      tag_620\n        /* \"#utility.yul\":14005:14006   */\n      0x00\n        /* \"#utility.yul\":13994:14003   */\n      dup4\n        /* \"#utility.yul\":13990:14007   */\n      add\n        /* \"#utility.yul\":13981:13987   */\n      dup6\n        /* \"#utility.yul\":13937:14008   */\n      tag_420\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":14018:14090   */\n      tag_621\n        /* \"#utility.yul\":14086:14088   */\n      0x20\n        /* \"#utility.yul\":14075:14084   */\n      dup4\n        /* \"#utility.yul\":14071:14089   */\n      add\n        /* \"#utility.yul\":14062:14068   */\n      dup5\n        /* \"#utility.yul\":14018:14090   */\n      tag_388\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":13765:14097   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14103:14219   */\n    tag_421:\n        /* \"#utility.yul\":14173:14194   */\n      tag_623\n        /* \"#utility.yul\":14188:14193   */\n      dup2\n        /* \"#utility.yul\":14173:14194   */\n      tag_381\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":14166:14171   */\n      dup2\n        /* \"#utility.yul\":14163:14195   */\n      eq\n        /* \"#utility.yul\":14153:14213   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":14209:14210   */\n      0x00\n        /* \"#utility.yul\":14206:14207   */\n      dup1\n        /* \"#utility.yul\":14199:14211   */\n      revert\n        /* \"#utility.yul\":14153:14213   */\n    tag_624:\n        /* \"#utility.yul\":14103:14219   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14225:14362   */\n    tag_422:\n        /* \"#utility.yul\":14279:14284   */\n      0x00\n        /* \"#utility.yul\":14310:14316   */\n      dup2\n        /* \"#utility.yul\":14304:14317   */\n      mload\n        /* \"#utility.yul\":14295:14317   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14356   */\n      tag_626\n        /* \"#utility.yul\":14350:14355   */\n      dup2\n        /* \"#utility.yul\":14326:14356   */\n      tag_421\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":14225:14362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14368:14713   */\n    tag_225:\n        /* \"#utility.yul\":14435:14441   */\n      0x00\n        /* \"#utility.yul\":14484:14486   */\n      0x20\n        /* \"#utility.yul\":14472:14481   */\n      dup3\n        /* \"#utility.yul\":14463:14470   */\n      dup5\n        /* \"#utility.yul\":14459:14482   */\n      sub\n        /* \"#utility.yul\":14455:14487   */\n      slt\n        /* \"#utility.yul\":14452:14571   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":14490:14569   */\n      tag_629\n      tag_376\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":14452:14571   */\n    tag_628:\n        /* \"#utility.yul\":14610:14611   */\n      0x00\n        /* \"#utility.yul\":14635:14696   */\n      tag_630\n        /* \"#utility.yul\":14688:14695   */\n      dup5\n        /* \"#utility.yul\":14679:14685   */\n      dup3\n        /* \"#utility.yul\":14668:14677   */\n      dup6\n        /* \"#utility.yul\":14664:14686   */\n      add\n        /* \"#utility.yul\":14635:14696   */\n      tag_422\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14625:14696   */\n      swap2\n      pop\n        /* \"#utility.yul\":14581:14706   */\n      pop\n        /* \"#utility.yul\":14368:14713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14719:14941   */\n    tag_238:\n        /* \"#utility.yul\":14812:14816   */\n      0x00\n        /* \"#utility.yul\":14850:14852   */\n      0x20\n        /* \"#utility.yul\":14839:14848   */\n      dup3\n        /* \"#utility.yul\":14835:14853   */\n      add\n        /* \"#utility.yul\":14827:14853   */\n      swap1\n      pop\n        /* \"#utility.yul\":14863:14934   */\n      tag_632\n        /* \"#utility.yul\":14931:14932   */\n      0x00\n        /* \"#utility.yul\":14920:14929   */\n      dup4\n        /* \"#utility.yul\":14916:14933   */\n      add\n        /* \"#utility.yul\":14907:14913   */\n      dup5\n        /* \"#utility.yul\":14863:14934   */\n      tag_420\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":14719:14941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14947:15090   */\n    tag_423:\n        /* \"#utility.yul\":15004:15009   */\n      0x00\n        /* \"#utility.yul\":15035:15041   */\n      dup2\n        /* \"#utility.yul\":15029:15042   */\n      mload\n        /* \"#utility.yul\":15020:15042   */\n      swap1\n      pop\n        /* \"#utility.yul\":15051:15084   */\n      tag_634\n        /* \"#utility.yul\":15078:15083   */\n      dup2\n        /* \"#utility.yul\":15051:15084   */\n      tag_396\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":14947:15090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15096:15447   */\n    tag_242:\n        /* \"#utility.yul\":15166:15172   */\n      0x00\n        /* \"#utility.yul\":15215:15217   */\n      0x20\n        /* \"#utility.yul\":15203:15212   */\n      dup3\n        /* \"#utility.yul\":15194:15201   */\n      dup5\n        /* \"#utility.yul\":15190:15213   */\n      sub\n        /* \"#utility.yul\":15186:15218   */\n      slt\n        /* \"#utility.yul\":15183:15302   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":15221:15300   */\n      tag_637\n      tag_376\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":15183:15302   */\n    tag_636:\n        /* \"#utility.yul\":15341:15342   */\n      0x00\n        /* \"#utility.yul\":15366:15430   */\n      tag_638\n        /* \"#utility.yul\":15422:15429   */\n      dup5\n        /* \"#utility.yul\":15413:15419   */\n      dup3\n        /* \"#utility.yul\":15402:15411   */\n      dup6\n        /* \"#utility.yul\":15398:15420   */\n      add\n        /* \"#utility.yul\":15366:15430   */\n      tag_423\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":15356:15430   */\n      swap2\n      pop\n        /* \"#utility.yul\":15312:15440   */\n      pop\n        /* \"#utility.yul\":15096:15447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15453:15631   */\n    tag_424:\n        /* \"#utility.yul\":15593:15623   */\n      0x5265776172642072617465206d75737420626520706f73697469766500000000\n        /* \"#utility.yul\":15589:15590   */\n      0x00\n        /* \"#utility.yul\":15581:15587   */\n      dup3\n        /* \"#utility.yul\":15577:15591   */\n      add\n        /* \"#utility.yul\":15570:15624   */\n      mstore\n        /* \"#utility.yul\":15453:15631   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15637:16003   */\n    tag_425:\n        /* \"#utility.yul\":15779:15782   */\n      0x00\n        /* \"#utility.yul\":15800:15867   */\n      tag_641\n        /* \"#utility.yul\":15864:15866   */\n      0x1c\n        /* \"#utility.yul\":15859:15862   */\n      dup4\n        /* \"#utility.yul\":15800:15867   */\n      tag_416\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":15793:15867   */\n      swap2\n      pop\n        /* \"#utility.yul\":15876:15969   */\n      tag_642\n        /* \"#utility.yul\":15965:15968   */\n      dup3\n        /* \"#utility.yul\":15876:15969   */\n      tag_424\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":15994:15996   */\n      0x20\n        /* \"#utility.yul\":15989:15992   */\n      dup3\n        /* \"#utility.yul\":15985:15997   */\n      add\n        /* \"#utility.yul\":15978:15997   */\n      swap1\n      pop\n        /* \"#utility.yul\":15637:16003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16009:16428   */\n    tag_253:\n        /* \"#utility.yul\":16175:16179   */\n      0x00\n        /* \"#utility.yul\":16213:16215   */\n      0x20\n        /* \"#utility.yul\":16202:16211   */\n      dup3\n        /* \"#utility.yul\":16198:16216   */\n      add\n        /* \"#utility.yul\":16190:16216   */\n      swap1\n      pop\n        /* \"#utility.yul\":16262:16271   */\n      dup2\n        /* \"#utility.yul\":16256:16260   */\n      dup2\n        /* \"#utility.yul\":16252:16272   */\n      sub\n        /* \"#utility.yul\":16248:16249   */\n      0x00\n        /* \"#utility.yul\":16237:16246   */\n      dup4\n        /* \"#utility.yul\":16233:16250   */\n      add\n        /* \"#utility.yul\":16226:16273   */\n      mstore\n        /* \"#utility.yul\":16290:16421   */\n      tag_644\n        /* \"#utility.yul\":16416:16420   */\n      dup2\n        /* \"#utility.yul\":16290:16421   */\n      tag_425\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":16282:16421   */\n      swap1\n      pop\n        /* \"#utility.yul\":16009:16428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16434:16615   */\n    tag_426:\n        /* \"#utility.yul\":16574:16607   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":16570:16571   */\n      0x00\n        /* \"#utility.yul\":16562:16568   */\n      dup3\n        /* \"#utility.yul\":16558:16572   */\n      add\n        /* \"#utility.yul\":16551:16608   */\n      mstore\n        /* \"#utility.yul\":16434:16615   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16621:16987   */\n    tag_427:\n        /* \"#utility.yul\":16763:16766   */\n      0x00\n        /* \"#utility.yul\":16784:16851   */\n      tag_647\n        /* \"#utility.yul\":16848:16850   */\n      0x1f\n        /* \"#utility.yul\":16843:16846   */\n      dup4\n        /* \"#utility.yul\":16784:16851   */\n      tag_416\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":16777:16851   */\n      swap2\n      pop\n        /* \"#utility.yul\":16860:16953   */\n      tag_648\n        /* \"#utility.yul\":16949:16952   */\n      dup3\n        /* \"#utility.yul\":16860:16953   */\n      tag_426\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16978:16980   */\n      0x20\n        /* \"#utility.yul\":16973:16976   */\n      dup3\n        /* \"#utility.yul\":16969:16981   */\n      add\n        /* \"#utility.yul\":16962:16981   */\n      swap1\n      pop\n        /* \"#utility.yul\":16621:16987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16993:17412   */\n    tag_275:\n        /* \"#utility.yul\":17159:17163   */\n      0x00\n        /* \"#utility.yul\":17197:17199   */\n      0x20\n        /* \"#utility.yul\":17186:17195   */\n      dup3\n        /* \"#utility.yul\":17182:17200   */\n      add\n        /* \"#utility.yul\":17174:17200   */\n      swap1\n      pop\n        /* \"#utility.yul\":17246:17255   */\n      dup2\n        /* \"#utility.yul\":17240:17244   */\n      dup2\n        /* \"#utility.yul\":17236:17256   */\n      sub\n        /* \"#utility.yul\":17232:17233   */\n      0x00\n        /* \"#utility.yul\":17221:17230   */\n      dup4\n        /* \"#utility.yul\":17217:17234   */\n      add\n        /* \"#utility.yul\":17210:17257   */\n      mstore\n        /* \"#utility.yul\":17274:17405   */\n      tag_650\n        /* \"#utility.yul\":17400:17404   */\n      dup2\n        /* \"#utility.yul\":17274:17405   */\n      tag_427\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":17266:17405   */\n      swap1\n      pop\n        /* \"#utility.yul\":16993:17412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17418:17648   */\n    tag_428:\n        /* \"#utility.yul\":17558:17592   */\n      0x546f6b656e5374616b696e673a20416d6f756e74206d75737420626520677265\n        /* \"#utility.yul\":17554:17555   */\n      0x00\n        /* \"#utility.yul\":17546:17552   */\n      dup3\n        /* \"#utility.yul\":17542:17556   */\n      add\n        /* \"#utility.yul\":17535:17593   */\n      mstore\n        /* \"#utility.yul\":17627:17640   */\n      0x61746572207468616e2030000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17622:17624   */\n      0x20\n        /* \"#utility.yul\":17614:17620   */\n      dup3\n        /* \"#utility.yul\":17610:17625   */\n      add\n        /* \"#utility.yul\":17603:17641   */\n      mstore\n        /* \"#utility.yul\":17418:17648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17654:18020   */\n    tag_429:\n        /* \"#utility.yul\":17796:17799   */\n      0x00\n        /* \"#utility.yul\":17817:17884   */\n      tag_653\n        /* \"#utility.yul\":17881:17883   */\n      0x2b\n        /* \"#utility.yul\":17876:17879   */\n      dup4\n        /* \"#utility.yul\":17817:17884   */\n      tag_416\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":17810:17884   */\n      swap2\n      pop\n        /* \"#utility.yul\":17893:17986   */\n      tag_654\n        /* \"#utility.yul\":17982:17985   */\n      dup3\n        /* \"#utility.yul\":17893:17986   */\n      tag_428\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":18011:18013   */\n      0x40\n        /* \"#utility.yul\":18006:18009   */\n      dup3\n        /* \"#utility.yul\":18002:18014   */\n      add\n        /* \"#utility.yul\":17995:18014   */\n      swap1\n      pop\n        /* \"#utility.yul\":17654:18020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18026:18445   */\n    tag_280:\n        /* \"#utility.yul\":18192:18196   */\n      0x00\n        /* \"#utility.yul\":18230:18232   */\n      0x20\n        /* \"#utility.yul\":18219:18228   */\n      dup3\n        /* \"#utility.yul\":18215:18233   */\n      add\n        /* \"#utility.yul\":18207:18233   */\n      swap1\n      pop\n        /* \"#utility.yul\":18279:18288   */\n      dup2\n        /* \"#utility.yul\":18273:18277   */\n      dup2\n        /* \"#utility.yul\":18269:18289   */\n      sub\n        /* \"#utility.yul\":18265:18266   */\n      0x00\n        /* \"#utility.yul\":18254:18263   */\n      dup4\n        /* \"#utility.yul\":18250:18267   */\n      add\n        /* \"#utility.yul\":18243:18290   */\n      mstore\n        /* \"#utility.yul\":18307:18438   */\n      tag_656\n        /* \"#utility.yul\":18433:18437   */\n      dup2\n        /* \"#utility.yul\":18307:18438   */\n      tag_429\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":18299:18438   */\n      swap1\n      pop\n        /* \"#utility.yul\":18026:18445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18451:18679   */\n    tag_430:\n        /* \"#utility.yul\":18591:18625   */\n      0x546f6b656e5374616b696e673a20496e73756666696369656e74207374616b65\n        /* \"#utility.yul\":18587:18588   */\n      0x00\n        /* \"#utility.yul\":18579:18585   */\n      dup3\n        /* \"#utility.yul\":18575:18589   */\n      add\n        /* \"#utility.yul\":18568:18626   */\n      mstore\n        /* \"#utility.yul\":18660:18671   */\n      0x642062616c616e63650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18655:18657   */\n      0x20\n        /* \"#utility.yul\":18647:18653   */\n      dup3\n        /* \"#utility.yul\":18643:18658   */\n      add\n        /* \"#utility.yul\":18636:18672   */\n      mstore\n        /* \"#utility.yul\":18451:18679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18685:19051   */\n    tag_431:\n        /* \"#utility.yul\":18827:18830   */\n      0x00\n        /* \"#utility.yul\":18848:18915   */\n      tag_659\n        /* \"#utility.yul\":18912:18914   */\n      0x29\n        /* \"#utility.yul\":18907:18910   */\n      dup4\n        /* \"#utility.yul\":18848:18915   */\n      tag_416\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":18841:18915   */\n      swap2\n      pop\n        /* \"#utility.yul\":18924:19017   */\n      tag_660\n        /* \"#utility.yul\":19013:19016   */\n      dup3\n        /* \"#utility.yul\":18924:19017   */\n      tag_430\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":19042:19044   */\n      0x40\n        /* \"#utility.yul\":19037:19040   */\n      dup3\n        /* \"#utility.yul\":19033:19045   */\n      add\n        /* \"#utility.yul\":19026:19045   */\n      swap1\n      pop\n        /* \"#utility.yul\":18685:19051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19057:19476   */\n    tag_283:\n        /* \"#utility.yul\":19223:19227   */\n      0x00\n        /* \"#utility.yul\":19261:19263   */\n      0x20\n        /* \"#utility.yul\":19250:19259   */\n      dup3\n        /* \"#utility.yul\":19246:19264   */\n      add\n        /* \"#utility.yul\":19238:19264   */\n      swap1\n      pop\n        /* \"#utility.yul\":19310:19319   */\n      dup2\n        /* \"#utility.yul\":19304:19308   */\n      dup2\n        /* \"#utility.yul\":19300:19320   */\n      sub\n        /* \"#utility.yul\":19296:19297   */\n      0x00\n        /* \"#utility.yul\":19285:19294   */\n      dup4\n        /* \"#utility.yul\":19281:19298   */\n      add\n        /* \"#utility.yul\":19274:19321   */\n      mstore\n        /* \"#utility.yul\":19338:19469   */\n      tag_662\n        /* \"#utility.yul\":19464:19468   */\n      dup2\n        /* \"#utility.yul\":19338:19469   */\n      tag_431\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":19330:19469   */\n      swap1\n      pop\n        /* \"#utility.yul\":19057:19476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19482:19705   */\n    tag_432:\n        /* \"#utility.yul\":19622:19656   */\n      0x546f6b656e5374616b696e673a20436c61696d20696e74657276616c206e6f74\n        /* \"#utility.yul\":19618:19619   */\n      0x00\n        /* \"#utility.yul\":19610:19616   */\n      dup3\n        /* \"#utility.yul\":19606:19620   */\n      add\n        /* \"#utility.yul\":19599:19657   */\n      mstore\n        /* \"#utility.yul\":19691:19697   */\n      0x206d657400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19686:19688   */\n      0x20\n        /* \"#utility.yul\":19678:19684   */\n      dup3\n        /* \"#utility.yul\":19674:19689   */\n      add\n        /* \"#utility.yul\":19667:19698   */\n      mstore\n        /* \"#utility.yul\":19482:19705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19711:20077   */\n    tag_433:\n        /* \"#utility.yul\":19853:19856   */\n      0x00\n        /* \"#utility.yul\":19874:19941   */\n      tag_665\n        /* \"#utility.yul\":19938:19940   */\n      0x24\n        /* \"#utility.yul\":19933:19936   */\n      dup4\n        /* \"#utility.yul\":19874:19941   */\n      tag_416\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":19867:19941   */\n      swap2\n      pop\n        /* \"#utility.yul\":19950:20043   */\n      tag_666\n        /* \"#utility.yul\":20039:20042   */\n      dup3\n        /* \"#utility.yul\":19950:20043   */\n      tag_432\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":20068:20070   */\n      0x40\n        /* \"#utility.yul\":20063:20066   */\n      dup3\n        /* \"#utility.yul\":20059:20071   */\n      add\n        /* \"#utility.yul\":20052:20071   */\n      swap1\n      pop\n        /* \"#utility.yul\":19711:20077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20083:20502   */\n    tag_287:\n        /* \"#utility.yul\":20249:20253   */\n      0x00\n        /* \"#utility.yul\":20287:20289   */\n      0x20\n        /* \"#utility.yul\":20276:20285   */\n      dup3\n        /* \"#utility.yul\":20272:20290   */\n      add\n        /* \"#utility.yul\":20264:20290   */\n      swap1\n      pop\n        /* \"#utility.yul\":20336:20345   */\n      dup2\n        /* \"#utility.yul\":20330:20334   */\n      dup2\n        /* \"#utility.yul\":20326:20346   */\n      sub\n        /* \"#utility.yul\":20322:20323   */\n      0x00\n        /* \"#utility.yul\":20311:20320   */\n      dup4\n        /* \"#utility.yul\":20307:20324   */\n      add\n        /* \"#utility.yul\":20300:20347   */\n      mstore\n        /* \"#utility.yul\":20364:20495   */\n      tag_668\n        /* \"#utility.yul\":20490:20494   */\n      dup2\n        /* \"#utility.yul\":20364:20495   */\n      tag_433\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":20356:20495   */\n      swap1\n      pop\n        /* \"#utility.yul\":20083:20502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20508:20732   */\n    tag_434:\n        /* \"#utility.yul\":20648:20682   */\n      0x546f6b656e5374616b696e673a20556e7374616b65207472616e736665722066\n        /* \"#utility.yul\":20644:20645   */\n      0x00\n        /* \"#utility.yul\":20636:20642   */\n      dup3\n        /* \"#utility.yul\":20632:20646   */\n      add\n        /* \"#utility.yul\":20625:20683   */\n      mstore\n        /* \"#utility.yul\":20717:20724   */\n      0x61696c6564000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20712:20714   */\n      0x20\n        /* \"#utility.yul\":20704:20710   */\n      dup3\n        /* \"#utility.yul\":20700:20715   */\n      add\n        /* \"#utility.yul\":20693:20725   */\n      mstore\n        /* \"#utility.yul\":20508:20732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20738:21104   */\n    tag_435:\n        /* \"#utility.yul\":20880:20883   */\n      0x00\n        /* \"#utility.yul\":20901:20968   */\n      tag_671\n        /* \"#utility.yul\":20965:20967   */\n      0x25\n        /* \"#utility.yul\":20960:20963   */\n      dup4\n        /* \"#utility.yul\":20901:20968   */\n      tag_416\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":20894:20968   */\n      swap2\n      pop\n        /* \"#utility.yul\":20977:21070   */\n      tag_672\n        /* \"#utility.yul\":21066:21069   */\n      dup3\n        /* \"#utility.yul\":20977:21070   */\n      tag_434\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":21095:21097   */\n      0x40\n        /* \"#utility.yul\":21090:21093   */\n      dup3\n        /* \"#utility.yul\":21086:21098   */\n      add\n        /* \"#utility.yul\":21079:21098   */\n      swap1\n      pop\n        /* \"#utility.yul\":20738:21104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21110:21529   */\n    tag_299:\n        /* \"#utility.yul\":21276:21280   */\n      0x00\n        /* \"#utility.yul\":21314:21316   */\n      0x20\n        /* \"#utility.yul\":21303:21312   */\n      dup3\n        /* \"#utility.yul\":21299:21317   */\n      add\n        /* \"#utility.yul\":21291:21317   */\n      swap1\n      pop\n        /* \"#utility.yul\":21363:21372   */\n      dup2\n        /* \"#utility.yul\":21357:21361   */\n      dup2\n        /* \"#utility.yul\":21353:21373   */\n      sub\n        /* \"#utility.yul\":21349:21350   */\n      0x00\n        /* \"#utility.yul\":21338:21347   */\n      dup4\n        /* \"#utility.yul\":21334:21351   */\n      add\n        /* \"#utility.yul\":21327:21374   */\n      mstore\n        /* \"#utility.yul\":21391:21522   */\n      tag_674\n        /* \"#utility.yul\":21517:21521   */\n      dup2\n        /* \"#utility.yul\":21391:21522   */\n      tag_435\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":21383:21522   */\n      swap1\n      pop\n        /* \"#utility.yul\":21110:21529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21535:21716   */\n    tag_436:\n        /* \"#utility.yul\":21675:21708   */\n      0x546f6b656e5374616b696e673a204e6f207374616b65642062616c616e636500\n        /* \"#utility.yul\":21671:21672   */\n      0x00\n        /* \"#utility.yul\":21663:21669   */\n      dup3\n        /* \"#utility.yul\":21659:21673   */\n      add\n        /* \"#utility.yul\":21652:21709   */\n      mstore\n        /* \"#utility.yul\":21535:21716   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21722:22088   */\n    tag_437:\n        /* \"#utility.yul\":21864:21867   */\n      0x00\n        /* \"#utility.yul\":21885:21952   */\n      tag_677\n        /* \"#utility.yul\":21949:21951   */\n      0x1f\n        /* \"#utility.yul\":21944:21947   */\n      dup4\n        /* \"#utility.yul\":21885:21952   */\n      tag_416\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":21878:21952   */\n      swap2\n      pop\n        /* \"#utility.yul\":21961:22054   */\n      tag_678\n        /* \"#utility.yul\":22050:22053   */\n      dup3\n        /* \"#utility.yul\":21961:22054   */\n      tag_436\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":22079:22081   */\n      0x20\n        /* \"#utility.yul\":22074:22077   */\n      dup3\n        /* \"#utility.yul\":22070:22082   */\n      add\n        /* \"#utility.yul\":22063:22082   */\n      swap1\n      pop\n        /* \"#utility.yul\":21722:22088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22094:22513   */\n    tag_320:\n        /* \"#utility.yul\":22260:22264   */\n      0x00\n        /* \"#utility.yul\":22298:22300   */\n      0x20\n        /* \"#utility.yul\":22287:22296   */\n      dup3\n        /* \"#utility.yul\":22283:22301   */\n      add\n        /* \"#utility.yul\":22275:22301   */\n      swap1\n      pop\n        /* \"#utility.yul\":22347:22356   */\n      dup2\n        /* \"#utility.yul\":22341:22345   */\n      dup2\n        /* \"#utility.yul\":22337:22357   */\n      sub\n        /* \"#utility.yul\":22333:22334   */\n      0x00\n        /* \"#utility.yul\":22322:22331   */\n      dup4\n        /* \"#utility.yul\":22318:22335   */\n      add\n        /* \"#utility.yul\":22311:22358   */\n      mstore\n        /* \"#utility.yul\":22375:22506   */\n      tag_680\n        /* \"#utility.yul\":22501:22505   */\n      dup2\n        /* \"#utility.yul\":22375:22506   */\n      tag_437\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":22367:22506   */\n      swap1\n      pop\n        /* \"#utility.yul\":22094:22513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22519:22739   */\n    tag_438:\n        /* \"#utility.yul\":22659:22693   */\n      0x546f6b656e5374616b696e673a204e6f207265776172647320746f20636c6169\n        /* \"#utility.yul\":22655:22656   */\n      0x00\n        /* \"#utility.yul\":22647:22653   */\n      dup3\n        /* \"#utility.yul\":22643:22657   */\n      add\n        /* \"#utility.yul\":22636:22694   */\n      mstore\n        /* \"#utility.yul\":22728:22731   */\n      0x6d00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22723:22725   */\n      0x20\n        /* \"#utility.yul\":22715:22721   */\n      dup3\n        /* \"#utility.yul\":22711:22726   */\n      add\n        /* \"#utility.yul\":22704:22732   */\n      mstore\n        /* \"#utility.yul\":22519:22739   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22745:23111   */\n    tag_439:\n        /* \"#utility.yul\":22887:22890   */\n      0x00\n        /* \"#utility.yul\":22908:22975   */\n      tag_683\n        /* \"#utility.yul\":22972:22974   */\n      0x21\n        /* \"#utility.yul\":22967:22970   */\n      dup4\n        /* \"#utility.yul\":22908:22975   */\n      tag_416\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":22901:22975   */\n      swap2\n      pop\n        /* \"#utility.yul\":22984:23077   */\n      tag_684\n        /* \"#utility.yul\":23073:23076   */\n      dup3\n        /* \"#utility.yul\":22984:23077   */\n      tag_438\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23102:23104   */\n      0x40\n        /* \"#utility.yul\":23097:23100   */\n      dup3\n        /* \"#utility.yul\":23093:23105   */\n      add\n        /* \"#utility.yul\":23086:23105   */\n      swap1\n      pop\n        /* \"#utility.yul\":22745:23111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23117:23536   */\n    tag_327:\n        /* \"#utility.yul\":23283:23287   */\n      0x00\n        /* \"#utility.yul\":23321:23323   */\n      0x20\n        /* \"#utility.yul\":23310:23319   */\n      dup3\n        /* \"#utility.yul\":23306:23324   */\n      add\n        /* \"#utility.yul\":23298:23324   */\n      swap1\n      pop\n        /* \"#utility.yul\":23370:23379   */\n      dup2\n        /* \"#utility.yul\":23364:23368   */\n      dup2\n        /* \"#utility.yul\":23360:23380   */\n      sub\n        /* \"#utility.yul\":23356:23357   */\n      0x00\n        /* \"#utility.yul\":23345:23354   */\n      dup4\n        /* \"#utility.yul\":23341:23358   */\n      add\n        /* \"#utility.yul\":23334:23381   */\n      mstore\n        /* \"#utility.yul\":23398:23529   */\n      tag_686\n        /* \"#utility.yul\":23524:23528   */\n      dup2\n        /* \"#utility.yul\":23398:23529   */\n      tag_439\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23390:23529   */\n      swap1\n      pop\n        /* \"#utility.yul\":23117:23536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23542:23767   */\n    tag_440:\n        /* \"#utility.yul\":23682:23716   */\n      0x5374616b696e673a20416d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":23678:23679   */\n      0x00\n        /* \"#utility.yul\":23670:23676   */\n      dup3\n        /* \"#utility.yul\":23666:23680   */\n      add\n        /* \"#utility.yul\":23659:23717   */\n      mstore\n        /* \"#utility.yul\":23751:23759   */\n      0x7468616e20300000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23746:23748   */\n      0x20\n        /* \"#utility.yul\":23738:23744   */\n      dup3\n        /* \"#utility.yul\":23734:23749   */\n      add\n        /* \"#utility.yul\":23727:23760   */\n      mstore\n        /* \"#utility.yul\":23542:23767   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23773:24139   */\n    tag_441:\n        /* \"#utility.yul\":23915:23918   */\n      0x00\n        /* \"#utility.yul\":23936:24003   */\n      tag_689\n        /* \"#utility.yul\":24000:24002   */\n      0x26\n        /* \"#utility.yul\":23995:23998   */\n      dup4\n        /* \"#utility.yul\":23936:24003   */\n      tag_416\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":23929:24003   */\n      swap2\n      pop\n        /* \"#utility.yul\":24012:24105   */\n      tag_690\n        /* \"#utility.yul\":24101:24104   */\n      dup3\n        /* \"#utility.yul\":24012:24105   */\n      tag_440\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":24130:24132   */\n      0x40\n        /* \"#utility.yul\":24125:24128   */\n      dup3\n        /* \"#utility.yul\":24121:24133   */\n      add\n        /* \"#utility.yul\":24114:24133   */\n      swap1\n      pop\n        /* \"#utility.yul\":23773:24139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24145:24564   */\n    tag_337:\n        /* \"#utility.yul\":24311:24315   */\n      0x00\n        /* \"#utility.yul\":24349:24351   */\n      0x20\n        /* \"#utility.yul\":24338:24347   */\n      dup3\n        /* \"#utility.yul\":24334:24352   */\n      add\n        /* \"#utility.yul\":24326:24352   */\n      swap1\n      pop\n        /* \"#utility.yul\":24398:24407   */\n      dup2\n        /* \"#utility.yul\":24392:24396   */\n      dup2\n        /* \"#utility.yul\":24388:24408   */\n      sub\n        /* \"#utility.yul\":24384:24385   */\n      0x00\n        /* \"#utility.yul\":24373:24382   */\n      dup4\n        /* \"#utility.yul\":24369:24386   */\n      add\n        /* \"#utility.yul\":24362:24409   */\n      mstore\n        /* \"#utility.yul\":24426:24557   */\n      tag_692\n        /* \"#utility.yul\":24552:24556   */\n      dup2\n        /* \"#utility.yul\":24426:24557   */\n      tag_441\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":24418:24557   */\n      swap1\n      pop\n        /* \"#utility.yul\":24145:24564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24570:24743   */\n    tag_442:\n        /* \"#utility.yul\":24710:24735   */\n      0x5374616b696e673a204e6f204e46542062616c616e6365000000000000000000\n        /* \"#utility.yul\":24706:24707   */\n      0x00\n        /* \"#utility.yul\":24698:24704   */\n      dup3\n        /* \"#utility.yul\":24694:24708   */\n      add\n        /* \"#utility.yul\":24687:24736   */\n      mstore\n        /* \"#utility.yul\":24570:24743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24749:25115   */\n    tag_443:\n        /* \"#utility.yul\":24891:24894   */\n      0x00\n        /* \"#utility.yul\":24912:24979   */\n      tag_695\n        /* \"#utility.yul\":24976:24978   */\n      0x17\n        /* \"#utility.yul\":24971:24974   */\n      dup4\n        /* \"#utility.yul\":24912:24979   */\n      tag_416\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":24905:24979   */\n      swap2\n      pop\n        /* \"#utility.yul\":24988:25081   */\n      tag_696\n        /* \"#utility.yul\":25077:25080   */\n      dup3\n        /* \"#utility.yul\":24988:25081   */\n      tag_442\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":25106:25108   */\n      0x20\n        /* \"#utility.yul\":25101:25104   */\n      dup3\n        /* \"#utility.yul\":25097:25109   */\n      add\n        /* \"#utility.yul\":25090:25109   */\n      swap1\n      pop\n        /* \"#utility.yul\":24749:25115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25121:25540   */\n    tag_345:\n        /* \"#utility.yul\":25287:25291   */\n      0x00\n        /* \"#utility.yul\":25325:25327   */\n      0x20\n        /* \"#utility.yul\":25314:25323   */\n      dup3\n        /* \"#utility.yul\":25310:25328   */\n      add\n        /* \"#utility.yul\":25302:25328   */\n      swap1\n      pop\n        /* \"#utility.yul\":25374:25383   */\n      dup2\n        /* \"#utility.yul\":25368:25372   */\n      dup2\n        /* \"#utility.yul\":25364:25384   */\n      sub\n        /* \"#utility.yul\":25360:25361   */\n      0x00\n        /* \"#utility.yul\":25349:25358   */\n      dup4\n        /* \"#utility.yul\":25345:25362   */\n      add\n        /* \"#utility.yul\":25338:25385   */\n      mstore\n        /* \"#utility.yul\":25402:25533   */\n      tag_698\n        /* \"#utility.yul\":25528:25532   */\n      dup2\n        /* \"#utility.yul\":25402:25533   */\n      tag_443\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":25394:25533   */\n      swap1\n      pop\n        /* \"#utility.yul\":25121:25540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25546:25720   */\n    tag_444:\n        /* \"#utility.yul\":25686:25712   */\n      0x5374616b696e673a20417070726f76616c206661696c65640000000000000000\n        /* \"#utility.yul\":25682:25683   */\n      0x00\n        /* \"#utility.yul\":25674:25680   */\n      dup3\n        /* \"#utility.yul\":25670:25684   */\n      add\n        /* \"#utility.yul\":25663:25713   */\n      mstore\n        /* \"#utility.yul\":25546:25720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25726:26092   */\n    tag_445:\n        /* \"#utility.yul\":25868:25871   */\n      0x00\n        /* \"#utility.yul\":25889:25956   */\n      tag_701\n        /* \"#utility.yul\":25953:25955   */\n      0x18\n        /* \"#utility.yul\":25948:25951   */\n      dup4\n        /* \"#utility.yul\":25889:25956   */\n      tag_416\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":25882:25956   */\n      swap2\n      pop\n        /* \"#utility.yul\":25965:26058   */\n      tag_702\n        /* \"#utility.yul\":26054:26057   */\n      dup3\n        /* \"#utility.yul\":25965:26058   */\n      tag_444\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":26083:26085   */\n      0x20\n        /* \"#utility.yul\":26078:26081   */\n      dup3\n        /* \"#utility.yul\":26074:26086   */\n      add\n        /* \"#utility.yul\":26067:26086   */\n      swap1\n      pop\n        /* \"#utility.yul\":25726:26092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26098:26517   */\n    tag_352:\n        /* \"#utility.yul\":26264:26268   */\n      0x00\n        /* \"#utility.yul\":26302:26304   */\n      0x20\n        /* \"#utility.yul\":26291:26300   */\n      dup3\n        /* \"#utility.yul\":26287:26305   */\n      add\n        /* \"#utility.yul\":26279:26305   */\n      swap1\n      pop\n        /* \"#utility.yul\":26351:26360   */\n      dup2\n        /* \"#utility.yul\":26345:26349   */\n      dup2\n        /* \"#utility.yul\":26341:26361   */\n      sub\n        /* \"#utility.yul\":26337:26338   */\n      0x00\n        /* \"#utility.yul\":26326:26335   */\n      dup4\n        /* \"#utility.yul\":26322:26339   */\n      add\n        /* \"#utility.yul\":26315:26362   */\n      mstore\n        /* \"#utility.yul\":26379:26510   */\n      tag_704\n        /* \"#utility.yul\":26505:26509   */\n      dup2\n        /* \"#utility.yul\":26379:26510   */\n      tag_445\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":26371:26510   */\n      swap1\n      pop\n        /* \"#utility.yul\":26098:26517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26523:26965   */\n    tag_355:\n        /* \"#utility.yul\":26672:26676   */\n      0x00\n        /* \"#utility.yul\":26710:26712   */\n      0x60\n        /* \"#utility.yul\":26699:26708   */\n      dup3\n        /* \"#utility.yul\":26695:26713   */\n      add\n        /* \"#utility.yul\":26687:26713   */\n      swap1\n      pop\n        /* \"#utility.yul\":26723:26794   */\n      tag_706\n        /* \"#utility.yul\":26791:26792   */\n      0x00\n        /* \"#utility.yul\":26780:26789   */\n      dup4\n        /* \"#utility.yul\":26776:26793   */\n      add\n        /* \"#utility.yul\":26767:26773   */\n      dup7\n        /* \"#utility.yul\":26723:26794   */\n      tag_420\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":26804:26876   */\n      tag_707\n        /* \"#utility.yul\":26872:26874   */\n      0x20\n        /* \"#utility.yul\":26861:26870   */\n      dup4\n        /* \"#utility.yul\":26857:26875   */\n      add\n        /* \"#utility.yul\":26848:26854   */\n      dup6\n        /* \"#utility.yul\":26804:26876   */\n      tag_420\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":26886:26958   */\n      tag_708\n        /* \"#utility.yul\":26954:26956   */\n      0x40\n        /* \"#utility.yul\":26943:26952   */\n      dup4\n        /* \"#utility.yul\":26939:26957   */\n      add\n        /* \"#utility.yul\":26930:26936   */\n      dup5\n        /* \"#utility.yul\":26886:26958   */\n      tag_388\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":26523:26965   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26971:27151   */\n    tag_446:\n        /* \"#utility.yul\":27111:27143   */\n      0x5374616b696e673a20546f6b656e207472616e73666572206661696c65640000\n        /* \"#utility.yul\":27107:27108   */\n      0x00\n        /* \"#utility.yul\":27099:27105   */\n      dup3\n        /* \"#utility.yul\":27095:27109   */\n      add\n        /* \"#utility.yul\":27088:27144   */\n      mstore\n        /* \"#utility.yul\":26971:27151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27157:27523   */\n    tag_447:\n        /* \"#utility.yul\":27299:27302   */\n      0x00\n        /* \"#utility.yul\":27320:27387   */\n      tag_711\n        /* \"#utility.yul\":27384:27386   */\n      0x1e\n        /* \"#utility.yul\":27379:27382   */\n      dup4\n        /* \"#utility.yul\":27320:27387   */\n      tag_416\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":27313:27387   */\n      swap2\n      pop\n        /* \"#utility.yul\":27396:27489   */\n      tag_712\n        /* \"#utility.yul\":27485:27488   */\n      dup3\n        /* \"#utility.yul\":27396:27489   */\n      tag_446\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":27514:27516   */\n      0x20\n        /* \"#utility.yul\":27509:27512   */\n      dup3\n        /* \"#utility.yul\":27505:27517   */\n      add\n        /* \"#utility.yul\":27498:27517   */\n      swap1\n      pop\n        /* \"#utility.yul\":27157:27523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27529:27948   */\n    tag_361:\n        /* \"#utility.yul\":27695:27699   */\n      0x00\n        /* \"#utility.yul\":27733:27735   */\n      0x20\n        /* \"#utility.yul\":27722:27731   */\n      dup3\n        /* \"#utility.yul\":27718:27736   */\n      add\n        /* \"#utility.yul\":27710:27736   */\n      swap1\n      pop\n        /* \"#utility.yul\":27782:27791   */\n      dup2\n        /* \"#utility.yul\":27776:27780   */\n      dup2\n        /* \"#utility.yul\":27772:27792   */\n      sub\n        /* \"#utility.yul\":27768:27769   */\n      0x00\n        /* \"#utility.yul\":27757:27766   */\n      dup4\n        /* \"#utility.yul\":27753:27770   */\n      add\n        /* \"#utility.yul\":27746:27793   */\n      mstore\n        /* \"#utility.yul\":27810:27941   */\n      tag_714\n        /* \"#utility.yul\":27936:27940   */\n      dup2\n        /* \"#utility.yul\":27810:27941   */\n      tag_447\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":27802:27941   */\n      swap1\n      pop\n        /* \"#utility.yul\":27529:27948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27954:28121   */\n    tag_448:\n        /* \"#utility.yul\":28094:28113   */\n      0x5374616b65206578636565647320636170000000000000000000000000000000\n        /* \"#utility.yul\":28090:28091   */\n      0x00\n        /* \"#utility.yul\":28082:28088   */\n      dup3\n        /* \"#utility.yul\":28078:28092   */\n      add\n        /* \"#utility.yul\":28071:28114   */\n      mstore\n        /* \"#utility.yul\":27954:28121   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28127:28493   */\n    tag_449:\n        /* \"#utility.yul\":28269:28272   */\n      0x00\n        /* \"#utility.yul\":28290:28357   */\n      tag_717\n        /* \"#utility.yul\":28354:28356   */\n      0x11\n        /* \"#utility.yul\":28349:28352   */\n      dup4\n        /* \"#utility.yul\":28290:28357   */\n      tag_416\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":28283:28357   */\n      swap2\n      pop\n        /* \"#utility.yul\":28366:28459   */\n      tag_718\n        /* \"#utility.yul\":28455:28458   */\n      dup3\n        /* \"#utility.yul\":28366:28459   */\n      tag_448\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":28484:28486   */\n      0x20\n        /* \"#utility.yul\":28479:28482   */\n      dup3\n        /* \"#utility.yul\":28475:28487   */\n      add\n        /* \"#utility.yul\":28468:28487   */\n      swap1\n      pop\n        /* \"#utility.yul\":28127:28493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28499:28918   */\n    tag_366:\n        /* \"#utility.yul\":28665:28669   */\n      0x00\n        /* \"#utility.yul\":28703:28705   */\n      0x20\n        /* \"#utility.yul\":28692:28701   */\n      dup3\n        /* \"#utility.yul\":28688:28706   */\n      add\n        /* \"#utility.yul\":28680:28706   */\n      swap1\n      pop\n        /* \"#utility.yul\":28752:28761   */\n      dup2\n        /* \"#utility.yul\":28746:28750   */\n      dup2\n        /* \"#utility.yul\":28742:28762   */\n      sub\n        /* \"#utility.yul\":28738:28739   */\n      0x00\n        /* \"#utility.yul\":28727:28736   */\n      dup4\n        /* \"#utility.yul\":28723:28740   */\n      add\n        /* \"#utility.yul\":28716:28763   */\n      mstore\n        /* \"#utility.yul\":28780:28911   */\n      tag_720\n        /* \"#utility.yul\":28906:28910   */\n      dup2\n        /* \"#utility.yul\":28780:28911   */\n      tag_449\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":28772:28911   */\n      swap1\n      pop\n        /* \"#utility.yul\":28499:28918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28924:29256   */\n    tag_374:\n        /* \"#utility.yul\":29045:29049   */\n      0x00\n        /* \"#utility.yul\":29083:29085   */\n      0x40\n        /* \"#utility.yul\":29072:29081   */\n      dup3\n        /* \"#utility.yul\":29068:29086   */\n      add\n        /* \"#utility.yul\":29060:29086   */\n      swap1\n      pop\n        /* \"#utility.yul\":29096:29167   */\n      tag_722\n        /* \"#utility.yul\":29164:29165   */\n      0x00\n        /* \"#utility.yul\":29153:29162   */\n      dup4\n        /* \"#utility.yul\":29149:29166   */\n      add\n        /* \"#utility.yul\":29140:29146   */\n      dup6\n        /* \"#utility.yul\":29096:29167   */\n      tag_420\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":29177:29249   */\n      tag_723\n        /* \"#utility.yul\":29245:29247   */\n      0x20\n        /* \"#utility.yul\":29234:29243   */\n      dup4\n        /* \"#utility.yul\":29230:29248   */\n      add\n        /* \"#utility.yul\":29221:29227   */\n      dup5\n        /* \"#utility.yul\":29177:29249   */\n      tag_395\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":28924:29256   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206bee125c14226d1e1a099dd96a68b0a5d518e378148ea4d36e67fa71451b6e3864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC721_$638_fromMemory": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMintableToken_$739_fromMemory": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_nftIface_$729_fromMemory": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMintableToken_$739t_uint256t_contract$_IERC721_$638t_contract$_nftIface_$729_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$638": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMintableToken_$739": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_nftIface_$729": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$638": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMintableToken_$739": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_nftIface_$729": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3259:9",
										"nodeType": "YulBlock",
										"src": "0:3259:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "635:51:9",
													"nodeType": "YulBlock",
													"src": "635:51:9",
													"statements": [
														{
															"nativeSrc": "645:35:9",
															"nodeType": "YulAssignment",
															"src": "645:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "674:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "674:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "656:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:17:9"
																},
																"nativeSrc": "656:24:9",
																"nodeType": "YulFunctionCall",
																"src": "656:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMintableToken_$739",
												"nativeSrc": "568:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:9",
														"nodeType": "YulTypedName",
														"src": "617:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:9",
														"nodeType": "YulTypedName",
														"src": "627:7:9",
														"type": ""
													}
												],
												"src": "568:118:9"
											},
											{
												"body": {
													"nativeSrc": "757:101:9",
													"nodeType": "YulBlock",
													"src": "757:101:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:16:9",
																"nodeType": "YulBlock",
																"src": "836:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "845:1:9",
																					"nodeType": "YulLiteral",
																					"src": "845:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "848:1:9",
																					"nodeType": "YulLiteral",
																					"src": "848:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "838:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:9"
																			},
																			"nativeSrc": "838:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "838:12:9"
																		},
																		"nativeSrc": "838:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "827:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "827:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMintableToken_$739",
																					"nativeSrc": "787:39:9",
																					"nodeType": "YulIdentifier",
																					"src": "787:39:9"
																				},
																				"nativeSrc": "787:46:9",
																				"nodeType": "YulFunctionCall",
																				"src": "787:46:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "777:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "777:2:9"
																		},
																		"nativeSrc": "777:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "777:57:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "770:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:9"
																},
																"nativeSrc": "770:65:9",
																"nodeType": "YulFunctionCall",
																"src": "770:65:9"
															},
															"nativeSrc": "767:85:9",
															"nodeType": "YulIf",
															"src": "767:85:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMintableToken_$739",
												"nativeSrc": "692:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "750:5:9",
														"nodeType": "YulTypedName",
														"src": "750:5:9",
														"type": ""
													}
												],
												"src": "692:166:9"
											},
											{
												"body": {
													"nativeSrc": "949:102:9",
													"nodeType": "YulBlock",
													"src": "949:102:9",
													"statements": [
														{
															"nativeSrc": "959:22:9",
															"nodeType": "YulAssignment",
															"src": "959:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "974:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "974:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "968:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "968:5:9"
																},
																"nativeSrc": "968:13:9",
																"nodeType": "YulFunctionCall",
																"src": "968:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1039:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1039:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMintableToken_$739",
																	"nativeSrc": "990:48:9",
																	"nodeType": "YulIdentifier",
																	"src": "990:48:9"
																},
																"nativeSrc": "990:55:9",
																"nodeType": "YulFunctionCall",
																"src": "990:55:9"
															},
															"nativeSrc": "990:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "990:55:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMintableToken_$739_fromMemory",
												"nativeSrc": "864:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:9",
														"nodeType": "YulTypedName",
														"src": "927:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:9",
														"nodeType": "YulTypedName",
														"src": "935:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:9",
														"nodeType": "YulTypedName",
														"src": "943:5:9",
														"type": ""
													}
												],
												"src": "864:187:9"
											},
											{
												"body": {
													"nativeSrc": "1102:32:9",
													"nodeType": "YulBlock",
													"src": "1102:32:9",
													"statements": [
														{
															"nativeSrc": "1112:16:9",
															"nodeType": "YulAssignment",
															"src": "1112:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1123:5:9",
																"nodeType": "YulIdentifier",
																"src": "1123:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1112:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1112:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1057:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1084:5:9",
														"nodeType": "YulTypedName",
														"src": "1084:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1094:7:9",
														"nodeType": "YulTypedName",
														"src": "1094:7:9",
														"type": ""
													}
												],
												"src": "1057:77:9"
											},
											{
												"body": {
													"nativeSrc": "1183:79:9",
													"nodeType": "YulBlock",
													"src": "1183:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1240:16:9",
																"nodeType": "YulBlock",
																"src": "1240:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1249:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1249:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1252:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1252:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1242:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1242:6:9"
																			},
																			"nativeSrc": "1242:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1242:12:9"
																		},
																		"nativeSrc": "1242:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1242:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1206:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1206:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1231:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1213:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1213:17:9"
																				},
																				"nativeSrc": "1213:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1213:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1203:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1203:2:9"
																		},
																		"nativeSrc": "1203:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1196:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:9"
																},
																"nativeSrc": "1196:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1196:43:9"
															},
															"nativeSrc": "1193:63:9",
															"nodeType": "YulIf",
															"src": "1193:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1140:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1176:5:9",
														"nodeType": "YulTypedName",
														"src": "1176:5:9",
														"type": ""
													}
												],
												"src": "1140:122:9"
											},
											{
												"body": {
													"nativeSrc": "1331:80:9",
													"nodeType": "YulBlock",
													"src": "1331:80:9",
													"statements": [
														{
															"nativeSrc": "1341:22:9",
															"nodeType": "YulAssignment",
															"src": "1341:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1356:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1350:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1350:5:9"
																},
																"nativeSrc": "1350:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1350:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1341:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1341:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1399:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1399:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1372:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1372:26:9"
																},
																"nativeSrc": "1372:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1372:33:9"
															},
															"nativeSrc": "1372:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1372:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1268:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1309:6:9",
														"nodeType": "YulTypedName",
														"src": "1309:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1317:3:9",
														"nodeType": "YulTypedName",
														"src": "1317:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1325:5:9",
														"nodeType": "YulTypedName",
														"src": "1325:5:9",
														"type": ""
													}
												],
												"src": "1268:143:9"
											},
											{
												"body": {
													"nativeSrc": "1477:51:9",
													"nodeType": "YulBlock",
													"src": "1477:51:9",
													"statements": [
														{
															"nativeSrc": "1487:35:9",
															"nodeType": "YulAssignment",
															"src": "1487:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1516:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1516:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1498:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1498:17:9"
																},
																"nativeSrc": "1498:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1498:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1487:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1487:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$638",
												"nativeSrc": "1417:111:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1459:5:9",
														"nodeType": "YulTypedName",
														"src": "1459:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1469:7:9",
														"nodeType": "YulTypedName",
														"src": "1469:7:9",
														"type": ""
													}
												],
												"src": "1417:111:9"
											},
											{
												"body": {
													"nativeSrc": "1592:94:9",
													"nodeType": "YulBlock",
													"src": "1592:94:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1664:16:9",
																"nodeType": "YulBlock",
																"src": "1664:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1673:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1673:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1676:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1676:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1666:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1666:6:9"
																			},
																			"nativeSrc": "1666:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1666:12:9"
																		},
																		"nativeSrc": "1666:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1666:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1615:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1655:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1655:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$638",
																					"nativeSrc": "1622:32:9",
																					"nodeType": "YulIdentifier",
																					"src": "1622:32:9"
																				},
																				"nativeSrc": "1622:39:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:39:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1612:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1612:2:9"
																		},
																		"nativeSrc": "1612:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1612:50:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1605:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:9"
																},
																"nativeSrc": "1605:58:9",
																"nodeType": "YulFunctionCall",
																"src": "1605:58:9"
															},
															"nativeSrc": "1602:78:9",
															"nodeType": "YulIf",
															"src": "1602:78:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$638",
												"nativeSrc": "1534:152:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1585:5:9",
														"nodeType": "YulTypedName",
														"src": "1585:5:9",
														"type": ""
													}
												],
												"src": "1534:152:9"
											},
											{
												"body": {
													"nativeSrc": "1770:95:9",
													"nodeType": "YulBlock",
													"src": "1770:95:9",
													"statements": [
														{
															"nativeSrc": "1780:22:9",
															"nodeType": "YulAssignment",
															"src": "1780:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1795:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1795:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1789:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1789:5:9"
																},
																"nativeSrc": "1789:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1789:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1780:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1780:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1853:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1853:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$638",
																	"nativeSrc": "1811:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "1811:41:9"
																},
																"nativeSrc": "1811:48:9",
																"nodeType": "YulFunctionCall",
																"src": "1811:48:9"
															},
															"nativeSrc": "1811:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "1811:48:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$638_fromMemory",
												"nativeSrc": "1692:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1748:6:9",
														"nodeType": "YulTypedName",
														"src": "1748:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1756:3:9",
														"nodeType": "YulTypedName",
														"src": "1756:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1764:5:9",
														"nodeType": "YulTypedName",
														"src": "1764:5:9",
														"type": ""
													}
												],
												"src": "1692:173:9"
											},
											{
												"body": {
													"nativeSrc": "1932:51:9",
													"nodeType": "YulBlock",
													"src": "1932:51:9",
													"statements": [
														{
															"nativeSrc": "1942:35:9",
															"nodeType": "YulAssignment",
															"src": "1942:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1971:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1971:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1953:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1953:17:9"
																},
																"nativeSrc": "1953:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1953:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1942:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1942:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_nftIface_$729",
												"nativeSrc": "1871:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1914:5:9",
														"nodeType": "YulTypedName",
														"src": "1914:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1924:7:9",
														"nodeType": "YulTypedName",
														"src": "1924:7:9",
														"type": ""
													}
												],
												"src": "1871:112:9"
											},
											{
												"body": {
													"nativeSrc": "2048:95:9",
													"nodeType": "YulBlock",
													"src": "2048:95:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2121:16:9",
																"nodeType": "YulBlock",
																"src": "2121:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2130:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2133:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2133:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2123:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2123:6:9"
																			},
																			"nativeSrc": "2123:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2123:12:9"
																		},
																		"nativeSrc": "2123:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2123:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2071:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2071:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2112:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2112:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_nftIface_$729",
																					"nativeSrc": "2078:33:9",
																					"nodeType": "YulIdentifier",
																					"src": "2078:33:9"
																				},
																				"nativeSrc": "2078:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2078:40:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2068:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2068:2:9"
																		},
																		"nativeSrc": "2068:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2068:51:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2061:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:9"
																},
																"nativeSrc": "2061:59:9",
																"nodeType": "YulFunctionCall",
																"src": "2061:59:9"
															},
															"nativeSrc": "2058:79:9",
															"nodeType": "YulIf",
															"src": "2058:79:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_nftIface_$729",
												"nativeSrc": "1989:154:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2041:5:9",
														"nodeType": "YulTypedName",
														"src": "2041:5:9",
														"type": ""
													}
												],
												"src": "1989:154:9"
											},
											{
												"body": {
													"nativeSrc": "2228:96:9",
													"nodeType": "YulBlock",
													"src": "2228:96:9",
													"statements": [
														{
															"nativeSrc": "2238:22:9",
															"nodeType": "YulAssignment",
															"src": "2238:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2253:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2253:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2247:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2247:5:9"
																},
																"nativeSrc": "2247:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2247:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2238:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2238:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2312:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2312:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_nftIface_$729",
																	"nativeSrc": "2269:42:9",
																	"nodeType": "YulIdentifier",
																	"src": "2269:42:9"
																},
																"nativeSrc": "2269:49:9",
																"nodeType": "YulFunctionCall",
																"src": "2269:49:9"
															},
															"nativeSrc": "2269:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "2269:49:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_nftIface_$729_fromMemory",
												"nativeSrc": "2149:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2206:6:9",
														"nodeType": "YulTypedName",
														"src": "2206:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2214:3:9",
														"nodeType": "YulTypedName",
														"src": "2214:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2222:5:9",
														"nodeType": "YulTypedName",
														"src": "2222:5:9",
														"type": ""
													}
												],
												"src": "2149:175:9"
											},
											{
												"body": {
													"nativeSrc": "2511:745:9",
													"nodeType": "YulBlock",
													"src": "2511:745:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2558:83:9",
																"nodeType": "YulBlock",
																"src": "2558:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2560:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2560:77:9"
																			},
																			"nativeSrc": "2560:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2560:79:9"
																		},
																		"nativeSrc": "2560:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2560:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2532:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2532:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2541:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2541:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2528:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2528:3:9"
																		},
																		"nativeSrc": "2528:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2528:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2553:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2553:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2524:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2524:3:9"
																},
																"nativeSrc": "2524:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2524:33:9"
															},
															"nativeSrc": "2521:120:9",
															"nodeType": "YulIf",
															"src": "2521:120:9"
														},
														{
															"nativeSrc": "2651:150:9",
															"nodeType": "YulBlock",
															"src": "2651:150:9",
															"statements": [
																{
																	"nativeSrc": "2666:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2666:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2680:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2680:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2670:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2670:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2695:96:9",
																	"nodeType": "YulAssignment",
																	"src": "2695:96:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2763:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2774:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2759:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:9"
																				},
																				"nativeSrc": "2759:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2783:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMintableToken_$739_fromMemory",
																			"nativeSrc": "2705:53:9",
																			"nodeType": "YulIdentifier",
																			"src": "2705:53:9"
																		},
																		"nativeSrc": "2705:86:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2705:86:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2695:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2695:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2811:129:9",
															"nodeType": "YulBlock",
															"src": "2811:129:9",
															"statements": [
																{
																	"nativeSrc": "2826:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2840:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2830:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2856:74:9",
																	"nodeType": "YulAssignment",
																	"src": "2856:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2902:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2902:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2913:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2913:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2898:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:9"
																				},
																				"nativeSrc": "2898:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2898:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2922:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2922:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2866:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "2866:31:9"
																		},
																		"nativeSrc": "2866:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2866:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2856:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2950:144:9",
															"nodeType": "YulBlock",
															"src": "2950:144:9",
															"statements": [
																{
																	"nativeSrc": "2965:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2965:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2979:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2969:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2969:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2995:89:9",
																	"nodeType": "YulAssignment",
																	"src": "2995:89:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3056:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3056:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3067:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3067:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3052:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3052:3:9"
																				},
																				"nativeSrc": "3052:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3052:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3076:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3076:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$638_fromMemory",
																			"nativeSrc": "3005:46:9",
																			"nodeType": "YulIdentifier",
																			"src": "3005:46:9"
																		},
																		"nativeSrc": "3005:79:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:79:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2995:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2995:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3104:145:9",
															"nodeType": "YulBlock",
															"src": "3104:145:9",
															"statements": [
																{
																	"nativeSrc": "3119:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3119:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3133:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3123:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3123:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3149:90:9",
																	"nodeType": "YulAssignment",
																	"src": "3149:90:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3211:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3211:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3222:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3222:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3207:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3207:3:9"
																				},
																				"nativeSrc": "3207:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3207:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3231:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3231:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_nftIface_$729_fromMemory",
																			"nativeSrc": "3159:47:9",
																			"nodeType": "YulIdentifier",
																			"src": "3159:47:9"
																		},
																		"nativeSrc": "3159:80:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:80:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3149:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3149:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMintableToken_$739t_uint256t_contract$_IERC721_$638t_contract$_nftIface_$729_fromMemory",
												"nativeSrc": "2330:926:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2457:9:9",
														"nodeType": "YulTypedName",
														"src": "2457:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2468:7:9",
														"nodeType": "YulTypedName",
														"src": "2468:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2480:6:9",
														"nodeType": "YulTypedName",
														"src": "2480:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2488:6:9",
														"nodeType": "YulTypedName",
														"src": "2488:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2496:6:9",
														"nodeType": "YulTypedName",
														"src": "2496:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2504:6:9",
														"nodeType": "YulTypedName",
														"src": "2504:6:9",
														"type": ""
													}
												],
												"src": "2330:926:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IMintableToken_$739(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMintableToken_$739(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMintableToken_$739(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMintableToken_$739_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IMintableToken_$739(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$638(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$638(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$638(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$638_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$638(value)\n    }\n\n    function cleanup_t_contract$_nftIface_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_nftIface_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_nftIface_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_nftIface_$729_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_nftIface_$729(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMintableToken_$739t_uint256t_contract$_IERC721_$638t_contract$_nftIface_$729_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMintableToken_$739_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC721_$638_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_nftIface_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612b55380380612b5583398181016040528101906100319190610285565b600180819055508360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506602d79883d200006005819055504360068190555082600981905550604051806060016040528066038d7ea4c6800081526020016601c6bf52634000815260200165b5e620f48000815250600a5f820151815f01556020820151816001015560408201518160020155905050505050506102e9565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61019a82610171565b9050919050565b5f6101ab82610190565b9050919050565b6101bb816101a1565b81146101c5575f80fd5b50565b5f815190506101d6816101b2565b92915050565b5f819050919050565b6101ee816101dc565b81146101f8575f80fd5b50565b5f81519050610209816101e5565b92915050565b5f61021982610190565b9050919050565b6102298161020f565b8114610233575f80fd5b50565b5f8151905061024481610220565b92915050565b5f61025482610190565b9050919050565b6102648161024a565b811461026e575f80fd5b50565b5f8151905061027f8161025b565b92915050565b5f805f806080858703121561029d5761029c61016d565b5b5f6102aa878288016101c8565b94505060206102bb878288016101fb565b93505060406102cc87828801610236565b92505060606102dd87828801610271565b91505092959194509250565b61285f806102f65f395ff3fe608060405234801561000f575f80fd5b50600436106101ee575f3560e01c8063817b1cd21161010d578063a694fc3a116100a0578063f2d57adf1161006f578063f2d57adf14610581578063f56e9c661461059d578063fc0c546a146105b9578063fdf553cf146105d7576101ee565b8063a694fc3a1461050f578063b0ad08df1461052b578063b2f196f614610549578063d547741f14610565576101ee565b806391d14854116100dc57806391d1485414610485578063a217fddf146104b5578063a218141b146104d3578063a56bef5d146104f1576101ee565b8063817b1cd2146103fb578063817c8966146104195780638d580b9f146104495780639087049214610467576101ee565b80632e97766d1161018557806341f431fd1161015457806341f431fd1461038757806347ccca02146103a357806348132f48146103c157806351557289146103dd576101ee565b80632e97766d146103275780632f2ff15d1461034557806336568abe14610361578063372500ab1461037d576101ee565b8063144fa6d7116101c1578063144fa6d71461028e5780631959a002146102aa578063248a9ca3146102db5780632e17de781461030b576101ee565b806301ffc9a7146101f2578063097aad10146102225780630b433a12146102525780630e15561a14610270575b5f80fd5b61020c60048036038101906102079190611a33565b6105f7565b6040516102199190611a78565b60405180910390f35b61023c60048036038101906102379190611aeb565b610670565b6040516102499190611b2e565b60405180910390f35b61025a610770565b6040516102679190611b2e565b60405180910390f35b610278610776565b6040516102859190611b2e565b60405180910390f35b6102a860048036038101906102a39190611b82565b61077c565b005b6102c460048036038101906102bf9190611aeb565b6107f8565b6040516102d2929190611bad565b60405180910390f35b6102f560048036038101906102f09190611c07565b610818565b6040516103029190611c41565b60405180910390f35b61032560048036038101906103209190611c84565b610834565b005b61032f610850565b60405161033c9190611b2e565b60405180910390f35b61035f600480360381019061035a9190611caf565b61085c565b005b61037b60048036038101906103769190611caf565b61087e565b005b6103856108f9565b005b6103a1600480360381019061039c9190611d28565b61091b565b005b6103ab6109e5565b6040516103b89190611dd3565b60405180910390f35b6103db60048036038101906103d69190611e27565b610a0a565b005b6103e5610a9b565b6040516103f29190611c41565b60405180910390f35b610403610abf565b6040516104109190611b2e565b60405180910390f35b610433600480360381019061042e9190611aeb565b610ac5565b6040516104409190611b2e565b60405180910390f35b610451610b66565b60405161045e9190611c41565b60405180910390f35b61046f610b8a565b60405161047c9190611b2e565b60405180910390f35b61049f600480360381019061049a9190611caf565b610b90565b6040516104ac9190611a78565b60405180910390f35b6104bd610bf3565b6040516104ca9190611c41565b60405180910390f35b6104db610bf9565b6040516104e89190611b2e565b60405180910390f35b6104f9610bff565b6040516105069190611c41565b60405180910390f35b61052960048036038101906105249190611c84565b610c23565b005b610533610c3f565b6040516105409190611e85565b60405180910390f35b610563600480360381019061055e9190611c84565b610c64565b005b61057f600480360381019061057a9190611caf565b610cf0565b005b61059b60048036038101906105969190611c84565b610d12565b005b6105b760048036038101906105b29190611ed9565b610d55565b005b6105c1610dd1565b6040516105ce9190611f24565b60405180910390f35b6105df610df6565b6040516105ee93929190611f3d565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610669575061066882610e0d565b5b9050919050565b5f8061067b83610ac5565b90505f6001820361069257600a5f015490506106f9565b600282036106a757600a6001015490506106f8565b600382036106bc57600a6002015490506106f7565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90611fcc565b60405180910390fd5b5b5b5f600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154436107469190612017565b90505f8183600554610758919061204a565b610762919061207d565b905080945050505050919050565b60095481565b60085481565b6107ad7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d36107a8610e76565b610b90565b6107b5575f80fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d602052805f5260405f205f91509050805f0154908060010154905082565b5f805f8381526020019081526020015f20600101549050919050565b61083c610e7d565b61084581610ecc565b61084d61116b565b50565b5f804390508091505090565b61086582610818565b61086e81611174565b6108788383611188565b50505050565b610886610e76565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108ea576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f48282611271565b505050565b610901610e7d565b61091161090c610e76565b61135a565b61091961116b565b565b610923610e7d565b6109547f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b961094f610e76565b610b90565b61095c575f80fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016109979291906120cd565b6020604051808303815f875af11580156109b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d7919061211e565b506109e061116b565b505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a12610e7d565b610a437f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9610a3e610e76565b610b90565b610a4b575f80fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610a8e573d5f803e3d5ffd5b50610a9761116b565b5050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d381565b60075481565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ab0d49e836040518263ffffffff1660e01b8152600401610b209190612149565b602060405180830381865afa158015610b3b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b5f9190612176565b9050919050565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b981565b60055481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b60065481565b7f8c342c7aca7f35847406e6353e35c5762132fa3e958179931981d120af75dfb281565b610c2b610e7d565b610c348161157e565b610c3c61116b565b50565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610ca6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9d906121eb565b60405180910390fd5b610cd77fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610cd2610e76565b610b90565b610cdf575f80fd5b806005819055504360068190555050565b610cf982610818565b610d0281611174565b610d0c8383611271565b50505050565b610d437fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610d3e610e76565b610b90565b610d4b575f80fd5b8060098190555050565b610d867fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610d81610e76565b610b90565b610d8e575f80fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a805f0154908060010154908060020154905083565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b600260015403610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb990612253565b60405180910390fd5b6002600181905550565b5f600d5f610ed8610e76565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8211610f55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4c906122e1565b60405180910390fd5b81815f01541015610f9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f929061236f565b60405180910390fd5b6009548160010154610fad919061204a565b431015610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe6906123fd565b60405180910390fd5b610fff610ffa610e76565b61135a565b81815f015f8282546110119190612017565b925050819055508160075f8282546110299190612017565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb611075610e76565b846040518363ffffffff1660e01b81526004016110939291906120cd565b6020604051808303815f875af11580156110af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110d3919061211e565b611112576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111099061248b565b60405180910390fd5b61111a610e76565b73ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758360405161115f9190611b2e565b60405180910390a25050565b60018081905550565b61118581611180610e76565b611989565b50565b5f6111938383610b90565b6112675760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611204610e76565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061126b565b5f90505b92915050565b5f61127c8383610b90565b15611350575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506112ed610e76565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611354565b5f90505b92915050565b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f0154116113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d6906124f3565b60405180910390fd5b60095481600101546113f1919061204a565b431015611433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142a906123fd565b60405180910390fd5b5f61143d83610670565b90505f8111611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147890612581565b60405180910390fd5b4382600101819055508060085f82825461149b919061204a565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663449a52f884836040518363ffffffff1660e01b81526004016114fe9291906120cd565b5f604051808303815f87803b158015611515575f80fd5b505af1158015611527573d5f803e3d5ffd5b505050508273ffffffffffffffffffffffffffffffffffffffff167f2d5429efdeca7741a8cd94067b18d988bc4e5f1d5b8272c37b7bfc31e9bfa32c826040516115719190611b2e565b60405180910390a2505050565b5f81116115c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b79061260f565b60405180910390fd5b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231611606610e76565b6040518263ffffffff1660e01b81526004016116229190612149565b602060405180830381865afa15801561163d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116619190612176565b116116a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169890612677565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016116fd9291906120cd565b6020604051808303815f875af1158015611719573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061173d919061211e565b61177c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611773906126df565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6117c1610e76565b30846040518463ffffffff1660e01b81526004016117e1939291906126fd565b6020604051808303815f875af11580156117fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611821919061211e565b611860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118579061277c565b60405180910390fd5b5f600d5f61186c610e76565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015f8282546118b9919061204a565b9250508190555068056bc75e2d63100000815f0154111561190f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611906906127e4565b60405180910390fd5b8160075f828254611920919061204a565b92505081905550438160010181905550611938610e76565b73ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8360405161197d9190611b2e565b60405180910390a25050565b6119938282610b90565b6119d65780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016119cd929190612802565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a12816119de565b8114611a1c575f80fd5b50565b5f81359050611a2d81611a09565b92915050565b5f60208284031215611a4857611a476119da565b5b5f611a5584828501611a1f565b91505092915050565b5f8115159050919050565b611a7281611a5e565b82525050565b5f602082019050611a8b5f830184611a69565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aba82611a91565b9050919050565b611aca81611ab0565b8114611ad4575f80fd5b50565b5f81359050611ae581611ac1565b92915050565b5f60208284031215611b0057611aff6119da565b5b5f611b0d84828501611ad7565b91505092915050565b5f819050919050565b611b2881611b16565b82525050565b5f602082019050611b415f830184611b1f565b92915050565b5f611b5182611ab0565b9050919050565b611b6181611b47565b8114611b6b575f80fd5b50565b5f81359050611b7c81611b58565b92915050565b5f60208284031215611b9757611b966119da565b5b5f611ba484828501611b6e565b91505092915050565b5f604082019050611bc05f830185611b1f565b611bcd6020830184611b1f565b9392505050565b5f819050919050565b611be681611bd4565b8114611bf0575f80fd5b50565b5f81359050611c0181611bdd565b92915050565b5f60208284031215611c1c57611c1b6119da565b5b5f611c2984828501611bf3565b91505092915050565b611c3b81611bd4565b82525050565b5f602082019050611c545f830184611c32565b92915050565b611c6381611b16565b8114611c6d575f80fd5b50565b5f81359050611c7e81611c5a565b92915050565b5f60208284031215611c9957611c986119da565b5b5f611ca684828501611c70565b91505092915050565b5f8060408385031215611cc557611cc46119da565b5b5f611cd285828601611bf3565b9250506020611ce385828601611ad7565b9150509250929050565b5f611cf782611ab0565b9050919050565b611d0781611ced565b8114611d11575f80fd5b50565b5f81359050611d2281611cfe565b92915050565b5f805f60608486031215611d3f57611d3e6119da565b5b5f611d4c86828701611d14565b9350506020611d5d86828701611ad7565b9250506040611d6e86828701611c70565b9150509250925092565b5f819050919050565b5f611d9b611d96611d9184611a91565b611d78565b611a91565b9050919050565b5f611dac82611d81565b9050919050565b5f611dbd82611da2565b9050919050565b611dcd81611db3565b82525050565b5f602082019050611de65f830184611dc4565b92915050565b5f611df682611a91565b9050919050565b611e0681611dec565b8114611e10575f80fd5b50565b5f81359050611e2181611dfd565b92915050565b5f8060408385031215611e3d57611e3c6119da565b5b5f611e4a85828601611e13565b9250506020611e5b85828601611c70565b9150509250929050565b5f611e6f82611da2565b9050919050565b611e7f81611e65565b82525050565b5f602082019050611e985f830184611e76565b92915050565b5f611ea882611ab0565b9050919050565b611eb881611e9e565b8114611ec2575f80fd5b50565b5f81359050611ed381611eaf565b92915050565b5f60208284031215611eee57611eed6119da565b5b5f611efb84828501611ec5565b91505092915050565b5f611f0e82611da2565b9050919050565b611f1e81611f04565b82525050565b5f602082019050611f375f830184611f15565b92915050565b5f606082019050611f505f830186611b1f565b611f5d6020830185611b1f565b611f6a6040830184611b1f565b949350505050565b5f82825260208201905092915050565b7f4e6f204e4654204c6576656c00000000000000000000000000000000000000005f82015250565b5f611fb6600c83611f72565b9150611fc182611f82565b602082019050919050565b5f6020820190508181035f830152611fe381611faa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61202182611b16565b915061202c83611b16565b925082820390508181111561204457612043611fea565b5b92915050565b5f61205482611b16565b915061205f83611b16565b925082820190508082111561207757612076611fea565b5b92915050565b5f61208782611b16565b915061209283611b16565b92508282026120a081611b16565b915082820484148315176120b7576120b6611fea565b5b5092915050565b6120c781611ab0565b82525050565b5f6040820190506120e05f8301856120be565b6120ed6020830184611b1f565b9392505050565b6120fd81611a5e565b8114612107575f80fd5b50565b5f81519050612118816120f4565b92915050565b5f60208284031215612133576121326119da565b5b5f6121408482850161210a565b91505092915050565b5f60208201905061215c5f8301846120be565b92915050565b5f8151905061217081611c5a565b92915050565b5f6020828403121561218b5761218a6119da565b5b5f61219884828501612162565b91505092915050565b7f5265776172642072617465206d75737420626520706f736974697665000000005f82015250565b5f6121d5601c83611f72565b91506121e0826121a1565b602082019050919050565b5f6020820190508181035f830152612202816121c9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61223d601f83611f72565b915061224882612209565b602082019050919050565b5f6020820190508181035f83015261226a81612231565b9050919050565b7f546f6b656e5374616b696e673a20416d6f756e74206d757374206265206772655f8201527f61746572207468616e2030000000000000000000000000000000000000000000602082015250565b5f6122cb602b83611f72565b91506122d682612271565b604082019050919050565b5f6020820190508181035f8301526122f8816122bf565b9050919050565b7f546f6b656e5374616b696e673a20496e73756666696369656e74207374616b655f8201527f642062616c616e63650000000000000000000000000000000000000000000000602082015250565b5f612359602983611f72565b9150612364826122ff565b604082019050919050565b5f6020820190508181035f8301526123868161234d565b9050919050565b7f546f6b656e5374616b696e673a20436c61696d20696e74657276616c206e6f745f8201527f206d657400000000000000000000000000000000000000000000000000000000602082015250565b5f6123e7602483611f72565b91506123f28261238d565b604082019050919050565b5f6020820190508181035f830152612414816123db565b9050919050565b7f546f6b656e5374616b696e673a20556e7374616b65207472616e7366657220665f8201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b5f612475602583611f72565b91506124808261241b565b604082019050919050565b5f6020820190508181035f8301526124a281612469565b9050919050565b7f546f6b656e5374616b696e673a204e6f207374616b65642062616c616e6365005f82015250565b5f6124dd601f83611f72565b91506124e8826124a9565b602082019050919050565b5f6020820190508181035f83015261250a816124d1565b9050919050565b7f546f6b656e5374616b696e673a204e6f207265776172647320746f20636c61695f8201527f6d00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61256b602183611f72565b915061257682612511565b604082019050919050565b5f6020820190508181035f8301526125988161255f565b9050919050565b7f5374616b696e673a20416d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f6125f9602683611f72565b91506126048261259f565b604082019050919050565b5f6020820190508181035f830152612626816125ed565b9050919050565b7f5374616b696e673a204e6f204e46542062616c616e63650000000000000000005f82015250565b5f612661601783611f72565b915061266c8261262d565b602082019050919050565b5f6020820190508181035f83015261268e81612655565b9050919050565b7f5374616b696e673a20417070726f76616c206661696c656400000000000000005f82015250565b5f6126c9601883611f72565b91506126d482612695565b602082019050919050565b5f6020820190508181035f8301526126f6816126bd565b9050919050565b5f6060820190506127105f8301866120be565b61271d60208301856120be565b61272a6040830184611b1f565b949350505050565b7f5374616b696e673a20546f6b656e207472616e73666572206661696c656400005f82015250565b5f612766601e83611f72565b915061277182612732565b602082019050919050565b5f6020820190508181035f8301526127938161275a565b9050919050565b7f5374616b652065786365656473206361700000000000000000000000000000005f82015250565b5f6127ce601183611f72565b91506127d98261279a565b602082019050919050565b5f6020820190508181035f8301526127fb816127c2565b9050919050565b5f6040820190506128155f8301856120be565b6128226020830184611c32565b939250505056fea26469706673582212206bee125c14226d1e1a099dd96a68b0a5d518e378148ea4d36e67fa71451b6e3864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B55 CODESIZE SUB DUP1 PUSH2 0x2B55 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x2D79883D20000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x38D7EA4C68000 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1C6BF52634000 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0xB5E620F48000 DUP2 MSTORE POP PUSH1 0xA PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP POP PUSH2 0x2E9 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A DUP3 PUSH2 0x171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB DUP3 PUSH2 0x190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D6 DUP2 PUSH2 0x1B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x209 DUP2 PUSH2 0x1E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x219 DUP3 PUSH2 0x190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229 DUP2 PUSH2 0x20F JUMP JUMPDEST DUP2 EQ PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x244 DUP2 PUSH2 0x220 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x254 DUP3 PUSH2 0x190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x24A JUMP JUMPDEST DUP2 EQ PUSH2 0x26E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27F DUP2 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29D JUMPI PUSH2 0x29C PUSH2 0x16D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AA DUP8 DUP3 DUP9 ADD PUSH2 0x1C8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2BB DUP8 DUP3 DUP9 ADD PUSH2 0x1FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2CC DUP8 DUP3 DUP9 ADD PUSH2 0x236 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2DD DUP8 DUP3 DUP9 ADD PUSH2 0x271 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x285F DUP1 PUSH2 0x2F6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2D57ADF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2D57ADF EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xF56E9C66 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xFDF553CF EQ PUSH2 0x5D7 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xB0AD08DF EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xB2F196F6 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x565 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xA218141B EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xA56BEF5D EQ PUSH2 0x4F1 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x817C8966 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x8D580B9F EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x90870492 EQ PUSH2 0x467 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2E97766D GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x41F431FD GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x41F431FD EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x48132F48 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x51557289 EQ PUSH2 0x3DD JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2E97766D EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x37D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x144FA6D7 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x30B JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x97AAD10 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xB433A12 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x834 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH2 0x8F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E5 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F9 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xC23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x533 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C1 PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DF PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x669 JUMPI POP PUSH2 0x668 DUP3 PUSH2 0xE0D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x67B DUP4 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x692 JUMPI PUSH1 0xA PUSH0 ADD SLOAD SWAP1 POP PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x6A7 JUMPI PUSH1 0xA PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x6BC JUMPI PUSH1 0xA PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD NUMBER PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x5 SLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AD PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x7A8 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x7B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83C PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x845 DUP2 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x84D PUSH2 0x116B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 NUMBER SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x865 DUP3 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x86E DUP2 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x878 DUP4 DUP4 PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x886 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F4 DUP3 DUP3 PUSH2 0x1271 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x901 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x911 PUSH2 0x90C PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x919 PUSH2 0x116B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x923 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x954 PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0x94F PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x95C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST POP PUSH2 0x9E0 PUSH2 0x116B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xA43 PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0xA3E PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xA4B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xA97 PUSH2 0x116B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1AB0D49E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x8C342C7ACA7F35847406E6353E35C5762132FA3E958179931981D120AF75DFB2 DUP2 JUMP JUMPDEST PUSH2 0xC2B PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0x157E JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x116B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD7 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xCD2 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xCDF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCF9 DUP3 PUSH2 0x818 JUMP JUMPDEST PUSH2 0xD02 DUP2 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xD0C DUP4 DUP4 PUSH2 0x1271 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD43 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xD3E PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD4B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD86 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xD81 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x2253 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 PUSH2 0xED8 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 GT PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFF PUSH2 0xFFA PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1011 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x1075 PUSH2 0xE76 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1093 SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x1112 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1109 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111A PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP4 PUSH1 0x40 MLOAD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1180 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x1989 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1193 DUP4 DUP4 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x1267 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1204 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x126B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x127C DUP4 DUP4 PUSH2 0xB90 JUMP JUMPDEST ISZERO PUSH2 0x1350 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x12ED PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1354 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D6 SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x13F1 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x143D DUP4 PUSH2 0x670 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP1 PUSH2 0x2581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x149B SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x449A52F8 DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FE SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1515 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1527 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2D5429EFDECA7741A8CD94067B18D988BC4E5F1D5B8272C37B7BFC31E9BFA32C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x15C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B7 SWAP1 PUSH2 0x260F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1606 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST GT PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP1 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1719 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x173D SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1773 SWAP1 PUSH2 0x26DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x17C1 PUSH2 0xE76 JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x1860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1857 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 PUSH2 0x186C PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18B9 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH9 0x56BC75E2D63100000 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x190F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1906 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1920 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP NUMBER DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1938 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1993 DUP3 DUP3 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x19D6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CD SWAP3 SWAP2 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A12 DUP2 PUSH2 0x19DE JUMP JUMPDEST DUP2 EQ PUSH2 0x1A1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A2D DUP2 PUSH2 0x1A09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A55 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A72 DUP2 PUSH2 0x1A5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8B PUSH0 DUP4 ADD DUP5 PUSH2 0x1A69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABA DUP3 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE5 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0D DUP5 DUP3 DUP6 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B28 DUP2 PUSH2 0x1B16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B41 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B51 DUP3 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B61 DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B7C DUP2 PUSH2 0x1B58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BC0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x1BCD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE6 DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C01 DUP2 PUSH2 0x1BDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C29 DUP5 DUP3 DUP6 ADD PUSH2 0x1BF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C3B DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C63 DUP2 PUSH2 0x1B16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7E DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C99 JUMPI PUSH2 0x1C98 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA6 DUP5 DUP3 DUP6 ADD PUSH2 0x1C70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x1CC4 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD2 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE3 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF7 DUP3 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1CED JUMP JUMPDEST DUP2 EQ PUSH2 0x1D11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D22 DUP2 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D3F JUMPI PUSH2 0x1D3E PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D4C DUP7 DUP3 DUP8 ADD PUSH2 0x1D14 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D5D DUP7 DUP3 DUP8 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D6E DUP7 DUP3 DUP8 ADD PUSH2 0x1C70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D9B PUSH2 0x1D96 PUSH2 0x1D91 DUP5 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAC DUP3 PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBD DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DCD DUP2 PUSH2 0x1DB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF6 DUP3 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x1DEC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E21 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E3C PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E4A DUP6 DUP3 DUP7 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5B DUP6 DUP3 DUP7 ADD PUSH2 0x1C70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6F DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7F DUP2 PUSH2 0x1E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E98 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA8 DUP3 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB8 DUP2 PUSH2 0x1E9E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED3 DUP2 PUSH2 0x1EAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EEE JUMPI PUSH2 0x1EED PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EFB DUP5 DUP3 DUP6 ADD PUSH2 0x1EC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0E DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1F04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F37 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F50 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x1F5D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x1F6A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204E4654204C6576656C0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB6 PUSH1 0xC DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC1 DUP3 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE3 DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2021 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x202C DUP4 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2044 JUMPI PUSH2 0x2043 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2054 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x205F DUP4 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2087 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x2092 DUP4 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20A0 DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x20ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1A5E JUMP JUMPDEST DUP2 EQ PUSH2 0x2107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2118 DUP2 PUSH2 0x20F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2133 JUMPI PUSH2 0x2132 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2140 DUP5 DUP3 DUP6 ADD PUSH2 0x210A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215C PUSH0 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2170 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x218B JUMPI PUSH2 0x218A PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2198 DUP5 DUP3 DUP6 ADD PUSH2 0x2162 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172642072617465206D75737420626520706F73697469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D5 PUSH1 0x1C DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E0 DUP3 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2202 DUP2 PUSH2 0x21C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223D PUSH1 0x1F DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2248 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x226A DUP2 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20416D6F756E74206D75737420626520677265 PUSH0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22CB PUSH1 0x2B DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x22D6 DUP3 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22F8 DUP2 PUSH2 0x22BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20496E73756666696369656E74207374616B65 PUSH0 DUP3 ADD MSTORE PUSH32 0x642062616C616E63650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2359 PUSH1 0x29 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2364 DUP3 PUSH2 0x22FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2386 DUP2 PUSH2 0x234D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20436C61696D20696E74657276616C206E6F74 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D657400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E7 PUSH1 0x24 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F2 DUP3 PUSH2 0x238D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2414 DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20556E7374616B65207472616E736665722066 PUSH0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2475 PUSH1 0x25 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2480 DUP3 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A2 DUP2 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A204E6F207374616B65642062616C616E636500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DD PUSH1 0x1F DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E8 DUP3 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250A DUP2 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A204E6F207265776172647320746F20636C6169 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x256B PUSH1 0x21 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2576 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2598 DUP2 PUSH2 0x255F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20416D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F9 PUSH1 0x26 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2604 DUP3 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2626 DUP2 PUSH2 0x25ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A204E6F204E46542062616C616E6365000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2661 PUSH1 0x17 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x266C DUP3 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x268E DUP2 PUSH2 0x2655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20417070726F76616C206661696C65640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26C9 PUSH1 0x18 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D4 DUP3 PUSH2 0x2695 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F6 DUP2 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2710 PUSH0 DUP4 ADD DUP7 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x271D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x272A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20546F6B656E207472616E73666572206661696C65640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2766 PUSH1 0x1E DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2771 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2793 DUP2 PUSH2 0x275A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206578636565647320636170000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE PUSH1 0x11 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x27D9 DUP3 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27FB DUP2 PUSH2 0x27C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2815 PUSH0 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x2822 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xEE125C14226D1E1A099DD96A PUSH9 0xB0A5D518E378148EA4 0xD3 PUSH15 0x67FA71451B6E3864736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "953:9557:8:-:0;;;3300:401;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;;;;3408:6:8;3400:5;;:14;;;;;;;;;;;;;;;;;;3430:4;3424:3;;:10;;;;;;;;;;;;;;;;;;3455:9;3444:8;;:20;;;;;;;;;;;;;;;;;;3495:12;3474:18;:33;;;;3535:12;3517:15;:30;;;;3573:14;3557:13;:30;;;;3611:83;;;;;;;;3636:11;3611:83;;;;3657:12;3611:83;;;;3679:12;3611:83;;;3597:11;:97;;;;;;;;;;;;;;;;;;;;;;;;;;;3300:401;;;;953:9557;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:118::-;627:7;656:24;674:5;656:24;:::i;:::-;645:35;;568:118;;;:::o;692:166::-;787:46;827:5;787:46;:::i;:::-;780:5;777:57;767:85;;848:1;845;838:12;767:85;692:166;:::o;864:187::-;943:5;974:6;968:13;959:22;;990:55;1039:5;990:55;:::i;:::-;864:187;;;;:::o;1057:77::-;1094:7;1123:5;1112:16;;1057:77;;;:::o;1140:122::-;1213:24;1231:5;1213:24;:::i;:::-;1206:5;1203:35;1193:63;;1252:1;1249;1242:12;1193:63;1140:122;:::o;1268:143::-;1325:5;1356:6;1350:13;1341:22;;1372:33;1399:5;1372:33;:::i;:::-;1268:143;;;;:::o;1417:111::-;1469:7;1498:24;1516:5;1498:24;:::i;:::-;1487:35;;1417:111;;;:::o;1534:152::-;1622:39;1655:5;1622:39;:::i;:::-;1615:5;1612:50;1602:78;;1676:1;1673;1666:12;1602:78;1534:152;:::o;1692:173::-;1764:5;1795:6;1789:13;1780:22;;1811:48;1853:5;1811:48;:::i;:::-;1692:173;;;;:::o;1871:112::-;1924:7;1953:24;1971:5;1953:24;:::i;:::-;1942:35;;1871:112;;;:::o;1989:154::-;2078:40;2112:5;2078:40;:::i;:::-;2071:5;2068:51;2058:79;;2133:1;2130;2123:12;2058:79;1989:154;:::o;2149:175::-;2222:5;2253:6;2247:13;2238:22;;2269:49;2312:5;2269:49;:::i;:::-;2149:175;;;;:::o;2330:926::-;2480:6;2488;2496;2504;2553:3;2541:9;2532:7;2528:23;2524:33;2521:120;;;2560:79;;:::i;:::-;2521:120;2680:1;2705:86;2783:7;2774:6;2763:9;2759:22;2705:86;:::i;:::-;2695:96;;2651:150;2840:2;2866:64;2922:7;2913:6;2902:9;2898:22;2866:64;:::i;:::-;2856:74;;2811:129;2979:2;3005:79;3076:7;3067:6;3056:9;3052:22;3005:79;:::i;:::-;2995:89;;2950:144;3133:2;3159:80;3231:7;3222:6;3211:9;3207:22;3159:80;:::i;:::-;3149:90;;3104:145;2330:926;;;;;;;:::o;953:9557:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3059,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ADMIN_773": {
									"entryPoint": 2715,
									"id": 773,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_MINTER_778": {
									"entryPoint": 3071,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_RESCUE_768": {
									"entryPoint": 2918,
									"id": 768,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6537,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 4468,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_claimRewards_1134": {
									"entryPoint": 4954,
									"id": 1134,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 4488,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_650": {
									"entryPoint": 3702,
									"id": 650,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_431": {
									"entryPoint": 4459,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_423": {
									"entryPoint": 3709,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 4721,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_stake_993": {
									"entryPoint": 5502,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unstake_1065": {
									"entryPoint": 3788,
									"id": 1065,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculatePendingRewards_1208": {
									"entryPoint": 1648,
									"id": 1208,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimInterval_763": {
									"entryPoint": 1904,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimRewards_903": {
									"entryPoint": 2297,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethRescue_1381": {
									"entryPoint": 2570,
									"id": 1381,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBlock_1326": {
									"entryPoint": 2128,
									"id": 1326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLevel_1222": {
									"entryPoint": 2757,
									"id": 1222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2072,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2140,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2960,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ifacenft_753": {
									"entryPoint": 3135,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastUpdateBlock_757": {
									"entryPoint": 3065,
									"id": 757,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@moveERC20_1356": {
									"entryPoint": 2331,
									"id": 1356,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@nft_750": {
									"entryPoint": 2533,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2174,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 3312,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardBonus_793": {
									"entryPoint": 3574,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRatePerBlock_755": {
									"entryPoint": 2954,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setClaimInterval_1272": {
									"entryPoint": 3346,
									"id": 1272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNFT_1312": {
									"entryPoint": 3413,
									"id": 1312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRatePerBlock_1253": {
									"entryPoint": 3172,
									"id": 1253,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setToken_1292": {
									"entryPoint": 1916,
									"id": 1292,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_878": {
									"entryPoint": 3107,
									"id": 878,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_62": {
									"entryPoint": 1527,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_691": {
									"entryPoint": 3597,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_747": {
									"entryPoint": 3537,
									"id": 747,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewards_761": {
									"entryPoint": 1910,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_759": {
									"entryPoint": 2751,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_891": {
									"entryPoint": 2100,
									"id": 891,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_798": {
									"entryPoint": 2040,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$521": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$638": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMintableToken_$739": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$521t_addresst_uint256": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_IERC721_$638": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMintableToken_$739": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$638_to_t_address_fromStack": {
									"entryPoint": 7620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMintableToken_$739_to_t_address_fromStack": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_nftIface_$729_to_t_address_fromStack": {
									"entryPoint": 7798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9981,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMintableToken_$739__to_t_address__fromStack_reversed": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_nftIface_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7997,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$521": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$638": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMintableToken_$739": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$638_to_t_address": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMintableToken_$739_to_t_address": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_nftIface_$729_to_t_address": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db": {
									"entryPoint": 9877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b": {
									"entryPoint": 9385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5": {
									"entryPoint": 10138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9": {
									"entryPoint": 10034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7": {
									"entryPoint": 9101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$521": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$638": {
									"entryPoint": 7855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMintableToken_$739": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:29259:9",
										"nodeType": "YulBlock",
										"src": "0:29259:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "378:105:9",
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nativeSrc": "388:89:9",
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:9",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nativeSrc": "399:78:9",
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:9",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:9",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nativeSrc": "531:78:9",
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:9",
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:9",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nativeSrc": "589:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nativeSrc": "589:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nativeSrc": "561:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nativeSrc": "551:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nativeSrc": "544:42:9",
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nativeSrc": "541:62:9",
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:9",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nativeSrc": "666:86:9",
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nativeSrc": "676:29:9",
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nativeSrc": "685:20:9",
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nativeSrc": "714:32:9",
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nativeSrc": "714:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:9",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:9",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:9",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nativeSrc": "823:262:9",
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:9",
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nativeSrc": "871:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nativeSrc": "871:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nativeSrc": "840:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:9",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nativeSrc": "836:32:9",
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nativeSrc": "833:119:9",
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nativeSrc": "962:116:9",
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nativeSrc": "977:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:9",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:9",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:9",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nativeSrc": "1036:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nativeSrc": "1016:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:9",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:9",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:9",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nativeSrc": "1133:48:9",
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nativeSrc": "1143:32:9",
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nativeSrc": "1161:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nativeSrc": "1154:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:9",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:9",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nativeSrc": "1246:50:9",
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nativeSrc": "1268:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nativeSrc": "1256:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nativeSrc": "1256:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:9",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:9",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nativeSrc": "1394:118:9",
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nativeSrc": "1404:26:9",
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nativeSrc": "1412:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nativeSrc": "1487:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nativeSrc": "1440:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nativeSrc": "1440:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:9",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:9",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:9",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nativeSrc": "1563:81:9",
													"nodeType": "YulBlock",
													"src": "1563:81:9",
													"statements": [
														{
															"nativeSrc": "1573:65:9",
															"nodeType": "YulAssignment",
															"src": "1573:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:9"
																},
																"nativeSrc": "1584:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:9",
														"nodeType": "YulTypedName",
														"src": "1545:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:9",
														"nodeType": "YulTypedName",
														"src": "1555:7:9",
														"type": ""
													}
												],
												"src": "1518:126:9"
											},
											{
												"body": {
													"nativeSrc": "1695:51:9",
													"nodeType": "YulBlock",
													"src": "1695:51:9",
													"statements": [
														{
															"nativeSrc": "1705:35:9",
															"nodeType": "YulAssignment",
															"src": "1705:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:9"
																},
																"nativeSrc": "1716:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:9",
														"nodeType": "YulTypedName",
														"src": "1677:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:9",
														"nodeType": "YulTypedName",
														"src": "1687:7:9",
														"type": ""
													}
												],
												"src": "1650:96:9"
											},
											{
												"body": {
													"nativeSrc": "1795:79:9",
													"nodeType": "YulBlock",
													"src": "1795:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:9",
																"nodeType": "YulBlock",
																"src": "1852:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:9"
																			},
																			"nativeSrc": "1854:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:9"
																		},
																		"nativeSrc": "1854:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:9"
																				},
																				"nativeSrc": "1825:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:9"
																		},
																		"nativeSrc": "1815:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:9"
																},
																"nativeSrc": "1808:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:9"
															},
															"nativeSrc": "1805:63:9",
															"nodeType": "YulIf",
															"src": "1805:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:9",
														"nodeType": "YulTypedName",
														"src": "1788:5:9",
														"type": ""
													}
												],
												"src": "1752:122:9"
											},
											{
												"body": {
													"nativeSrc": "1932:87:9",
													"nodeType": "YulBlock",
													"src": "1932:87:9",
													"statements": [
														{
															"nativeSrc": "1942:29:9",
															"nodeType": "YulAssignment",
															"src": "1942:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:9"
																},
																"nativeSrc": "1951:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:9"
																},
																"nativeSrc": "1980:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:9"
															},
															"nativeSrc": "1980:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:9",
														"nodeType": "YulTypedName",
														"src": "1910:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:9",
														"nodeType": "YulTypedName",
														"src": "1918:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:9",
														"nodeType": "YulTypedName",
														"src": "1926:5:9",
														"type": ""
													}
												],
												"src": "1880:139:9"
											},
											{
												"body": {
													"nativeSrc": "2091:263:9",
													"nodeType": "YulBlock",
													"src": "2091:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:9",
																"nodeType": "YulBlock",
																"src": "2137:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:9"
																			},
																			"nativeSrc": "2139:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:9"
																		},
																		"nativeSrc": "2139:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:9"
																		},
																		"nativeSrc": "2108:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:9"
																},
																"nativeSrc": "2104:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:9"
															},
															"nativeSrc": "2101:119:9",
															"nodeType": "YulIf",
															"src": "2101:119:9"
														},
														{
															"nativeSrc": "2230:117:9",
															"nodeType": "YulBlock",
															"src": "2230:117:9",
															"statements": [
																{
																	"nativeSrc": "2245:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:9"
																				},
																				"nativeSrc": "2305:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:9"
																		},
																		"nativeSrc": "2284:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:9",
														"nodeType": "YulTypedName",
														"src": "2061:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:9",
														"nodeType": "YulTypedName",
														"src": "2072:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:9",
														"nodeType": "YulTypedName",
														"src": "2084:6:9",
														"type": ""
													}
												],
												"src": "2025:329:9"
											},
											{
												"body": {
													"nativeSrc": "2405:32:9",
													"nodeType": "YulBlock",
													"src": "2405:32:9",
													"statements": [
														{
															"nativeSrc": "2415:16:9",
															"nodeType": "YulAssignment",
															"src": "2415:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:9",
																"nodeType": "YulIdentifier",
																"src": "2426:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2360:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:9",
														"nodeType": "YulTypedName",
														"src": "2387:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:9",
														"nodeType": "YulTypedName",
														"src": "2397:7:9",
														"type": ""
													}
												],
												"src": "2360:77:9"
											},
											{
												"body": {
													"nativeSrc": "2508:53:9",
													"nodeType": "YulBlock",
													"src": "2508:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2530:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:9"
																		},
																		"nativeSrc": "2530:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:9"
																},
																"nativeSrc": "2518:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:9"
															},
															"nativeSrc": "2518:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2443:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:9",
														"nodeType": "YulTypedName",
														"src": "2496:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:9",
														"nodeType": "YulTypedName",
														"src": "2503:3:9",
														"type": ""
													}
												],
												"src": "2443:118:9"
											},
											{
												"body": {
													"nativeSrc": "2665:124:9",
													"nodeType": "YulBlock",
													"src": "2665:124:9",
													"statements": [
														{
															"nativeSrc": "2675:26:9",
															"nodeType": "YulAssignment",
															"src": "2675:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:9"
																},
																"nativeSrc": "2683:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:9"
																		},
																		"nativeSrc": "2764:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2711:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:9"
																},
																"nativeSrc": "2711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:9"
															},
															"nativeSrc": "2711:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2567:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:9",
														"nodeType": "YulTypedName",
														"src": "2637:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:9",
														"nodeType": "YulTypedName",
														"src": "2649:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:9",
														"nodeType": "YulTypedName",
														"src": "2660:4:9",
														"type": ""
													}
												],
												"src": "2567:222:9"
											},
											{
												"body": {
													"nativeSrc": "2862:51:9",
													"nodeType": "YulBlock",
													"src": "2862:51:9",
													"statements": [
														{
															"nativeSrc": "2872:35:9",
															"nodeType": "YulAssignment",
															"src": "2872:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2901:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2901:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "2883:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2883:17:9"
																},
																"nativeSrc": "2883:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2883:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2872:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2872:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMintableToken_$739",
												"nativeSrc": "2795:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2844:5:9",
														"nodeType": "YulTypedName",
														"src": "2844:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2854:7:9",
														"nodeType": "YulTypedName",
														"src": "2854:7:9",
														"type": ""
													}
												],
												"src": "2795:118:9"
											},
											{
												"body": {
													"nativeSrc": "2984:101:9",
													"nodeType": "YulBlock",
													"src": "2984:101:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3063:16:9",
																"nodeType": "YulBlock",
																"src": "3063:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3072:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3072:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3075:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3075:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3065:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3065:6:9"
																			},
																			"nativeSrc": "3065:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3065:12:9"
																		},
																		"nativeSrc": "3065:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3065:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3007:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3007:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3054:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3054:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMintableToken_$739",
																					"nativeSrc": "3014:39:9",
																					"nodeType": "YulIdentifier",
																					"src": "3014:39:9"
																				},
																				"nativeSrc": "3014:46:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3014:46:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3004:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3004:2:9"
																		},
																		"nativeSrc": "3004:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:57:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:9"
																},
																"nativeSrc": "2997:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2997:65:9"
															},
															"nativeSrc": "2994:85:9",
															"nodeType": "YulIf",
															"src": "2994:85:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMintableToken_$739",
												"nativeSrc": "2919:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2977:5:9",
														"nodeType": "YulTypedName",
														"src": "2977:5:9",
														"type": ""
													}
												],
												"src": "2919:166:9"
											},
											{
												"body": {
													"nativeSrc": "3165:109:9",
													"nodeType": "YulBlock",
													"src": "3165:109:9",
													"statements": [
														{
															"nativeSrc": "3175:29:9",
															"nodeType": "YulAssignment",
															"src": "3175:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3197:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3197:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3184:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3184:12:9"
																},
																"nativeSrc": "3184:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3184:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3175:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3175:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3262:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3262:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMintableToken_$739",
																	"nativeSrc": "3213:48:9",
																	"nodeType": "YulIdentifier",
																	"src": "3213:48:9"
																},
																"nativeSrc": "3213:55:9",
																"nodeType": "YulFunctionCall",
																"src": "3213:55:9"
															},
															"nativeSrc": "3213:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "3213:55:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMintableToken_$739",
												"nativeSrc": "3091:183:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3143:6:9",
														"nodeType": "YulTypedName",
														"src": "3143:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3151:3:9",
														"nodeType": "YulTypedName",
														"src": "3151:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3159:5:9",
														"nodeType": "YulTypedName",
														"src": "3159:5:9",
														"type": ""
													}
												],
												"src": "3091:183:9"
											},
											{
												"body": {
													"nativeSrc": "3368:285:9",
													"nodeType": "YulBlock",
													"src": "3368:285:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3414:83:9",
																"nodeType": "YulBlock",
																"src": "3414:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3416:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3416:77:9"
																			},
																			"nativeSrc": "3416:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3416:79:9"
																		},
																		"nativeSrc": "3416:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3416:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3398:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3385:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:9"
																		},
																		"nativeSrc": "3385:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3385:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3410:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3410:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3381:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:9"
																},
																"nativeSrc": "3381:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3381:32:9"
															},
															"nativeSrc": "3378:119:9",
															"nodeType": "YulIf",
															"src": "3378:119:9"
														},
														{
															"nativeSrc": "3507:139:9",
															"nodeType": "YulBlock",
															"src": "3507:139:9",
															"statements": [
																{
																	"nativeSrc": "3522:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3522:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3536:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3536:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3526:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3526:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3551:85:9",
																	"nodeType": "YulAssignment",
																	"src": "3551:85:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3608:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3608:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3619:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3619:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3604:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3604:3:9"
																				},
																				"nativeSrc": "3604:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3604:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3628:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3628:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMintableToken_$739",
																			"nativeSrc": "3561:42:9",
																			"nodeType": "YulIdentifier",
																			"src": "3561:42:9"
																		},
																		"nativeSrc": "3561:75:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3561:75:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3551:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3551:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMintableToken_$739",
												"nativeSrc": "3280:373:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3338:9:9",
														"nodeType": "YulTypedName",
														"src": "3338:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3349:7:9",
														"nodeType": "YulTypedName",
														"src": "3349:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3361:6:9",
														"nodeType": "YulTypedName",
														"src": "3361:6:9",
														"type": ""
													}
												],
												"src": "3280:373:9"
											},
											{
												"body": {
													"nativeSrc": "3785:206:9",
													"nodeType": "YulBlock",
													"src": "3785:206:9",
													"statements": [
														{
															"nativeSrc": "3795:26:9",
															"nodeType": "YulAssignment",
															"src": "3795:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3807:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3807:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3818:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3818:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3803:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3803:3:9"
																},
																"nativeSrc": "3803:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3803:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3795:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3795:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3875:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3875:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3888:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3899:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3899:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:9"
																		},
																		"nativeSrc": "3884:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3884:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3831:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3831:43:9"
																},
																"nativeSrc": "3831:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3831:71:9"
															},
															"nativeSrc": "3831:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3831:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3956:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3956:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3969:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3980:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3980:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:9"
																		},
																		"nativeSrc": "3965:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3965:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3912:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3912:43:9"
																},
																"nativeSrc": "3912:72:9",
																"nodeType": "YulFunctionCall",
																"src": "3912:72:9"
															},
															"nativeSrc": "3912:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "3912:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3659:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3749:9:9",
														"nodeType": "YulTypedName",
														"src": "3749:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3761:6:9",
														"nodeType": "YulTypedName",
														"src": "3761:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3769:6:9",
														"nodeType": "YulTypedName",
														"src": "3769:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3780:4:9",
														"nodeType": "YulTypedName",
														"src": "3780:4:9",
														"type": ""
													}
												],
												"src": "3659:332:9"
											},
											{
												"body": {
													"nativeSrc": "4042:32:9",
													"nodeType": "YulBlock",
													"src": "4042:32:9",
													"statements": [
														{
															"nativeSrc": "4052:16:9",
															"nodeType": "YulAssignment",
															"src": "4052:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "4063:5:9",
																"nodeType": "YulIdentifier",
																"src": "4063:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4052:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4052:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3997:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4024:5:9",
														"nodeType": "YulTypedName",
														"src": "4024:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4034:7:9",
														"nodeType": "YulTypedName",
														"src": "4034:7:9",
														"type": ""
													}
												],
												"src": "3997:77:9"
											},
											{
												"body": {
													"nativeSrc": "4123:79:9",
													"nodeType": "YulBlock",
													"src": "4123:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4180:16:9",
																"nodeType": "YulBlock",
																"src": "4180:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4189:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4189:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4192:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4192:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4182:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4182:6:9"
																			},
																			"nativeSrc": "4182:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4182:12:9"
																		},
																		"nativeSrc": "4182:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4182:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4146:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4146:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4171:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4171:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "4153:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4153:17:9"
																				},
																				"nativeSrc": "4153:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4153:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4143:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4143:2:9"
																		},
																		"nativeSrc": "4143:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4136:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:9"
																},
																"nativeSrc": "4136:43:9",
																"nodeType": "YulFunctionCall",
																"src": "4136:43:9"
															},
															"nativeSrc": "4133:63:9",
															"nodeType": "YulIf",
															"src": "4133:63:9"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "4080:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4116:5:9",
														"nodeType": "YulTypedName",
														"src": "4116:5:9",
														"type": ""
													}
												],
												"src": "4080:122:9"
											},
											{
												"body": {
													"nativeSrc": "4260:87:9",
													"nodeType": "YulBlock",
													"src": "4260:87:9",
													"statements": [
														{
															"nativeSrc": "4270:29:9",
															"nodeType": "YulAssignment",
															"src": "4270:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4292:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4292:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4279:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4279:12:9"
																},
																"nativeSrc": "4279:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4279:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4270:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4270:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4335:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4335:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "4308:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:26:9"
																},
																"nativeSrc": "4308:33:9",
																"nodeType": "YulFunctionCall",
																"src": "4308:33:9"
															},
															"nativeSrc": "4308:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "4308:33:9"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "4208:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4238:6:9",
														"nodeType": "YulTypedName",
														"src": "4238:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4246:3:9",
														"nodeType": "YulTypedName",
														"src": "4246:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4254:5:9",
														"nodeType": "YulTypedName",
														"src": "4254:5:9",
														"type": ""
													}
												],
												"src": "4208:139:9"
											},
											{
												"body": {
													"nativeSrc": "4419:263:9",
													"nodeType": "YulBlock",
													"src": "4419:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4465:83:9",
																"nodeType": "YulBlock",
																"src": "4465:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4467:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4467:77:9"
																			},
																			"nativeSrc": "4467:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4467:79:9"
																		},
																		"nativeSrc": "4467:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4467:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4440:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4449:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4449:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4436:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4436:3:9"
																		},
																		"nativeSrc": "4436:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4436:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4461:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:9"
																},
																"nativeSrc": "4432:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4432:32:9"
															},
															"nativeSrc": "4429:119:9",
															"nodeType": "YulIf",
															"src": "4429:119:9"
														},
														{
															"nativeSrc": "4558:117:9",
															"nodeType": "YulBlock",
															"src": "4558:117:9",
															"statements": [
																{
																	"nativeSrc": "4573:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4573:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4587:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4587:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4577:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4577:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4602:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4602:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4637:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4637:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4648:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4648:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4633:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4633:3:9"
																				},
																				"nativeSrc": "4633:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4633:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4657:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4657:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4612:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4612:20:9"
																		},
																		"nativeSrc": "4612:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4612:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4602:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4602:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "4353:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4389:9:9",
														"nodeType": "YulTypedName",
														"src": "4389:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4400:7:9",
														"nodeType": "YulTypedName",
														"src": "4400:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4412:6:9",
														"nodeType": "YulTypedName",
														"src": "4412:6:9",
														"type": ""
													}
												],
												"src": "4353:329:9"
											},
											{
												"body": {
													"nativeSrc": "4753:53:9",
													"nodeType": "YulBlock",
													"src": "4753:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4793:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4793:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4775:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4775:17:9"
																		},
																		"nativeSrc": "4775:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4775:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4763:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:9"
																},
																"nativeSrc": "4763:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4763:37:9"
															},
															"nativeSrc": "4763:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4763:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4688:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4741:5:9",
														"nodeType": "YulTypedName",
														"src": "4741:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4748:3:9",
														"nodeType": "YulTypedName",
														"src": "4748:3:9",
														"type": ""
													}
												],
												"src": "4688:118:9"
											},
											{
												"body": {
													"nativeSrc": "4910:124:9",
													"nodeType": "YulBlock",
													"src": "4910:124:9",
													"statements": [
														{
															"nativeSrc": "4920:26:9",
															"nodeType": "YulAssignment",
															"src": "4920:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4932:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4932:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4943:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4943:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4928:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4928:3:9"
																},
																"nativeSrc": "4928:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4928:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4920:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4920:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5000:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5000:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5013:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5024:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5024:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:9"
																		},
																		"nativeSrc": "5009:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4956:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4956:43:9"
																},
																"nativeSrc": "4956:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4956:71:9"
															},
															"nativeSrc": "4956:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4956:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4812:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4882:9:9",
														"nodeType": "YulTypedName",
														"src": "4882:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4894:6:9",
														"nodeType": "YulTypedName",
														"src": "4894:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4905:4:9",
														"nodeType": "YulTypedName",
														"src": "4905:4:9",
														"type": ""
													}
												],
												"src": "4812:222:9"
											},
											{
												"body": {
													"nativeSrc": "5083:79:9",
													"nodeType": "YulBlock",
													"src": "5083:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5140:16:9",
																"nodeType": "YulBlock",
																"src": "5140:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5149:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5149:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5152:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5152:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5142:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5142:6:9"
																			},
																			"nativeSrc": "5142:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5142:12:9"
																		},
																		"nativeSrc": "5142:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5142:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5106:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5106:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5131:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5131:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5113:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5113:17:9"
																				},
																				"nativeSrc": "5113:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5113:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5103:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5103:2:9"
																		},
																		"nativeSrc": "5103:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5103:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5096:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5096:6:9"
																},
																"nativeSrc": "5096:43:9",
																"nodeType": "YulFunctionCall",
																"src": "5096:43:9"
															},
															"nativeSrc": "5093:63:9",
															"nodeType": "YulIf",
															"src": "5093:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5040:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5076:5:9",
														"nodeType": "YulTypedName",
														"src": "5076:5:9",
														"type": ""
													}
												],
												"src": "5040:122:9"
											},
											{
												"body": {
													"nativeSrc": "5220:87:9",
													"nodeType": "YulBlock",
													"src": "5220:87:9",
													"statements": [
														{
															"nativeSrc": "5230:29:9",
															"nodeType": "YulAssignment",
															"src": "5230:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5252:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5252:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5239:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "5239:12:9"
																},
																"nativeSrc": "5239:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5239:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5230:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5230:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5295:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5295:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5268:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "5268:26:9"
																},
																"nativeSrc": "5268:33:9",
																"nodeType": "YulFunctionCall",
																"src": "5268:33:9"
															},
															"nativeSrc": "5268:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "5268:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5168:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5198:6:9",
														"nodeType": "YulTypedName",
														"src": "5198:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5206:3:9",
														"nodeType": "YulTypedName",
														"src": "5206:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5214:5:9",
														"nodeType": "YulTypedName",
														"src": "5214:5:9",
														"type": ""
													}
												],
												"src": "5168:139:9"
											},
											{
												"body": {
													"nativeSrc": "5379:263:9",
													"nodeType": "YulBlock",
													"src": "5379:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5425:83:9",
																"nodeType": "YulBlock",
																"src": "5425:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5427:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5427:77:9"
																			},
																			"nativeSrc": "5427:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5427:79:9"
																		},
																		"nativeSrc": "5427:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5427:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5400:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5400:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5409:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5409:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5396:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5396:3:9"
																		},
																		"nativeSrc": "5396:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5396:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5421:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5421:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5392:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5392:3:9"
																},
																"nativeSrc": "5392:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5392:32:9"
															},
															"nativeSrc": "5389:119:9",
															"nodeType": "YulIf",
															"src": "5389:119:9"
														},
														{
															"nativeSrc": "5518:117:9",
															"nodeType": "YulBlock",
															"src": "5518:117:9",
															"statements": [
																{
																	"nativeSrc": "5533:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5533:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5547:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5537:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5537:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5562:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5562:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5597:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5597:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5608:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5608:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5593:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5593:3:9"
																				},
																				"nativeSrc": "5593:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5593:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5617:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5572:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5572:20:9"
																		},
																		"nativeSrc": "5572:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5562:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5562:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5313:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5349:9:9",
														"nodeType": "YulTypedName",
														"src": "5349:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5360:7:9",
														"nodeType": "YulTypedName",
														"src": "5360:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5372:6:9",
														"nodeType": "YulTypedName",
														"src": "5372:6:9",
														"type": ""
													}
												],
												"src": "5313:329:9"
											},
											{
												"body": {
													"nativeSrc": "5731:391:9",
													"nodeType": "YulBlock",
													"src": "5731:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5777:83:9",
																"nodeType": "YulBlock",
																"src": "5777:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5779:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5779:77:9"
																			},
																			"nativeSrc": "5779:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5779:79:9"
																		},
																		"nativeSrc": "5779:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5779:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5752:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5752:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5761:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5761:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5748:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5748:3:9"
																		},
																		"nativeSrc": "5748:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5773:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5773:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5744:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:9"
																},
																"nativeSrc": "5744:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5744:32:9"
															},
															"nativeSrc": "5741:119:9",
															"nodeType": "YulIf",
															"src": "5741:119:9"
														},
														{
															"nativeSrc": "5870:117:9",
															"nodeType": "YulBlock",
															"src": "5870:117:9",
															"statements": [
																{
																	"nativeSrc": "5885:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5885:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5899:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5899:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5889:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5889:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5914:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5914:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5949:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5949:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5960:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5960:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5945:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5945:3:9"
																				},
																				"nativeSrc": "5945:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5945:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5969:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5969:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5924:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5924:20:9"
																		},
																		"nativeSrc": "5924:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5924:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5914:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5914:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5997:118:9",
															"nodeType": "YulBlock",
															"src": "5997:118:9",
															"statements": [
																{
																	"nativeSrc": "6012:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6012:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6026:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6026:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6016:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6016:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6042:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6042:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6077:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6077:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6088:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6088:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6073:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6073:3:9"
																				},
																				"nativeSrc": "6073:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6073:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6097:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6097:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6052:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6052:20:9"
																		},
																		"nativeSrc": "6052:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6052:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6042:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6042:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "5648:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5693:9:9",
														"nodeType": "YulTypedName",
														"src": "5693:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5704:7:9",
														"nodeType": "YulTypedName",
														"src": "5704:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5716:6:9",
														"nodeType": "YulTypedName",
														"src": "5716:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5724:6:9",
														"nodeType": "YulTypedName",
														"src": "5724:6:9",
														"type": ""
													}
												],
												"src": "5648:474:9"
											},
											{
												"body": {
													"nativeSrc": "6187:51:9",
													"nodeType": "YulBlock",
													"src": "6187:51:9",
													"statements": [
														{
															"nativeSrc": "6197:35:9",
															"nodeType": "YulAssignment",
															"src": "6197:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6226:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6226:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6208:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6208:17:9"
																},
																"nativeSrc": "6208:24:9",
																"nodeType": "YulFunctionCall",
																"src": "6208:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6197:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6197:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$521",
												"nativeSrc": "6128:110:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6169:5:9",
														"nodeType": "YulTypedName",
														"src": "6169:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6179:7:9",
														"nodeType": "YulTypedName",
														"src": "6179:7:9",
														"type": ""
													}
												],
												"src": "6128:110:9"
											},
											{
												"body": {
													"nativeSrc": "6301:93:9",
													"nodeType": "YulBlock",
													"src": "6301:93:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6372:16:9",
																"nodeType": "YulBlock",
																"src": "6372:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6381:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6381:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6384:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6384:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6374:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6374:6:9"
																			},
																			"nativeSrc": "6374:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6374:12:9"
																		},
																		"nativeSrc": "6374:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6374:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6324:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6324:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6363:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6363:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$521",
																					"nativeSrc": "6331:31:9",
																					"nodeType": "YulIdentifier",
																					"src": "6331:31:9"
																				},
																				"nativeSrc": "6331:38:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6331:38:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6321:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6321:2:9"
																		},
																		"nativeSrc": "6321:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:49:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6314:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:9"
																},
																"nativeSrc": "6314:57:9",
																"nodeType": "YulFunctionCall",
																"src": "6314:57:9"
															},
															"nativeSrc": "6311:77:9",
															"nodeType": "YulIf",
															"src": "6311:77:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$521",
												"nativeSrc": "6244:150:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6294:5:9",
														"nodeType": "YulTypedName",
														"src": "6294:5:9",
														"type": ""
													}
												],
												"src": "6244:150:9"
											},
											{
												"body": {
													"nativeSrc": "6466:101:9",
													"nodeType": "YulBlock",
													"src": "6466:101:9",
													"statements": [
														{
															"nativeSrc": "6476:29:9",
															"nodeType": "YulAssignment",
															"src": "6476:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6498:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6498:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6485:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6485:12:9"
																},
																"nativeSrc": "6485:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6485:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6476:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6476:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6555:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6555:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$521",
																	"nativeSrc": "6514:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "6514:40:9"
																},
																"nativeSrc": "6514:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6514:47:9"
															},
															"nativeSrc": "6514:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6514:47:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$521",
												"nativeSrc": "6400:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6444:6:9",
														"nodeType": "YulTypedName",
														"src": "6444:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6452:3:9",
														"nodeType": "YulTypedName",
														"src": "6452:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6460:5:9",
														"nodeType": "YulTypedName",
														"src": "6460:5:9",
														"type": ""
													}
												],
												"src": "6400:167:9"
											},
											{
												"body": {
													"nativeSrc": "6687:533:9",
													"nodeType": "YulBlock",
													"src": "6687:533:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6733:83:9",
																"nodeType": "YulBlock",
																"src": "6733:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6735:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6735:77:9"
																			},
																			"nativeSrc": "6735:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6735:79:9"
																		},
																		"nativeSrc": "6735:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6735:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6708:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6708:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6717:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6717:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6704:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6704:3:9"
																		},
																		"nativeSrc": "6704:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6704:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6729:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6729:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6700:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6700:3:9"
																},
																"nativeSrc": "6700:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6700:32:9"
															},
															"nativeSrc": "6697:119:9",
															"nodeType": "YulIf",
															"src": "6697:119:9"
														},
														{
															"nativeSrc": "6826:131:9",
															"nodeType": "YulBlock",
															"src": "6826:131:9",
															"statements": [
																{
																	"nativeSrc": "6841:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6841:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6855:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6855:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6845:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6845:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6870:77:9",
																	"nodeType": "YulAssignment",
																	"src": "6870:77:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6919:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6919:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6930:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6930:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6915:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6915:3:9"
																				},
																				"nativeSrc": "6915:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6915:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6939:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6939:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$521",
																			"nativeSrc": "6880:34:9",
																			"nodeType": "YulIdentifier",
																			"src": "6880:34:9"
																		},
																		"nativeSrc": "6880:67:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6880:67:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6870:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6870:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6967:118:9",
															"nodeType": "YulBlock",
															"src": "6967:118:9",
															"statements": [
																{
																	"nativeSrc": "6982:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6982:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6996:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6996:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6986:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6986:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7012:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7012:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7047:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7047:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7058:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7058:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7043:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7043:3:9"
																				},
																				"nativeSrc": "7043:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7043:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7067:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7067:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7022:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7022:20:9"
																		},
																		"nativeSrc": "7022:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7022:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7012:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7012:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7095:118:9",
															"nodeType": "YulBlock",
															"src": "7095:118:9",
															"statements": [
																{
																	"nativeSrc": "7110:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7110:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7124:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7114:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7114:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7140:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7140:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7175:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7175:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7186:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7186:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7171:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7171:3:9"
																				},
																				"nativeSrc": "7171:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7171:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7195:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7195:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7150:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7150:20:9"
																		},
																		"nativeSrc": "7150:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7140:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7140:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$521t_addresst_uint256",
												"nativeSrc": "6573:647:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6641:9:9",
														"nodeType": "YulTypedName",
														"src": "6641:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6652:7:9",
														"nodeType": "YulTypedName",
														"src": "6652:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6664:6:9",
														"nodeType": "YulTypedName",
														"src": "6664:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6672:6:9",
														"nodeType": "YulTypedName",
														"src": "6672:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6680:6:9",
														"nodeType": "YulTypedName",
														"src": "6680:6:9",
														"type": ""
													}
												],
												"src": "6573:647:9"
											},
											{
												"body": {
													"nativeSrc": "7258:28:9",
													"nodeType": "YulBlock",
													"src": "7258:28:9",
													"statements": [
														{
															"nativeSrc": "7268:12:9",
															"nodeType": "YulAssignment",
															"src": "7268:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "7275:5:9",
																"nodeType": "YulIdentifier",
																"src": "7275:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7268:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7226:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7244:5:9",
														"nodeType": "YulTypedName",
														"src": "7244:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7254:3:9",
														"nodeType": "YulTypedName",
														"src": "7254:3:9",
														"type": ""
													}
												],
												"src": "7226:60:9"
											},
											{
												"body": {
													"nativeSrc": "7352:82:9",
													"nodeType": "YulBlock",
													"src": "7352:82:9",
													"statements": [
														{
															"nativeSrc": "7362:66:9",
															"nodeType": "YulAssignment",
															"src": "7362:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7420:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7420:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7402:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "7402:17:9"
																				},
																				"nativeSrc": "7402:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7402:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7393:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "7393:8:9"
																		},
																		"nativeSrc": "7393:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7393:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7375:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7375:17:9"
																},
																"nativeSrc": "7375:53:9",
																"nodeType": "YulFunctionCall",
																"src": "7375:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7362:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7362:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7292:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7332:5:9",
														"nodeType": "YulTypedName",
														"src": "7332:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7342:9:9",
														"nodeType": "YulTypedName",
														"src": "7342:9:9",
														"type": ""
													}
												],
												"src": "7292:142:9"
											},
											{
												"body": {
													"nativeSrc": "7500:66:9",
													"nodeType": "YulBlock",
													"src": "7500:66:9",
													"statements": [
														{
															"nativeSrc": "7510:50:9",
															"nodeType": "YulAssignment",
															"src": "7510:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7554:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7554:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7523:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "7523:30:9"
																},
																"nativeSrc": "7523:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7523:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7510:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7510:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7440:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7480:5:9",
														"nodeType": "YulTypedName",
														"src": "7480:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7490:9:9",
														"nodeType": "YulTypedName",
														"src": "7490:9:9",
														"type": ""
													}
												],
												"src": "7440:126:9"
											},
											{
												"body": {
													"nativeSrc": "7647:66:9",
													"nodeType": "YulBlock",
													"src": "7647:66:9",
													"statements": [
														{
															"nativeSrc": "7657:50:9",
															"nodeType": "YulAssignment",
															"src": "7657:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7701:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7701:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7670:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "7670:30:9"
																},
																"nativeSrc": "7670:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7670:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7657:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7657:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$638_to_t_address",
												"nativeSrc": "7572:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7627:5:9",
														"nodeType": "YulTypedName",
														"src": "7627:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7637:9:9",
														"nodeType": "YulTypedName",
														"src": "7637:9:9",
														"type": ""
													}
												],
												"src": "7572:141:9"
											},
											{
												"body": {
													"nativeSrc": "7799:81:9",
													"nodeType": "YulBlock",
													"src": "7799:81:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7816:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7816:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7867:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7867:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$638_to_t_address",
																			"nativeSrc": "7821:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "7821:45:9"
																		},
																		"nativeSrc": "7821:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7821:52:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7809:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7809:6:9"
																},
																"nativeSrc": "7809:65:9",
																"nodeType": "YulFunctionCall",
																"src": "7809:65:9"
															},
															"nativeSrc": "7809:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "7809:65:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$638_to_t_address_fromStack",
												"nativeSrc": "7719:161:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7787:5:9",
														"nodeType": "YulTypedName",
														"src": "7787:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7794:3:9",
														"nodeType": "YulTypedName",
														"src": "7794:3:9",
														"type": ""
													}
												],
												"src": "7719:161:9"
											},
											{
												"body": {
													"nativeSrc": "7999:139:9",
													"nodeType": "YulBlock",
													"src": "7999:139:9",
													"statements": [
														{
															"nativeSrc": "8009:26:9",
															"nodeType": "YulAssignment",
															"src": "8009:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8021:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8021:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8032:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8032:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8017:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8017:3:9"
																},
																"nativeSrc": "8017:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8017:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8009:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8009:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8104:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8117:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8117:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8128:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8128:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:9"
																		},
																		"nativeSrc": "8113:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$638_to_t_address_fromStack",
																	"nativeSrc": "8045:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8045:58:9"
																},
																"nativeSrc": "8045:86:9",
																"nodeType": "YulFunctionCall",
																"src": "8045:86:9"
															},
															"nativeSrc": "8045:86:9",
															"nodeType": "YulExpressionStatement",
															"src": "8045:86:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed",
												"nativeSrc": "7886:252:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7971:9:9",
														"nodeType": "YulTypedName",
														"src": "7971:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7983:6:9",
														"nodeType": "YulTypedName",
														"src": "7983:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7994:4:9",
														"nodeType": "YulTypedName",
														"src": "7994:4:9",
														"type": ""
													}
												],
												"src": "7886:252:9"
											},
											{
												"body": {
													"nativeSrc": "8197:51:9",
													"nodeType": "YulBlock",
													"src": "8197:51:9",
													"statements": [
														{
															"nativeSrc": "8207:35:9",
															"nodeType": "YulAssignment",
															"src": "8207:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8236:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8236:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8218:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8218:17:9"
																},
																"nativeSrc": "8218:24:9",
																"nodeType": "YulFunctionCall",
																"src": "8218:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8207:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8207:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "8144:104:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8179:5:9",
														"nodeType": "YulTypedName",
														"src": "8179:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8189:7:9",
														"nodeType": "YulTypedName",
														"src": "8189:7:9",
														"type": ""
													}
												],
												"src": "8144:104:9"
											},
											{
												"body": {
													"nativeSrc": "8305:87:9",
													"nodeType": "YulBlock",
													"src": "8305:87:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8370:16:9",
																"nodeType": "YulBlock",
																"src": "8370:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8379:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8379:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8382:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8382:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8372:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8372:6:9"
																			},
																			"nativeSrc": "8372:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8372:12:9"
																		},
																		"nativeSrc": "8372:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8328:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8328:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "8335:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "8335:25:9"
																				},
																				"nativeSrc": "8335:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8335:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8325:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8325:2:9"
																		},
																		"nativeSrc": "8325:43:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8325:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8318:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8318:6:9"
																},
																"nativeSrc": "8318:51:9",
																"nodeType": "YulFunctionCall",
																"src": "8318:51:9"
															},
															"nativeSrc": "8315:71:9",
															"nodeType": "YulIf",
															"src": "8315:71:9"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "8254:138:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8298:5:9",
														"nodeType": "YulTypedName",
														"src": "8298:5:9",
														"type": ""
													}
												],
												"src": "8254:138:9"
											},
											{
												"body": {
													"nativeSrc": "8458:95:9",
													"nodeType": "YulBlock",
													"src": "8458:95:9",
													"statements": [
														{
															"nativeSrc": "8468:29:9",
															"nodeType": "YulAssignment",
															"src": "8468:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8490:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8490:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8477:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8477:12:9"
																},
																"nativeSrc": "8477:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8477:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8468:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8468:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8541:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8541:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "8506:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "8506:34:9"
																},
																"nativeSrc": "8506:41:9",
																"nodeType": "YulFunctionCall",
																"src": "8506:41:9"
															},
															"nativeSrc": "8506:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "8506:41:9"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "8398:155:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8436:6:9",
														"nodeType": "YulTypedName",
														"src": "8436:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8444:3:9",
														"nodeType": "YulTypedName",
														"src": "8444:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8452:5:9",
														"nodeType": "YulTypedName",
														"src": "8452:5:9",
														"type": ""
													}
												],
												"src": "8398:155:9"
											},
											{
												"body": {
													"nativeSrc": "8650:399:9",
													"nodeType": "YulBlock",
													"src": "8650:399:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8696:83:9",
																"nodeType": "YulBlock",
																"src": "8696:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8698:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8698:77:9"
																			},
																			"nativeSrc": "8698:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8698:79:9"
																		},
																		"nativeSrc": "8698:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8698:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8671:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8671:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8680:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8680:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8667:3:9"
																		},
																		"nativeSrc": "8667:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8667:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8692:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8663:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:9"
																},
																"nativeSrc": "8663:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8663:32:9"
															},
															"nativeSrc": "8660:119:9",
															"nodeType": "YulIf",
															"src": "8660:119:9"
														},
														{
															"nativeSrc": "8789:125:9",
															"nodeType": "YulBlock",
															"src": "8789:125:9",
															"statements": [
																{
																	"nativeSrc": "8804:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8804:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8818:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8818:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8808:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8808:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8833:71:9",
																	"nodeType": "YulAssignment",
																	"src": "8833:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8876:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8876:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8887:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8887:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8872:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8872:3:9"
																				},
																				"nativeSrc": "8872:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8872:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8896:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8896:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "8843:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "8843:28:9"
																		},
																		"nativeSrc": "8843:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8843:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8833:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8833:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8924:118:9",
															"nodeType": "YulBlock",
															"src": "8924:118:9",
															"statements": [
																{
																	"nativeSrc": "8939:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8939:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8953:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8953:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8943:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8943:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8969:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8969:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9004:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9004:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9015:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9015:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9000:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9000:3:9"
																				},
																				"nativeSrc": "9000:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9000:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9024:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9024:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8979:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8979:20:9"
																		},
																		"nativeSrc": "8979:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8979:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8969:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8969:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "8559:490:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8612:9:9",
														"nodeType": "YulTypedName",
														"src": "8612:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8623:7:9",
														"nodeType": "YulTypedName",
														"src": "8623:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8635:6:9",
														"nodeType": "YulTypedName",
														"src": "8635:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8643:6:9",
														"nodeType": "YulTypedName",
														"src": "8643:6:9",
														"type": ""
													}
												],
												"src": "8559:490:9"
											},
											{
												"body": {
													"nativeSrc": "9131:66:9",
													"nodeType": "YulBlock",
													"src": "9131:66:9",
													"statements": [
														{
															"nativeSrc": "9141:50:9",
															"nodeType": "YulAssignment",
															"src": "9141:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9185:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9185:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9154:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "9154:30:9"
																},
																"nativeSrc": "9154:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9154:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9141:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "9141:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_nftIface_$729_to_t_address",
												"nativeSrc": "9055:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9111:5:9",
														"nodeType": "YulTypedName",
														"src": "9111:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9121:9:9",
														"nodeType": "YulTypedName",
														"src": "9121:9:9",
														"type": ""
													}
												],
												"src": "9055:142:9"
											},
											{
												"body": {
													"nativeSrc": "9284:82:9",
													"nodeType": "YulBlock",
													"src": "9284:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9301:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9301:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9353:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9353:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_nftIface_$729_to_t_address",
																			"nativeSrc": "9306:46:9",
																			"nodeType": "YulIdentifier",
																			"src": "9306:46:9"
																		},
																		"nativeSrc": "9306:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9306:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9294:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9294:6:9"
																},
																"nativeSrc": "9294:66:9",
																"nodeType": "YulFunctionCall",
																"src": "9294:66:9"
															},
															"nativeSrc": "9294:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "9294:66:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_nftIface_$729_to_t_address_fromStack",
												"nativeSrc": "9203:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9272:5:9",
														"nodeType": "YulTypedName",
														"src": "9272:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9279:3:9",
														"nodeType": "YulTypedName",
														"src": "9279:3:9",
														"type": ""
													}
												],
												"src": "9203:163:9"
											},
											{
												"body": {
													"nativeSrc": "9486:140:9",
													"nodeType": "YulBlock",
													"src": "9486:140:9",
													"statements": [
														{
															"nativeSrc": "9496:26:9",
															"nodeType": "YulAssignment",
															"src": "9496:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9508:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9508:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9519:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9519:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9504:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9504:3:9"
																},
																"nativeSrc": "9504:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9504:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9496:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9496:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9592:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9592:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9605:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9616:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9601:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:9"
																		},
																		"nativeSrc": "9601:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_nftIface_$729_to_t_address_fromStack",
																	"nativeSrc": "9532:59:9",
																	"nodeType": "YulIdentifier",
																	"src": "9532:59:9"
																},
																"nativeSrc": "9532:87:9",
																"nodeType": "YulFunctionCall",
																"src": "9532:87:9"
															},
															"nativeSrc": "9532:87:9",
															"nodeType": "YulExpressionStatement",
															"src": "9532:87:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_nftIface_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "9372:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9458:9:9",
														"nodeType": "YulTypedName",
														"src": "9458:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9470:6:9",
														"nodeType": "YulTypedName",
														"src": "9470:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9481:4:9",
														"nodeType": "YulTypedName",
														"src": "9481:4:9",
														"type": ""
													}
												],
												"src": "9372:254:9"
											},
											{
												"body": {
													"nativeSrc": "9692:51:9",
													"nodeType": "YulBlock",
													"src": "9692:51:9",
													"statements": [
														{
															"nativeSrc": "9702:35:9",
															"nodeType": "YulAssignment",
															"src": "9702:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9731:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9731:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "9713:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9713:17:9"
																},
																"nativeSrc": "9713:24:9",
																"nodeType": "YulFunctionCall",
																"src": "9713:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9702:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9702:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$638",
												"nativeSrc": "9632:111:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9674:5:9",
														"nodeType": "YulTypedName",
														"src": "9674:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9684:7:9",
														"nodeType": "YulTypedName",
														"src": "9684:7:9",
														"type": ""
													}
												],
												"src": "9632:111:9"
											},
											{
												"body": {
													"nativeSrc": "9807:94:9",
													"nodeType": "YulBlock",
													"src": "9807:94:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9879:16:9",
																"nodeType": "YulBlock",
																"src": "9879:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9888:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9888:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9891:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9891:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9881:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9881:6:9"
																			},
																			"nativeSrc": "9881:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9881:12:9"
																		},
																		"nativeSrc": "9881:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9881:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9830:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9870:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9870:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$638",
																					"nativeSrc": "9837:32:9",
																					"nodeType": "YulIdentifier",
																					"src": "9837:32:9"
																				},
																				"nativeSrc": "9837:39:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9837:39:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9827:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9827:2:9"
																		},
																		"nativeSrc": "9827:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9827:50:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9820:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9820:6:9"
																},
																"nativeSrc": "9820:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9820:58:9"
															},
															"nativeSrc": "9817:78:9",
															"nodeType": "YulIf",
															"src": "9817:78:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$638",
												"nativeSrc": "9749:152:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9800:5:9",
														"nodeType": "YulTypedName",
														"src": "9800:5:9",
														"type": ""
													}
												],
												"src": "9749:152:9"
											},
											{
												"body": {
													"nativeSrc": "9974:102:9",
													"nodeType": "YulBlock",
													"src": "9974:102:9",
													"statements": [
														{
															"nativeSrc": "9984:29:9",
															"nodeType": "YulAssignment",
															"src": "9984:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10006:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10006:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9993:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "9993:12:9"
																},
																"nativeSrc": "9993:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9993:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9984:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9984:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10064:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10064:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$638",
																	"nativeSrc": "10022:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "10022:41:9"
																},
																"nativeSrc": "10022:48:9",
																"nodeType": "YulFunctionCall",
																"src": "10022:48:9"
															},
															"nativeSrc": "10022:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "10022:48:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$638",
												"nativeSrc": "9907:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9952:6:9",
														"nodeType": "YulTypedName",
														"src": "9952:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9960:3:9",
														"nodeType": "YulTypedName",
														"src": "9960:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9968:5:9",
														"nodeType": "YulTypedName",
														"src": "9968:5:9",
														"type": ""
													}
												],
												"src": "9907:169:9"
											},
											{
												"body": {
													"nativeSrc": "10163:278:9",
													"nodeType": "YulBlock",
													"src": "10163:278:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10209:83:9",
																"nodeType": "YulBlock",
																"src": "10209:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10211:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10211:77:9"
																			},
																			"nativeSrc": "10211:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10211:79:9"
																		},
																		"nativeSrc": "10211:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10211:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10184:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10184:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10193:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10193:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10180:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10180:3:9"
																		},
																		"nativeSrc": "10180:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10180:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10176:3:9"
																},
																"nativeSrc": "10176:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10176:32:9"
															},
															"nativeSrc": "10173:119:9",
															"nodeType": "YulIf",
															"src": "10173:119:9"
														},
														{
															"nativeSrc": "10302:132:9",
															"nodeType": "YulBlock",
															"src": "10302:132:9",
															"statements": [
																{
																	"nativeSrc": "10317:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10317:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10331:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10331:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10321:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10321:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10346:78:9",
																	"nodeType": "YulAssignment",
																	"src": "10346:78:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10396:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10396:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10407:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10407:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10392:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10392:3:9"
																				},
																				"nativeSrc": "10392:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10392:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10416:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10416:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$638",
																			"nativeSrc": "10356:35:9",
																			"nodeType": "YulIdentifier",
																			"src": "10356:35:9"
																		},
																		"nativeSrc": "10356:68:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10356:68:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10346:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10346:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$638",
												"nativeSrc": "10082:359:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10133:9:9",
														"nodeType": "YulTypedName",
														"src": "10133:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10144:7:9",
														"nodeType": "YulTypedName",
														"src": "10144:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10156:6:9",
														"nodeType": "YulTypedName",
														"src": "10156:6:9",
														"type": ""
													}
												],
												"src": "10082:359:9"
											},
											{
												"body": {
													"nativeSrc": "10529:66:9",
													"nodeType": "YulBlock",
													"src": "10529:66:9",
													"statements": [
														{
															"nativeSrc": "10539:50:9",
															"nodeType": "YulAssignment",
															"src": "10539:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10583:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10583:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10552:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "10552:30:9"
																},
																"nativeSrc": "10552:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10552:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10539:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "10539:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMintableToken_$739_to_t_address",
												"nativeSrc": "10447:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10509:5:9",
														"nodeType": "YulTypedName",
														"src": "10509:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10519:9:9",
														"nodeType": "YulTypedName",
														"src": "10519:9:9",
														"type": ""
													}
												],
												"src": "10447:148:9"
											},
											{
												"body": {
													"nativeSrc": "10688:88:9",
													"nodeType": "YulBlock",
													"src": "10688:88:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10705:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10705:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10763:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10763:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMintableToken_$739_to_t_address",
																			"nativeSrc": "10710:52:9",
																			"nodeType": "YulIdentifier",
																			"src": "10710:52:9"
																		},
																		"nativeSrc": "10710:59:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10710:59:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10698:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10698:6:9"
																},
																"nativeSrc": "10698:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10698:72:9"
															},
															"nativeSrc": "10698:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10698:72:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMintableToken_$739_to_t_address_fromStack",
												"nativeSrc": "10601:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10676:5:9",
														"nodeType": "YulTypedName",
														"src": "10676:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10683:3:9",
														"nodeType": "YulTypedName",
														"src": "10683:3:9",
														"type": ""
													}
												],
												"src": "10601:175:9"
											},
											{
												"body": {
													"nativeSrc": "10902:146:9",
													"nodeType": "YulBlock",
													"src": "10902:146:9",
													"statements": [
														{
															"nativeSrc": "10912:26:9",
															"nodeType": "YulAssignment",
															"src": "10912:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10924:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10924:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10935:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10935:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10920:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10920:3:9"
																},
																"nativeSrc": "10920:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10920:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10912:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10912:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11014:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11014:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11027:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11027:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11038:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11038:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11023:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11023:3:9"
																		},
																		"nativeSrc": "11023:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11023:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMintableToken_$739_to_t_address_fromStack",
																	"nativeSrc": "10948:65:9",
																	"nodeType": "YulIdentifier",
																	"src": "10948:65:9"
																},
																"nativeSrc": "10948:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10948:93:9"
															},
															"nativeSrc": "10948:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10948:93:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMintableToken_$739__to_t_address__fromStack_reversed",
												"nativeSrc": "10782:266:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10874:9:9",
														"nodeType": "YulTypedName",
														"src": "10874:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10886:6:9",
														"nodeType": "YulTypedName",
														"src": "10886:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10897:4:9",
														"nodeType": "YulTypedName",
														"src": "10897:4:9",
														"type": ""
													}
												],
												"src": "10782:266:9"
											},
											{
												"body": {
													"nativeSrc": "11208:288:9",
													"nodeType": "YulBlock",
													"src": "11208:288:9",
													"statements": [
														{
															"nativeSrc": "11218:26:9",
															"nodeType": "YulAssignment",
															"src": "11218:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11230:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11230:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11241:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11241:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11226:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11226:3:9"
																},
																"nativeSrc": "11226:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11226:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11218:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11218:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11298:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11298:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11311:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11311:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11322:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11322:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11307:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11307:3:9"
																		},
																		"nativeSrc": "11307:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11307:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11254:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11254:43:9"
																},
																"nativeSrc": "11254:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11254:71:9"
															},
															"nativeSrc": "11254:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11254:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11379:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11379:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11392:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11392:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11403:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11403:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11388:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11388:3:9"
																		},
																		"nativeSrc": "11388:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11388:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11335:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11335:43:9"
																},
																"nativeSrc": "11335:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11335:72:9"
															},
															"nativeSrc": "11335:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11335:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11461:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11461:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11474:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11474:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11485:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11485:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11470:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11470:3:9"
																		},
																		"nativeSrc": "11470:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11470:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11417:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11417:43:9"
																},
																"nativeSrc": "11417:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11417:72:9"
															},
															"nativeSrc": "11417:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11417:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11054:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11164:9:9",
														"nodeType": "YulTypedName",
														"src": "11164:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11176:6:9",
														"nodeType": "YulTypedName",
														"src": "11176:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11184:6:9",
														"nodeType": "YulTypedName",
														"src": "11184:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11192:6:9",
														"nodeType": "YulTypedName",
														"src": "11192:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11203:4:9",
														"nodeType": "YulTypedName",
														"src": "11203:4:9",
														"type": ""
													}
												],
												"src": "11054:442:9"
											},
											{
												"body": {
													"nativeSrc": "11598:73:9",
													"nodeType": "YulBlock",
													"src": "11598:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11615:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11615:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11620:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11620:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11608:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11608:6:9"
																},
																"nativeSrc": "11608:19:9",
																"nodeType": "YulFunctionCall",
																"src": "11608:19:9"
															},
															"nativeSrc": "11608:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "11608:19:9"
														},
														{
															"nativeSrc": "11636:29:9",
															"nodeType": "YulAssignment",
															"src": "11636:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11655:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11655:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11660:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11660:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11651:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11651:3:9"
																},
																"nativeSrc": "11651:14:9",
																"nodeType": "YulFunctionCall",
																"src": "11651:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11636:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "11636:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11502:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11570:3:9",
														"nodeType": "YulTypedName",
														"src": "11570:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11575:6:9",
														"nodeType": "YulTypedName",
														"src": "11575:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11586:11:9",
														"nodeType": "YulTypedName",
														"src": "11586:11:9",
														"type": ""
													}
												],
												"src": "11502:169:9"
											},
											{
												"body": {
													"nativeSrc": "11783:56:9",
													"nodeType": "YulBlock",
													"src": "11783:56:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11805:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11805:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11813:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11813:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11801:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11801:3:9"
																		},
																		"nativeSrc": "11801:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11801:14:9"
																	},
																	{
																		"hexValue": "4e6f204e4654204c6576656c",
																		"kind": "string",
																		"nativeSrc": "11817:14:9",
																		"nodeType": "YulLiteral",
																		"src": "11817:14:9",
																		"type": "",
																		"value": "No NFT Level"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11794:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11794:6:9"
																},
																"nativeSrc": "11794:38:9",
																"nodeType": "YulFunctionCall",
																"src": "11794:38:9"
															},
															"nativeSrc": "11794:38:9",
															"nodeType": "YulExpressionStatement",
															"src": "11794:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328",
												"nativeSrc": "11677:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11775:6:9",
														"nodeType": "YulTypedName",
														"src": "11775:6:9",
														"type": ""
													}
												],
												"src": "11677:162:9"
											},
											{
												"body": {
													"nativeSrc": "11991:220:9",
													"nodeType": "YulBlock",
													"src": "11991:220:9",
													"statements": [
														{
															"nativeSrc": "12001:74:9",
															"nodeType": "YulAssignment",
															"src": "12001:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12067:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12067:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12072:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12072:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12008:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12008:58:9"
																},
																"nativeSrc": "12008:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12008:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12001:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12001:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12173:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12173:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328",
																	"nativeSrc": "12084:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12084:88:9"
																},
																"nativeSrc": "12084:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12084:93:9"
															},
															"nativeSrc": "12084:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12084:93:9"
														},
														{
															"nativeSrc": "12186:19:9",
															"nodeType": "YulAssignment",
															"src": "12186:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12197:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12197:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12202:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12202:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12193:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12193:3:9"
																},
																"nativeSrc": "12193:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12193:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12186:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12186:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11845:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11979:3:9",
														"nodeType": "YulTypedName",
														"src": "11979:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11987:3:9",
														"nodeType": "YulTypedName",
														"src": "11987:3:9",
														"type": ""
													}
												],
												"src": "11845:366:9"
											},
											{
												"body": {
													"nativeSrc": "12388:248:9",
													"nodeType": "YulBlock",
													"src": "12388:248:9",
													"statements": [
														{
															"nativeSrc": "12398:26:9",
															"nodeType": "YulAssignment",
															"src": "12398:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12410:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12410:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12421:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12421:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12406:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12406:3:9"
																},
																"nativeSrc": "12406:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12406:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12398:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12398:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12445:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12445:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12456:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12456:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12441:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12441:3:9"
																		},
																		"nativeSrc": "12441:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12441:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12464:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12464:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12470:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12470:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12460:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12460:3:9"
																		},
																		"nativeSrc": "12460:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12460:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12434:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12434:6:9"
																},
																"nativeSrc": "12434:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12434:47:9"
															},
															"nativeSrc": "12434:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12434:47:9"
														},
														{
															"nativeSrc": "12490:139:9",
															"nodeType": "YulAssignment",
															"src": "12490:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12624:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12624:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12498:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12498:124:9"
																},
																"nativeSrc": "12498:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12498:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12490:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12490:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12217:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12368:9:9",
														"nodeType": "YulTypedName",
														"src": "12368:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12383:4:9",
														"nodeType": "YulTypedName",
														"src": "12383:4:9",
														"type": ""
													}
												],
												"src": "12217:419:9"
											},
											{
												"body": {
													"nativeSrc": "12670:152:9",
													"nodeType": "YulBlock",
													"src": "12670:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12687:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12687:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12690:77:9",
																		"nodeType": "YulLiteral",
																		"src": "12690:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12680:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12680:6:9"
																},
																"nativeSrc": "12680:88:9",
																"nodeType": "YulFunctionCall",
																"src": "12680:88:9"
															},
															"nativeSrc": "12680:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "12680:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12784:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12784:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12787:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12787:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12777:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:9"
																},
																"nativeSrc": "12777:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12777:15:9"
															},
															"nativeSrc": "12777:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12777:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12808:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12808:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12811:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12811:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12801:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12801:6:9"
																},
																"nativeSrc": "12801:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12801:15:9"
															},
															"nativeSrc": "12801:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12801:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12642:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "12642:180:9"
											},
											{
												"body": {
													"nativeSrc": "12873:149:9",
													"nodeType": "YulBlock",
													"src": "12873:149:9",
													"statements": [
														{
															"nativeSrc": "12883:25:9",
															"nodeType": "YulAssignment",
															"src": "12883:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12906:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12906:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12888:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12888:17:9"
																},
																"nativeSrc": "12888:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12888:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12883:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12883:1:9"
																}
															]
														},
														{
															"nativeSrc": "12917:25:9",
															"nodeType": "YulAssignment",
															"src": "12917:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12940:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12940:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12922:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12922:17:9"
																},
																"nativeSrc": "12922:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12922:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12917:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12917:1:9"
																}
															]
														},
														{
															"nativeSrc": "12951:17:9",
															"nodeType": "YulAssignment",
															"src": "12951:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12963:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12963:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12966:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12966:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12959:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12959:3:9"
																},
																"nativeSrc": "12959:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12959:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12951:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12951:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12993:22:9",
																"nodeType": "YulBlock",
																"src": "12993:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12995:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12995:16:9"
																			},
																			"nativeSrc": "12995:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12995:18:9"
																		},
																		"nativeSrc": "12995:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12995:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12984:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12984:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12990:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12990:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12981:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12981:2:9"
																},
																"nativeSrc": "12981:11:9",
																"nodeType": "YulFunctionCall",
																"src": "12981:11:9"
															},
															"nativeSrc": "12978:37:9",
															"nodeType": "YulIf",
															"src": "12978:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12828:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12859:1:9",
														"nodeType": "YulTypedName",
														"src": "12859:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12862:1:9",
														"nodeType": "YulTypedName",
														"src": "12862:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12868:4:9",
														"nodeType": "YulTypedName",
														"src": "12868:4:9",
														"type": ""
													}
												],
												"src": "12828:194:9"
											},
											{
												"body": {
													"nativeSrc": "13072:147:9",
													"nodeType": "YulBlock",
													"src": "13072:147:9",
													"statements": [
														{
															"nativeSrc": "13082:25:9",
															"nodeType": "YulAssignment",
															"src": "13082:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13105:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13105:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13087:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13087:17:9"
																},
																"nativeSrc": "13087:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13087:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13082:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13082:1:9"
																}
															]
														},
														{
															"nativeSrc": "13116:25:9",
															"nodeType": "YulAssignment",
															"src": "13116:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13139:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13139:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13121:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13121:17:9"
																},
																"nativeSrc": "13121:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13121:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13116:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13116:1:9"
																}
															]
														},
														{
															"nativeSrc": "13150:16:9",
															"nodeType": "YulAssignment",
															"src": "13150:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13161:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13161:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13164:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13164:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13157:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13157:3:9"
																},
																"nativeSrc": "13157:9:9",
																"nodeType": "YulFunctionCall",
																"src": "13157:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13150:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13150:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13190:22:9",
																"nodeType": "YulBlock",
																"src": "13190:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13192:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "13192:16:9"
																			},
																			"nativeSrc": "13192:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13192:18:9"
																		},
																		"nativeSrc": "13192:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13192:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13182:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13182:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13185:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13185:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13179:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "13179:2:9"
																},
																"nativeSrc": "13179:10:9",
																"nodeType": "YulFunctionCall",
																"src": "13179:10:9"
															},
															"nativeSrc": "13176:36:9",
															"nodeType": "YulIf",
															"src": "13176:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13028:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13059:1:9",
														"nodeType": "YulTypedName",
														"src": "13059:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13062:1:9",
														"nodeType": "YulTypedName",
														"src": "13062:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13068:3:9",
														"nodeType": "YulTypedName",
														"src": "13068:3:9",
														"type": ""
													}
												],
												"src": "13028:191:9"
											},
											{
												"body": {
													"nativeSrc": "13273:362:9",
													"nodeType": "YulBlock",
													"src": "13273:362:9",
													"statements": [
														{
															"nativeSrc": "13283:25:9",
															"nodeType": "YulAssignment",
															"src": "13283:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13306:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13306:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13288:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13288:17:9"
																},
																"nativeSrc": "13288:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13288:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13283:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13283:1:9"
																}
															]
														},
														{
															"nativeSrc": "13317:25:9",
															"nodeType": "YulAssignment",
															"src": "13317:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13340:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13340:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13322:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13322:17:9"
																},
																"nativeSrc": "13322:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13322:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13317:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13317:1:9"
																}
															]
														},
														{
															"nativeSrc": "13351:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13351:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13374:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13374:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13377:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13377:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13370:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:9"
																},
																"nativeSrc": "13370:9:9",
																"nodeType": "YulFunctionCall",
																"src": "13370:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13355:11:9",
																	"nodeType": "YulTypedName",
																	"src": "13355:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13388:41:9",
															"nodeType": "YulAssignment",
															"src": "13388:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13417:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "13417:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13399:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13399:17:9"
																},
																"nativeSrc": "13399:30:9",
																"nodeType": "YulFunctionCall",
																"src": "13399:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13388:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "13388:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13606:22:9",
																"nodeType": "YulBlock",
																"src": "13606:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13608:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "13608:16:9"
																			},
																			"nativeSrc": "13608:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13608:18:9"
																		},
																		"nativeSrc": "13608:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13608:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13539:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "13539:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13532:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "13532:6:9"
																				},
																				"nativeSrc": "13532:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13532:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13562:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "13562:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13569:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "13569:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13578:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "13578:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13565:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "13565:3:9"
																						},
																						"nativeSrc": "13565:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "13565:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13559:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "13559:2:9"
																				},
																				"nativeSrc": "13559:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13559:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13512:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13512:2:9"
																		},
																		"nativeSrc": "13512:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13512:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13492:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13492:6:9"
																},
																"nativeSrc": "13492:113:9",
																"nodeType": "YulFunctionCall",
																"src": "13492:113:9"
															},
															"nativeSrc": "13489:139:9",
															"nodeType": "YulIf",
															"src": "13489:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13225:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13256:1:9",
														"nodeType": "YulTypedName",
														"src": "13256:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13259:1:9",
														"nodeType": "YulTypedName",
														"src": "13259:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13265:7:9",
														"nodeType": "YulTypedName",
														"src": "13265:7:9",
														"type": ""
													}
												],
												"src": "13225:410:9"
											},
											{
												"body": {
													"nativeSrc": "13706:53:9",
													"nodeType": "YulBlock",
													"src": "13706:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13723:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13723:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13746:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13746:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "13728:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "13728:17:9"
																		},
																		"nativeSrc": "13728:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13728:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13716:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13716:6:9"
																},
																"nativeSrc": "13716:37:9",
																"nodeType": "YulFunctionCall",
																"src": "13716:37:9"
															},
															"nativeSrc": "13716:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "13716:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13641:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13694:5:9",
														"nodeType": "YulTypedName",
														"src": "13694:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13701:3:9",
														"nodeType": "YulTypedName",
														"src": "13701:3:9",
														"type": ""
													}
												],
												"src": "13641:118:9"
											},
											{
												"body": {
													"nativeSrc": "13891:206:9",
													"nodeType": "YulBlock",
													"src": "13891:206:9",
													"statements": [
														{
															"nativeSrc": "13901:26:9",
															"nodeType": "YulAssignment",
															"src": "13901:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13913:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13913:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13924:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13924:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13909:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13909:3:9"
																},
																"nativeSrc": "13909:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13909:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13901:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13901:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13981:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13981:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13994:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13994:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14005:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14005:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13990:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:9"
																		},
																		"nativeSrc": "13990:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13990:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13937:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13937:43:9"
																},
																"nativeSrc": "13937:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13937:71:9"
															},
															"nativeSrc": "13937:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13937:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14062:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14062:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14075:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14075:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14086:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14086:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14071:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:9"
																		},
																		"nativeSrc": "14071:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14071:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14018:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14018:43:9"
																},
																"nativeSrc": "14018:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14018:72:9"
															},
															"nativeSrc": "14018:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14018:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13765:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13855:9:9",
														"nodeType": "YulTypedName",
														"src": "13855:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13867:6:9",
														"nodeType": "YulTypedName",
														"src": "13867:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13875:6:9",
														"nodeType": "YulTypedName",
														"src": "13875:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13886:4:9",
														"nodeType": "YulTypedName",
														"src": "13886:4:9",
														"type": ""
													}
												],
												"src": "13765:332:9"
											},
											{
												"body": {
													"nativeSrc": "14143:76:9",
													"nodeType": "YulBlock",
													"src": "14143:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "14197:16:9",
																"nodeType": "YulBlock",
																"src": "14197:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14206:1:9",
																					"nodeType": "YulLiteral",
																					"src": "14206:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14209:1:9",
																					"nodeType": "YulLiteral",
																					"src": "14209:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14199:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14199:6:9"
																			},
																			"nativeSrc": "14199:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14199:12:9"
																		},
																		"nativeSrc": "14199:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14199:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14166:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14166:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14188:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "14188:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14173:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "14173:14:9"
																				},
																				"nativeSrc": "14173:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14173:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14163:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "14163:2:9"
																		},
																		"nativeSrc": "14163:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14163:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14156:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14156:6:9"
																},
																"nativeSrc": "14156:40:9",
																"nodeType": "YulFunctionCall",
																"src": "14156:40:9"
															},
															"nativeSrc": "14153:60:9",
															"nodeType": "YulIf",
															"src": "14153:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14103:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14136:5:9",
														"nodeType": "YulTypedName",
														"src": "14136:5:9",
														"type": ""
													}
												],
												"src": "14103:116:9"
											},
											{
												"body": {
													"nativeSrc": "14285:77:9",
													"nodeType": "YulBlock",
													"src": "14285:77:9",
													"statements": [
														{
															"nativeSrc": "14295:22:9",
															"nodeType": "YulAssignment",
															"src": "14295:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14310:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14310:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14304:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14304:5:9"
																},
																"nativeSrc": "14304:13:9",
																"nodeType": "YulFunctionCall",
																"src": "14304:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14295:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14295:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14350:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14350:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14326:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "14326:23:9"
																},
																"nativeSrc": "14326:30:9",
																"nodeType": "YulFunctionCall",
																"src": "14326:30:9"
															},
															"nativeSrc": "14326:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "14326:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14225:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14263:6:9",
														"nodeType": "YulTypedName",
														"src": "14263:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14271:3:9",
														"nodeType": "YulTypedName",
														"src": "14271:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14279:5:9",
														"nodeType": "YulTypedName",
														"src": "14279:5:9",
														"type": ""
													}
												],
												"src": "14225:137:9"
											},
											{
												"body": {
													"nativeSrc": "14442:271:9",
													"nodeType": "YulBlock",
													"src": "14442:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "14488:83:9",
																"nodeType": "YulBlock",
																"src": "14488:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14490:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "14490:77:9"
																			},
																			"nativeSrc": "14490:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14490:79:9"
																		},
																		"nativeSrc": "14490:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14490:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14463:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14463:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14472:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14472:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14459:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14459:3:9"
																		},
																		"nativeSrc": "14459:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14459:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14484:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14484:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14455:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14455:3:9"
																},
																"nativeSrc": "14455:32:9",
																"nodeType": "YulFunctionCall",
																"src": "14455:32:9"
															},
															"nativeSrc": "14452:119:9",
															"nodeType": "YulIf",
															"src": "14452:119:9"
														},
														{
															"nativeSrc": "14581:125:9",
															"nodeType": "YulBlock",
															"src": "14581:125:9",
															"statements": [
																{
																	"nativeSrc": "14596:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14596:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14610:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14610:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14600:6:9",
																			"nodeType": "YulTypedName",
																			"src": "14600:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14625:71:9",
																	"nodeType": "YulAssignment",
																	"src": "14625:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14668:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "14668:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14679:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "14679:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14664:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14664:3:9"
																				},
																				"nativeSrc": "14664:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14664:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14688:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "14688:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14635:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "14635:28:9"
																		},
																		"nativeSrc": "14635:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14635:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14625:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "14625:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14368:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14412:9:9",
														"nodeType": "YulTypedName",
														"src": "14412:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14423:7:9",
														"nodeType": "YulTypedName",
														"src": "14423:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14435:6:9",
														"nodeType": "YulTypedName",
														"src": "14435:6:9",
														"type": ""
													}
												],
												"src": "14368:345:9"
											},
											{
												"body": {
													"nativeSrc": "14817:124:9",
													"nodeType": "YulBlock",
													"src": "14817:124:9",
													"statements": [
														{
															"nativeSrc": "14827:26:9",
															"nodeType": "YulAssignment",
															"src": "14827:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14839:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14839:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14850:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14850:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14835:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14835:3:9"
																},
																"nativeSrc": "14835:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14835:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14827:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14827:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14907:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14907:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14920:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14920:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14931:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14931:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14916:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14916:3:9"
																		},
																		"nativeSrc": "14916:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14916:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14863:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14863:43:9"
																},
																"nativeSrc": "14863:71:9",
																"nodeType": "YulFunctionCall",
																"src": "14863:71:9"
															},
															"nativeSrc": "14863:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "14863:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14719:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14789:9:9",
														"nodeType": "YulTypedName",
														"src": "14789:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14801:6:9",
														"nodeType": "YulTypedName",
														"src": "14801:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14812:4:9",
														"nodeType": "YulTypedName",
														"src": "14812:4:9",
														"type": ""
													}
												],
												"src": "14719:222:9"
											},
											{
												"body": {
													"nativeSrc": "15010:80:9",
													"nodeType": "YulBlock",
													"src": "15010:80:9",
													"statements": [
														{
															"nativeSrc": "15020:22:9",
															"nodeType": "YulAssignment",
															"src": "15020:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15035:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15035:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15029:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "15029:5:9"
																},
																"nativeSrc": "15029:13:9",
																"nodeType": "YulFunctionCall",
																"src": "15029:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15020:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "15020:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15078:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15078:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15051:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "15051:26:9"
																},
																"nativeSrc": "15051:33:9",
																"nodeType": "YulFunctionCall",
																"src": "15051:33:9"
															},
															"nativeSrc": "15051:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "15051:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "14947:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14988:6:9",
														"nodeType": "YulTypedName",
														"src": "14988:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14996:3:9",
														"nodeType": "YulTypedName",
														"src": "14996:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15004:5:9",
														"nodeType": "YulTypedName",
														"src": "15004:5:9",
														"type": ""
													}
												],
												"src": "14947:143:9"
											},
											{
												"body": {
													"nativeSrc": "15173:274:9",
													"nodeType": "YulBlock",
													"src": "15173:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "15219:83:9",
																"nodeType": "YulBlock",
																"src": "15219:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15221:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "15221:77:9"
																			},
																			"nativeSrc": "15221:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15221:79:9"
																		},
																		"nativeSrc": "15221:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15221:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15194:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15194:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15203:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15203:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15190:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15190:3:9"
																		},
																		"nativeSrc": "15190:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15190:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15215:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15215:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15186:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15186:3:9"
																},
																"nativeSrc": "15186:32:9",
																"nodeType": "YulFunctionCall",
																"src": "15186:32:9"
															},
															"nativeSrc": "15183:119:9",
															"nodeType": "YulIf",
															"src": "15183:119:9"
														},
														{
															"nativeSrc": "15312:128:9",
															"nodeType": "YulBlock",
															"src": "15312:128:9",
															"statements": [
																{
																	"nativeSrc": "15327:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15327:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15341:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15331:6:9",
																			"nodeType": "YulTypedName",
																			"src": "15331:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15356:74:9",
																	"nodeType": "YulAssignment",
																	"src": "15356:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15402:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "15402:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15413:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "15413:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15398:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "15398:3:9"
																				},
																				"nativeSrc": "15398:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15398:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15422:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "15422:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15366:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "15366:31:9"
																		},
																		"nativeSrc": "15366:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15366:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15356:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "15356:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "15096:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15143:9:9",
														"nodeType": "YulTypedName",
														"src": "15143:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15154:7:9",
														"nodeType": "YulTypedName",
														"src": "15154:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15166:6:9",
														"nodeType": "YulTypedName",
														"src": "15166:6:9",
														"type": ""
													}
												],
												"src": "15096:351:9"
											},
											{
												"body": {
													"nativeSrc": "15559:72:9",
													"nodeType": "YulBlock",
													"src": "15559:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15581:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15581:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15589:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15589:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15577:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15577:3:9"
																		},
																		"nativeSrc": "15577:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15577:14:9"
																	},
																	{
																		"hexValue": "5265776172642072617465206d75737420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "15593:30:9",
																		"nodeType": "YulLiteral",
																		"src": "15593:30:9",
																		"type": "",
																		"value": "Reward rate must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15570:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15570:6:9"
																},
																"nativeSrc": "15570:54:9",
																"nodeType": "YulFunctionCall",
																"src": "15570:54:9"
															},
															"nativeSrc": "15570:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "15570:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324",
												"nativeSrc": "15453:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15551:6:9",
														"nodeType": "YulTypedName",
														"src": "15551:6:9",
														"type": ""
													}
												],
												"src": "15453:178:9"
											},
											{
												"body": {
													"nativeSrc": "15783:220:9",
													"nodeType": "YulBlock",
													"src": "15783:220:9",
													"statements": [
														{
															"nativeSrc": "15793:74:9",
															"nodeType": "YulAssignment",
															"src": "15793:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15859:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15859:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15864:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15864:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15800:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15800:58:9"
																},
																"nativeSrc": "15800:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15800:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15793:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15793:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15965:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324",
																	"nativeSrc": "15876:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15876:88:9"
																},
																"nativeSrc": "15876:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15876:93:9"
															},
															"nativeSrc": "15876:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15876:93:9"
														},
														{
															"nativeSrc": "15978:19:9",
															"nodeType": "YulAssignment",
															"src": "15978:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15989:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15989:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15994:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15994:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15985:3:9"
																},
																"nativeSrc": "15985:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15985:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15978:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15978:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15637:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15771:3:9",
														"nodeType": "YulTypedName",
														"src": "15771:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15779:3:9",
														"nodeType": "YulTypedName",
														"src": "15779:3:9",
														"type": ""
													}
												],
												"src": "15637:366:9"
											},
											{
												"body": {
													"nativeSrc": "16180:248:9",
													"nodeType": "YulBlock",
													"src": "16180:248:9",
													"statements": [
														{
															"nativeSrc": "16190:26:9",
															"nodeType": "YulAssignment",
															"src": "16190:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16202:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16202:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16213:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16213:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16198:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16198:3:9"
																},
																"nativeSrc": "16198:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16198:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16190:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16190:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16237:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16237:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16248:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16248:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16233:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16233:3:9"
																		},
																		"nativeSrc": "16233:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16233:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16256:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16256:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16262:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16262:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16252:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16252:3:9"
																		},
																		"nativeSrc": "16252:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16252:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16226:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16226:6:9"
																},
																"nativeSrc": "16226:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16226:47:9"
															},
															"nativeSrc": "16226:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16226:47:9"
														},
														{
															"nativeSrc": "16282:139:9",
															"nodeType": "YulAssignment",
															"src": "16282:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16416:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16416:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16290:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16290:124:9"
																},
																"nativeSrc": "16290:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16290:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16282:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16282:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16009:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16160:9:9",
														"nodeType": "YulTypedName",
														"src": "16160:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16175:4:9",
														"nodeType": "YulTypedName",
														"src": "16175:4:9",
														"type": ""
													}
												],
												"src": "16009:419:9"
											},
											{
												"body": {
													"nativeSrc": "16540:75:9",
													"nodeType": "YulBlock",
													"src": "16540:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16562:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16562:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16570:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16570:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16558:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16558:3:9"
																		},
																		"nativeSrc": "16558:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16558:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "16574:33:9",
																		"nodeType": "YulLiteral",
																		"src": "16574:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16551:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16551:6:9"
																},
																"nativeSrc": "16551:57:9",
																"nodeType": "YulFunctionCall",
																"src": "16551:57:9"
															},
															"nativeSrc": "16551:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "16551:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "16434:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16532:6:9",
														"nodeType": "YulTypedName",
														"src": "16532:6:9",
														"type": ""
													}
												],
												"src": "16434:181:9"
											},
											{
												"body": {
													"nativeSrc": "16767:220:9",
													"nodeType": "YulBlock",
													"src": "16767:220:9",
													"statements": [
														{
															"nativeSrc": "16777:74:9",
															"nodeType": "YulAssignment",
															"src": "16777:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16843:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16843:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16848:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16848:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16784:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16784:58:9"
																},
																"nativeSrc": "16784:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16784:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16777:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16777:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16949:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16949:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "16860:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16860:88:9"
																},
																"nativeSrc": "16860:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16860:93:9"
															},
															"nativeSrc": "16860:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16860:93:9"
														},
														{
															"nativeSrc": "16962:19:9",
															"nodeType": "YulAssignment",
															"src": "16962:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16973:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16973:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16978:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16978:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16969:3:9"
																},
																"nativeSrc": "16969:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16969:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16962:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16962:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16621:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16755:3:9",
														"nodeType": "YulTypedName",
														"src": "16755:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16763:3:9",
														"nodeType": "YulTypedName",
														"src": "16763:3:9",
														"type": ""
													}
												],
												"src": "16621:366:9"
											},
											{
												"body": {
													"nativeSrc": "17164:248:9",
													"nodeType": "YulBlock",
													"src": "17164:248:9",
													"statements": [
														{
															"nativeSrc": "17174:26:9",
															"nodeType": "YulAssignment",
															"src": "17174:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17186:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17186:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17197:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17197:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17182:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17182:3:9"
																},
																"nativeSrc": "17182:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17182:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17174:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17174:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17221:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17221:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17232:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17232:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17217:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17217:3:9"
																		},
																		"nativeSrc": "17217:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17217:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17240:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17240:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17246:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17246:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17236:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17236:3:9"
																		},
																		"nativeSrc": "17236:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17236:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17210:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17210:6:9"
																},
																"nativeSrc": "17210:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17210:47:9"
															},
															"nativeSrc": "17210:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17210:47:9"
														},
														{
															"nativeSrc": "17266:139:9",
															"nodeType": "YulAssignment",
															"src": "17266:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17400:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17400:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17274:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17274:124:9"
																},
																"nativeSrc": "17274:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17274:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17266:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17266:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16993:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17144:9:9",
														"nodeType": "YulTypedName",
														"src": "17144:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17159:4:9",
														"nodeType": "YulTypedName",
														"src": "17159:4:9",
														"type": ""
													}
												],
												"src": "16993:419:9"
											},
											{
												"body": {
													"nativeSrc": "17524:124:9",
													"nodeType": "YulBlock",
													"src": "17524:124:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17546:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17546:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17554:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17554:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17542:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17542:3:9"
																		},
																		"nativeSrc": "17542:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17542:14:9"
																	},
																	{
																		"hexValue": "546f6b656e5374616b696e673a20416d6f756e74206d75737420626520677265",
																		"kind": "string",
																		"nativeSrc": "17558:34:9",
																		"nodeType": "YulLiteral",
																		"src": "17558:34:9",
																		"type": "",
																		"value": "TokenStaking: Amount must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17535:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17535:6:9"
																},
																"nativeSrc": "17535:58:9",
																"nodeType": "YulFunctionCall",
																"src": "17535:58:9"
															},
															"nativeSrc": "17535:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "17535:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17614:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17614:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17622:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17622:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17610:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17610:3:9"
																		},
																		"nativeSrc": "17610:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17610:15:9"
																	},
																	{
																		"hexValue": "61746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "17627:13:9",
																		"nodeType": "YulLiteral",
																		"src": "17627:13:9",
																		"type": "",
																		"value": "ater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17603:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17603:6:9"
																},
																"nativeSrc": "17603:38:9",
																"nodeType": "YulFunctionCall",
																"src": "17603:38:9"
															},
															"nativeSrc": "17603:38:9",
															"nodeType": "YulExpressionStatement",
															"src": "17603:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2",
												"nativeSrc": "17418:230:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17516:6:9",
														"nodeType": "YulTypedName",
														"src": "17516:6:9",
														"type": ""
													}
												],
												"src": "17418:230:9"
											},
											{
												"body": {
													"nativeSrc": "17800:220:9",
													"nodeType": "YulBlock",
													"src": "17800:220:9",
													"statements": [
														{
															"nativeSrc": "17810:74:9",
															"nodeType": "YulAssignment",
															"src": "17810:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17876:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17881:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17881:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17817:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17817:58:9"
																},
																"nativeSrc": "17817:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17817:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17810:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17810:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17982:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17982:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2",
																	"nativeSrc": "17893:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17893:88:9"
																},
																"nativeSrc": "17893:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17893:93:9"
															},
															"nativeSrc": "17893:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17893:93:9"
														},
														{
															"nativeSrc": "17995:19:9",
															"nodeType": "YulAssignment",
															"src": "17995:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18006:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18006:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18011:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18011:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18002:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18002:3:9"
																},
																"nativeSrc": "18002:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18002:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17995:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17995:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17654:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17788:3:9",
														"nodeType": "YulTypedName",
														"src": "17788:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17796:3:9",
														"nodeType": "YulTypedName",
														"src": "17796:3:9",
														"type": ""
													}
												],
												"src": "17654:366:9"
											},
											{
												"body": {
													"nativeSrc": "18197:248:9",
													"nodeType": "YulBlock",
													"src": "18197:248:9",
													"statements": [
														{
															"nativeSrc": "18207:26:9",
															"nodeType": "YulAssignment",
															"src": "18207:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18219:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18219:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18230:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18230:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18215:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18215:3:9"
																},
																"nativeSrc": "18215:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18215:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18207:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18207:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18254:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18254:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18265:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18265:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18250:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18250:3:9"
																		},
																		"nativeSrc": "18250:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18250:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18273:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18273:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18279:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18279:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18269:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18269:3:9"
																		},
																		"nativeSrc": "18269:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18269:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18243:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18243:6:9"
																},
																"nativeSrc": "18243:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18243:47:9"
															},
															"nativeSrc": "18243:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18243:47:9"
														},
														{
															"nativeSrc": "18299:139:9",
															"nodeType": "YulAssignment",
															"src": "18299:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18433:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18433:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18307:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18307:124:9"
																},
																"nativeSrc": "18307:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18307:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18299:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18299:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18026:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18177:9:9",
														"nodeType": "YulTypedName",
														"src": "18177:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18192:4:9",
														"nodeType": "YulTypedName",
														"src": "18192:4:9",
														"type": ""
													}
												],
												"src": "18026:419:9"
											},
											{
												"body": {
													"nativeSrc": "18557:122:9",
													"nodeType": "YulBlock",
													"src": "18557:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18579:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18579:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18587:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18587:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18575:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18575:3:9"
																		},
																		"nativeSrc": "18575:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18575:14:9"
																	},
																	{
																		"hexValue": "546f6b656e5374616b696e673a20496e73756666696369656e74207374616b65",
																		"kind": "string",
																		"nativeSrc": "18591:34:9",
																		"nodeType": "YulLiteral",
																		"src": "18591:34:9",
																		"type": "",
																		"value": "TokenStaking: Insufficient stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18568:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18568:6:9"
																},
																"nativeSrc": "18568:58:9",
																"nodeType": "YulFunctionCall",
																"src": "18568:58:9"
															},
															"nativeSrc": "18568:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "18568:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18647:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18647:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18655:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18655:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18643:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18643:3:9"
																		},
																		"nativeSrc": "18643:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18643:15:9"
																	},
																	{
																		"hexValue": "642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "18660:11:9",
																		"nodeType": "YulLiteral",
																		"src": "18660:11:9",
																		"type": "",
																		"value": "d balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18636:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18636:6:9"
																},
																"nativeSrc": "18636:36:9",
																"nodeType": "YulFunctionCall",
																"src": "18636:36:9"
															},
															"nativeSrc": "18636:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "18636:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20",
												"nativeSrc": "18451:228:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18549:6:9",
														"nodeType": "YulTypedName",
														"src": "18549:6:9",
														"type": ""
													}
												],
												"src": "18451:228:9"
											},
											{
												"body": {
													"nativeSrc": "18831:220:9",
													"nodeType": "YulBlock",
													"src": "18831:220:9",
													"statements": [
														{
															"nativeSrc": "18841:74:9",
															"nodeType": "YulAssignment",
															"src": "18841:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18907:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18907:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18912:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18912:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18848:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18848:58:9"
																},
																"nativeSrc": "18848:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18848:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18841:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18841:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19013:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19013:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20",
																	"nativeSrc": "18924:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18924:88:9"
																},
																"nativeSrc": "18924:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18924:93:9"
															},
															"nativeSrc": "18924:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18924:93:9"
														},
														{
															"nativeSrc": "19026:19:9",
															"nodeType": "YulAssignment",
															"src": "19026:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19037:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19037:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19042:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19042:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19033:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19033:3:9"
																},
																"nativeSrc": "19033:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19033:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19026:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19026:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18685:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18819:3:9",
														"nodeType": "YulTypedName",
														"src": "18819:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18827:3:9",
														"nodeType": "YulTypedName",
														"src": "18827:3:9",
														"type": ""
													}
												],
												"src": "18685:366:9"
											},
											{
												"body": {
													"nativeSrc": "19228:248:9",
													"nodeType": "YulBlock",
													"src": "19228:248:9",
													"statements": [
														{
															"nativeSrc": "19238:26:9",
															"nodeType": "YulAssignment",
															"src": "19238:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19250:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19250:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19261:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19261:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19246:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19246:3:9"
																},
																"nativeSrc": "19246:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19246:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19238:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19238:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19285:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19285:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19296:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19296:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19281:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19281:3:9"
																		},
																		"nativeSrc": "19281:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19281:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19304:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19304:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19310:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19300:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19300:3:9"
																		},
																		"nativeSrc": "19300:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19300:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19274:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19274:6:9"
																},
																"nativeSrc": "19274:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19274:47:9"
															},
															"nativeSrc": "19274:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19274:47:9"
														},
														{
															"nativeSrc": "19330:139:9",
															"nodeType": "YulAssignment",
															"src": "19330:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19464:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19464:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19338:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19338:124:9"
																},
																"nativeSrc": "19338:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19338:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19330:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19330:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19057:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19208:9:9",
														"nodeType": "YulTypedName",
														"src": "19208:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19223:4:9",
														"nodeType": "YulTypedName",
														"src": "19223:4:9",
														"type": ""
													}
												],
												"src": "19057:419:9"
											},
											{
												"body": {
													"nativeSrc": "19588:117:9",
													"nodeType": "YulBlock",
													"src": "19588:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19610:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19610:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19618:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19618:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19606:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19606:3:9"
																		},
																		"nativeSrc": "19606:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19606:14:9"
																	},
																	{
																		"hexValue": "546f6b656e5374616b696e673a20436c61696d20696e74657276616c206e6f74",
																		"kind": "string",
																		"nativeSrc": "19622:34:9",
																		"nodeType": "YulLiteral",
																		"src": "19622:34:9",
																		"type": "",
																		"value": "TokenStaking: Claim interval not"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19599:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19599:6:9"
																},
																"nativeSrc": "19599:58:9",
																"nodeType": "YulFunctionCall",
																"src": "19599:58:9"
															},
															"nativeSrc": "19599:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "19599:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19678:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19678:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19686:2:9",
																				"nodeType": "YulLiteral",
																				"src": "19686:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19674:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19674:3:9"
																		},
																		"nativeSrc": "19674:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19674:15:9"
																	},
																	{
																		"hexValue": "206d6574",
																		"kind": "string",
																		"nativeSrc": "19691:6:9",
																		"nodeType": "YulLiteral",
																		"src": "19691:6:9",
																		"type": "",
																		"value": " met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19667:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19667:6:9"
																},
																"nativeSrc": "19667:31:9",
																"nodeType": "YulFunctionCall",
																"src": "19667:31:9"
															},
															"nativeSrc": "19667:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "19667:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7",
												"nativeSrc": "19482:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19580:6:9",
														"nodeType": "YulTypedName",
														"src": "19580:6:9",
														"type": ""
													}
												],
												"src": "19482:223:9"
											},
											{
												"body": {
													"nativeSrc": "19857:220:9",
													"nodeType": "YulBlock",
													"src": "19857:220:9",
													"statements": [
														{
															"nativeSrc": "19867:74:9",
															"nodeType": "YulAssignment",
															"src": "19867:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19933:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19938:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19938:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19874:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19874:58:9"
																},
																"nativeSrc": "19874:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19874:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19867:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19867:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20039:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20039:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7",
																	"nativeSrc": "19950:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19950:88:9"
																},
																"nativeSrc": "19950:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19950:93:9"
															},
															"nativeSrc": "19950:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19950:93:9"
														},
														{
															"nativeSrc": "20052:19:9",
															"nodeType": "YulAssignment",
															"src": "20052:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20063:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20063:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20068:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20068:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20059:3:9"
																},
																"nativeSrc": "20059:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20059:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20052:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20052:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19711:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19845:3:9",
														"nodeType": "YulTypedName",
														"src": "19845:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19853:3:9",
														"nodeType": "YulTypedName",
														"src": "19853:3:9",
														"type": ""
													}
												],
												"src": "19711:366:9"
											},
											{
												"body": {
													"nativeSrc": "20254:248:9",
													"nodeType": "YulBlock",
													"src": "20254:248:9",
													"statements": [
														{
															"nativeSrc": "20264:26:9",
															"nodeType": "YulAssignment",
															"src": "20264:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20276:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20276:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20287:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20287:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20272:3:9"
																},
																"nativeSrc": "20272:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20272:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20264:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20264:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20311:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20311:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20322:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20322:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20307:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20307:3:9"
																		},
																		"nativeSrc": "20307:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20307:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20330:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20330:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20336:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20336:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20326:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20326:3:9"
																		},
																		"nativeSrc": "20326:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20326:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20300:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20300:6:9"
																},
																"nativeSrc": "20300:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20300:47:9"
															},
															"nativeSrc": "20300:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20300:47:9"
														},
														{
															"nativeSrc": "20356:139:9",
															"nodeType": "YulAssignment",
															"src": "20356:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20490:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20490:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20364:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20364:124:9"
																},
																"nativeSrc": "20364:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20364:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20356:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20356:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20083:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20234:9:9",
														"nodeType": "YulTypedName",
														"src": "20234:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20249:4:9",
														"nodeType": "YulTypedName",
														"src": "20249:4:9",
														"type": ""
													}
												],
												"src": "20083:419:9"
											},
											{
												"body": {
													"nativeSrc": "20614:118:9",
													"nodeType": "YulBlock",
													"src": "20614:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20636:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20636:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20644:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20644:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20632:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20632:3:9"
																		},
																		"nativeSrc": "20632:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20632:14:9"
																	},
																	{
																		"hexValue": "546f6b656e5374616b696e673a20556e7374616b65207472616e736665722066",
																		"kind": "string",
																		"nativeSrc": "20648:34:9",
																		"nodeType": "YulLiteral",
																		"src": "20648:34:9",
																		"type": "",
																		"value": "TokenStaking: Unstake transfer f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20625:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:9"
																},
																"nativeSrc": "20625:58:9",
																"nodeType": "YulFunctionCall",
																"src": "20625:58:9"
															},
															"nativeSrc": "20625:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "20625:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20704:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20704:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20712:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20712:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20700:3:9"
																		},
																		"nativeSrc": "20700:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20700:15:9"
																	},
																	{
																		"hexValue": "61696c6564",
																		"kind": "string",
																		"nativeSrc": "20717:7:9",
																		"nodeType": "YulLiteral",
																		"src": "20717:7:9",
																		"type": "",
																		"value": "ailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20693:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20693:6:9"
																},
																"nativeSrc": "20693:32:9",
																"nodeType": "YulFunctionCall",
																"src": "20693:32:9"
															},
															"nativeSrc": "20693:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "20693:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2",
												"nativeSrc": "20508:224:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20606:6:9",
														"nodeType": "YulTypedName",
														"src": "20606:6:9",
														"type": ""
													}
												],
												"src": "20508:224:9"
											},
											{
												"body": {
													"nativeSrc": "20884:220:9",
													"nodeType": "YulBlock",
													"src": "20884:220:9",
													"statements": [
														{
															"nativeSrc": "20894:74:9",
															"nodeType": "YulAssignment",
															"src": "20894:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20960:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20960:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20965:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20965:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20901:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20901:58:9"
																},
																"nativeSrc": "20901:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20901:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20894:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20894:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21066:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21066:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2",
																	"nativeSrc": "20977:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20977:88:9"
																},
																"nativeSrc": "20977:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20977:93:9"
															},
															"nativeSrc": "20977:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20977:93:9"
														},
														{
															"nativeSrc": "21079:19:9",
															"nodeType": "YulAssignment",
															"src": "21079:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21090:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21090:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21095:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21095:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21086:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21086:3:9"
																},
																"nativeSrc": "21086:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21086:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21079:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20738:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20872:3:9",
														"nodeType": "YulTypedName",
														"src": "20872:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20880:3:9",
														"nodeType": "YulTypedName",
														"src": "20880:3:9",
														"type": ""
													}
												],
												"src": "20738:366:9"
											},
											{
												"body": {
													"nativeSrc": "21281:248:9",
													"nodeType": "YulBlock",
													"src": "21281:248:9",
													"statements": [
														{
															"nativeSrc": "21291:26:9",
															"nodeType": "YulAssignment",
															"src": "21291:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21303:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21303:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21314:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21314:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21299:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21299:3:9"
																},
																"nativeSrc": "21299:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21299:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21291:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21291:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21338:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21338:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21349:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21349:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21334:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21334:3:9"
																		},
																		"nativeSrc": "21334:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21334:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21357:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21357:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21363:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21363:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21353:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21353:3:9"
																		},
																		"nativeSrc": "21353:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21353:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21327:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21327:6:9"
																},
																"nativeSrc": "21327:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21327:47:9"
															},
															"nativeSrc": "21327:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21327:47:9"
														},
														{
															"nativeSrc": "21383:139:9",
															"nodeType": "YulAssignment",
															"src": "21383:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21517:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21517:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21391:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21391:124:9"
																},
																"nativeSrc": "21391:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21391:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21383:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21383:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21110:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21261:9:9",
														"nodeType": "YulTypedName",
														"src": "21261:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21276:4:9",
														"nodeType": "YulTypedName",
														"src": "21276:4:9",
														"type": ""
													}
												],
												"src": "21110:419:9"
											},
											{
												"body": {
													"nativeSrc": "21641:75:9",
													"nodeType": "YulBlock",
													"src": "21641:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21663:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21663:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21671:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21671:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21659:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21659:3:9"
																		},
																		"nativeSrc": "21659:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21659:14:9"
																	},
																	{
																		"hexValue": "546f6b656e5374616b696e673a204e6f207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "21675:33:9",
																		"nodeType": "YulLiteral",
																		"src": "21675:33:9",
																		"type": "",
																		"value": "TokenStaking: No staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21652:6:9"
																},
																"nativeSrc": "21652:57:9",
																"nodeType": "YulFunctionCall",
																"src": "21652:57:9"
															},
															"nativeSrc": "21652:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "21652:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b",
												"nativeSrc": "21535:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21633:6:9",
														"nodeType": "YulTypedName",
														"src": "21633:6:9",
														"type": ""
													}
												],
												"src": "21535:181:9"
											},
											{
												"body": {
													"nativeSrc": "21868:220:9",
													"nodeType": "YulBlock",
													"src": "21868:220:9",
													"statements": [
														{
															"nativeSrc": "21878:74:9",
															"nodeType": "YulAssignment",
															"src": "21878:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21944:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21944:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21949:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21949:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21885:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "21885:58:9"
																},
																"nativeSrc": "21885:67:9",
																"nodeType": "YulFunctionCall",
																"src": "21885:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21878:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21878:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22050:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22050:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b",
																	"nativeSrc": "21961:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21961:88:9"
																},
																"nativeSrc": "21961:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21961:93:9"
															},
															"nativeSrc": "21961:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21961:93:9"
														},
														{
															"nativeSrc": "22063:19:9",
															"nodeType": "YulAssignment",
															"src": "22063:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22074:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22074:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22079:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22079:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22070:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22070:3:9"
																},
																"nativeSrc": "22070:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22070:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22063:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22063:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21722:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21856:3:9",
														"nodeType": "YulTypedName",
														"src": "21856:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21864:3:9",
														"nodeType": "YulTypedName",
														"src": "21864:3:9",
														"type": ""
													}
												],
												"src": "21722:366:9"
											},
											{
												"body": {
													"nativeSrc": "22265:248:9",
													"nodeType": "YulBlock",
													"src": "22265:248:9",
													"statements": [
														{
															"nativeSrc": "22275:26:9",
															"nodeType": "YulAssignment",
															"src": "22275:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22287:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22287:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22298:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22298:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22283:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22283:3:9"
																},
																"nativeSrc": "22283:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22283:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22275:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22275:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22322:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22322:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22333:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22333:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22318:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22318:3:9"
																		},
																		"nativeSrc": "22318:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22318:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22341:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22341:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22347:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22347:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22337:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22337:3:9"
																		},
																		"nativeSrc": "22337:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22337:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22311:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22311:6:9"
																},
																"nativeSrc": "22311:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22311:47:9"
															},
															"nativeSrc": "22311:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22311:47:9"
														},
														{
															"nativeSrc": "22367:139:9",
															"nodeType": "YulAssignment",
															"src": "22367:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22501:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22501:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22375:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22375:124:9"
																},
																"nativeSrc": "22375:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22375:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22367:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22367:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22094:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22245:9:9",
														"nodeType": "YulTypedName",
														"src": "22245:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22260:4:9",
														"nodeType": "YulTypedName",
														"src": "22260:4:9",
														"type": ""
													}
												],
												"src": "22094:419:9"
											},
											{
												"body": {
													"nativeSrc": "22625:114:9",
													"nodeType": "YulBlock",
													"src": "22625:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22647:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22647:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22655:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22655:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22643:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22643:3:9"
																		},
																		"nativeSrc": "22643:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22643:14:9"
																	},
																	{
																		"hexValue": "546f6b656e5374616b696e673a204e6f207265776172647320746f20636c6169",
																		"kind": "string",
																		"nativeSrc": "22659:34:9",
																		"nodeType": "YulLiteral",
																		"src": "22659:34:9",
																		"type": "",
																		"value": "TokenStaking: No rewards to clai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22636:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22636:6:9"
																},
																"nativeSrc": "22636:58:9",
																"nodeType": "YulFunctionCall",
																"src": "22636:58:9"
															},
															"nativeSrc": "22636:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "22636:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22715:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22715:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22723:2:9",
																				"nodeType": "YulLiteral",
																				"src": "22723:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22711:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22711:3:9"
																		},
																		"nativeSrc": "22711:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22711:15:9"
																	},
																	{
																		"hexValue": "6d",
																		"kind": "string",
																		"nativeSrc": "22728:3:9",
																		"nodeType": "YulLiteral",
																		"src": "22728:3:9",
																		"type": "",
																		"value": "m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22704:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22704:6:9"
																},
																"nativeSrc": "22704:28:9",
																"nodeType": "YulFunctionCall",
																"src": "22704:28:9"
															},
															"nativeSrc": "22704:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "22704:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af",
												"nativeSrc": "22519:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22617:6:9",
														"nodeType": "YulTypedName",
														"src": "22617:6:9",
														"type": ""
													}
												],
												"src": "22519:220:9"
											},
											{
												"body": {
													"nativeSrc": "22891:220:9",
													"nodeType": "YulBlock",
													"src": "22891:220:9",
													"statements": [
														{
															"nativeSrc": "22901:74:9",
															"nodeType": "YulAssignment",
															"src": "22901:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22967:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22967:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22972:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22972:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22908:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "22908:58:9"
																},
																"nativeSrc": "22908:67:9",
																"nodeType": "YulFunctionCall",
																"src": "22908:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22901:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22901:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23073:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23073:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af",
																	"nativeSrc": "22984:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "22984:88:9"
																},
																"nativeSrc": "22984:93:9",
																"nodeType": "YulFunctionCall",
																"src": "22984:93:9"
															},
															"nativeSrc": "22984:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "22984:93:9"
														},
														{
															"nativeSrc": "23086:19:9",
															"nodeType": "YulAssignment",
															"src": "23086:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23097:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23097:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23102:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23102:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23093:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23093:3:9"
																},
																"nativeSrc": "23093:12:9",
																"nodeType": "YulFunctionCall",
																"src": "23093:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23086:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23086:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22745:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22879:3:9",
														"nodeType": "YulTypedName",
														"src": "22879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22887:3:9",
														"nodeType": "YulTypedName",
														"src": "22887:3:9",
														"type": ""
													}
												],
												"src": "22745:366:9"
											},
											{
												"body": {
													"nativeSrc": "23288:248:9",
													"nodeType": "YulBlock",
													"src": "23288:248:9",
													"statements": [
														{
															"nativeSrc": "23298:26:9",
															"nodeType": "YulAssignment",
															"src": "23298:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23310:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23310:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23306:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23306:3:9"
																},
																"nativeSrc": "23306:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23306:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23298:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23298:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23345:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23345:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23356:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23356:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23341:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23341:3:9"
																		},
																		"nativeSrc": "23341:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23341:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23364:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23364:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23370:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23370:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23360:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23360:3:9"
																		},
																		"nativeSrc": "23360:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23360:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23334:6:9"
																},
																"nativeSrc": "23334:47:9",
																"nodeType": "YulFunctionCall",
																"src": "23334:47:9"
															},
															"nativeSrc": "23334:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "23334:47:9"
														},
														{
															"nativeSrc": "23390:139:9",
															"nodeType": "YulAssignment",
															"src": "23390:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23524:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23524:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23398:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23398:124:9"
																},
																"nativeSrc": "23398:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23398:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23390:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23390:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23117:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23268:9:9",
														"nodeType": "YulTypedName",
														"src": "23268:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23283:4:9",
														"nodeType": "YulTypedName",
														"src": "23283:4:9",
														"type": ""
													}
												],
												"src": "23117:419:9"
											},
											{
												"body": {
													"nativeSrc": "23648:119:9",
													"nodeType": "YulBlock",
													"src": "23648:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23670:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23678:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23678:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23666:3:9"
																		},
																		"nativeSrc": "23666:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23666:14:9"
																	},
																	{
																		"hexValue": "5374616b696e673a20416d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "23682:34:9",
																		"nodeType": "YulLiteral",
																		"src": "23682:34:9",
																		"type": "",
																		"value": "Staking: Amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23659:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23659:6:9"
																},
																"nativeSrc": "23659:58:9",
																"nodeType": "YulFunctionCall",
																"src": "23659:58:9"
															},
															"nativeSrc": "23659:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "23659:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23738:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23738:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23746:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23746:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23734:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23734:3:9"
																		},
																		"nativeSrc": "23734:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23734:15:9"
																	},
																	{
																		"hexValue": "7468616e2030",
																		"kind": "string",
																		"nativeSrc": "23751:8:9",
																		"nodeType": "YulLiteral",
																		"src": "23751:8:9",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23727:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23727:6:9"
																},
																"nativeSrc": "23727:33:9",
																"nodeType": "YulFunctionCall",
																"src": "23727:33:9"
															},
															"nativeSrc": "23727:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "23727:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b",
												"nativeSrc": "23542:225:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23640:6:9",
														"nodeType": "YulTypedName",
														"src": "23640:6:9",
														"type": ""
													}
												],
												"src": "23542:225:9"
											},
											{
												"body": {
													"nativeSrc": "23919:220:9",
													"nodeType": "YulBlock",
													"src": "23919:220:9",
													"statements": [
														{
															"nativeSrc": "23929:74:9",
															"nodeType": "YulAssignment",
															"src": "23929:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23995:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23995:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24000:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24000:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23936:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "23936:58:9"
																},
																"nativeSrc": "23936:67:9",
																"nodeType": "YulFunctionCall",
																"src": "23936:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23929:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23929:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24101:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24101:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b",
																	"nativeSrc": "24012:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24012:88:9"
																},
																"nativeSrc": "24012:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24012:93:9"
															},
															"nativeSrc": "24012:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24012:93:9"
														},
														{
															"nativeSrc": "24114:19:9",
															"nodeType": "YulAssignment",
															"src": "24114:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24125:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24125:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24130:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24130:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24121:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24121:3:9"
																},
																"nativeSrc": "24121:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24121:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24114:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24114:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23773:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23907:3:9",
														"nodeType": "YulTypedName",
														"src": "23907:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23915:3:9",
														"nodeType": "YulTypedName",
														"src": "23915:3:9",
														"type": ""
													}
												],
												"src": "23773:366:9"
											},
											{
												"body": {
													"nativeSrc": "24316:248:9",
													"nodeType": "YulBlock",
													"src": "24316:248:9",
													"statements": [
														{
															"nativeSrc": "24326:26:9",
															"nodeType": "YulAssignment",
															"src": "24326:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24338:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24338:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24349:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24349:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24334:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24334:3:9"
																},
																"nativeSrc": "24334:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24334:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24326:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24326:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24373:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24373:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24384:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24384:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24369:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24369:3:9"
																		},
																		"nativeSrc": "24369:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24369:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24392:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "24392:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24398:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24398:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24388:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24388:3:9"
																		},
																		"nativeSrc": "24388:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24388:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24362:6:9"
																},
																"nativeSrc": "24362:47:9",
																"nodeType": "YulFunctionCall",
																"src": "24362:47:9"
															},
															"nativeSrc": "24362:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "24362:47:9"
														},
														{
															"nativeSrc": "24418:139:9",
															"nodeType": "YulAssignment",
															"src": "24418:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24552:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "24552:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24426:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24426:124:9"
																},
																"nativeSrc": "24426:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24426:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24418:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24418:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24145:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24296:9:9",
														"nodeType": "YulTypedName",
														"src": "24296:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24311:4:9",
														"nodeType": "YulTypedName",
														"src": "24311:4:9",
														"type": ""
													}
												],
												"src": "24145:419:9"
											},
											{
												"body": {
													"nativeSrc": "24676:67:9",
													"nodeType": "YulBlock",
													"src": "24676:67:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24698:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "24698:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24706:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24706:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24694:3:9"
																		},
																		"nativeSrc": "24694:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24694:14:9"
																	},
																	{
																		"hexValue": "5374616b696e673a204e6f204e46542062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "24710:25:9",
																		"nodeType": "YulLiteral",
																		"src": "24710:25:9",
																		"type": "",
																		"value": "Staking: No NFT balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24687:6:9"
																},
																"nativeSrc": "24687:49:9",
																"nodeType": "YulFunctionCall",
																"src": "24687:49:9"
															},
															"nativeSrc": "24687:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "24687:49:9"
														}
													]
												},
												"name": "store_literal_in_memory_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc",
												"nativeSrc": "24570:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24668:6:9",
														"nodeType": "YulTypedName",
														"src": "24668:6:9",
														"type": ""
													}
												],
												"src": "24570:173:9"
											},
											{
												"body": {
													"nativeSrc": "24895:220:9",
													"nodeType": "YulBlock",
													"src": "24895:220:9",
													"statements": [
														{
															"nativeSrc": "24905:74:9",
															"nodeType": "YulAssignment",
															"src": "24905:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24971:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24971:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24976:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24976:2:9",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24912:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "24912:58:9"
																},
																"nativeSrc": "24912:67:9",
																"nodeType": "YulFunctionCall",
																"src": "24912:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24905:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24905:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25077:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25077:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc",
																	"nativeSrc": "24988:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24988:88:9"
																},
																"nativeSrc": "24988:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24988:93:9"
															},
															"nativeSrc": "24988:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24988:93:9"
														},
														{
															"nativeSrc": "25090:19:9",
															"nodeType": "YulAssignment",
															"src": "25090:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25101:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25101:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25106:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25106:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25097:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25097:3:9"
																},
																"nativeSrc": "25097:12:9",
																"nodeType": "YulFunctionCall",
																"src": "25097:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25090:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25090:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24749:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24883:3:9",
														"nodeType": "YulTypedName",
														"src": "24883:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24891:3:9",
														"nodeType": "YulTypedName",
														"src": "24891:3:9",
														"type": ""
													}
												],
												"src": "24749:366:9"
											},
											{
												"body": {
													"nativeSrc": "25292:248:9",
													"nodeType": "YulBlock",
													"src": "25292:248:9",
													"statements": [
														{
															"nativeSrc": "25302:26:9",
															"nodeType": "YulAssignment",
															"src": "25302:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25314:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "25314:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25325:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25325:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25310:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25310:3:9"
																},
																"nativeSrc": "25310:18:9",
																"nodeType": "YulFunctionCall",
																"src": "25310:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25302:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25302:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25349:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25349:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25360:1:9",
																				"nodeType": "YulLiteral",
																				"src": "25360:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25345:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25345:3:9"
																		},
																		"nativeSrc": "25345:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25345:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25368:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "25368:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25374:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25374:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25364:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25364:3:9"
																		},
																		"nativeSrc": "25364:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25364:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25338:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25338:6:9"
																},
																"nativeSrc": "25338:47:9",
																"nodeType": "YulFunctionCall",
																"src": "25338:47:9"
															},
															"nativeSrc": "25338:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "25338:47:9"
														},
														{
															"nativeSrc": "25394:139:9",
															"nodeType": "YulAssignment",
															"src": "25394:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25528:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "25528:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25402:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "25402:124:9"
																},
																"nativeSrc": "25402:131:9",
																"nodeType": "YulFunctionCall",
																"src": "25402:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25394:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25394:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25121:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25272:9:9",
														"nodeType": "YulTypedName",
														"src": "25272:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25287:4:9",
														"nodeType": "YulTypedName",
														"src": "25287:4:9",
														"type": ""
													}
												],
												"src": "25121:419:9"
											},
											{
												"body": {
													"nativeSrc": "25652:68:9",
													"nodeType": "YulBlock",
													"src": "25652:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25674:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "25674:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25682:1:9",
																				"nodeType": "YulLiteral",
																				"src": "25682:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25670:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25670:3:9"
																		},
																		"nativeSrc": "25670:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25670:14:9"
																	},
																	{
																		"hexValue": "5374616b696e673a20417070726f76616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "25686:26:9",
																		"nodeType": "YulLiteral",
																		"src": "25686:26:9",
																		"type": "",
																		"value": "Staking: Approval failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25663:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25663:6:9"
																},
																"nativeSrc": "25663:50:9",
																"nodeType": "YulFunctionCall",
																"src": "25663:50:9"
															},
															"nativeSrc": "25663:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "25663:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db",
												"nativeSrc": "25546:174:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25644:6:9",
														"nodeType": "YulTypedName",
														"src": "25644:6:9",
														"type": ""
													}
												],
												"src": "25546:174:9"
											},
											{
												"body": {
													"nativeSrc": "25872:220:9",
													"nodeType": "YulBlock",
													"src": "25872:220:9",
													"statements": [
														{
															"nativeSrc": "25882:74:9",
															"nodeType": "YulAssignment",
															"src": "25882:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25948:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25948:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25953:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25953:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25889:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "25889:58:9"
																},
																"nativeSrc": "25889:67:9",
																"nodeType": "YulFunctionCall",
																"src": "25889:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25882:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25882:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26054:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "26054:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db",
																	"nativeSrc": "25965:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "25965:88:9"
																},
																"nativeSrc": "25965:93:9",
																"nodeType": "YulFunctionCall",
																"src": "25965:93:9"
															},
															"nativeSrc": "25965:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "25965:93:9"
														},
														{
															"nativeSrc": "26067:19:9",
															"nodeType": "YulAssignment",
															"src": "26067:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26078:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "26078:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26083:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26083:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26074:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26074:3:9"
																},
																"nativeSrc": "26074:12:9",
																"nodeType": "YulFunctionCall",
																"src": "26074:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26067:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26067:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25726:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25860:3:9",
														"nodeType": "YulTypedName",
														"src": "25860:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25868:3:9",
														"nodeType": "YulTypedName",
														"src": "25868:3:9",
														"type": ""
													}
												],
												"src": "25726:366:9"
											},
											{
												"body": {
													"nativeSrc": "26269:248:9",
													"nodeType": "YulBlock",
													"src": "26269:248:9",
													"statements": [
														{
															"nativeSrc": "26279:26:9",
															"nodeType": "YulAssignment",
															"src": "26279:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26291:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "26291:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26302:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26302:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26287:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26287:3:9"
																},
																"nativeSrc": "26287:18:9",
																"nodeType": "YulFunctionCall",
																"src": "26287:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26279:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "26279:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26326:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26326:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26337:1:9",
																				"nodeType": "YulLiteral",
																				"src": "26337:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26322:3:9"
																		},
																		"nativeSrc": "26322:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26322:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26345:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "26345:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26351:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26351:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26341:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26341:3:9"
																		},
																		"nativeSrc": "26341:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26341:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "26315:6:9"
																},
																"nativeSrc": "26315:47:9",
																"nodeType": "YulFunctionCall",
																"src": "26315:47:9"
															},
															"nativeSrc": "26315:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "26315:47:9"
														},
														{
															"nativeSrc": "26371:139:9",
															"nodeType": "YulAssignment",
															"src": "26371:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26505:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "26505:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26379:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "26379:124:9"
																},
																"nativeSrc": "26379:131:9",
																"nodeType": "YulFunctionCall",
																"src": "26379:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26371:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "26371:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26098:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26249:9:9",
														"nodeType": "YulTypedName",
														"src": "26249:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26264:4:9",
														"nodeType": "YulTypedName",
														"src": "26264:4:9",
														"type": ""
													}
												],
												"src": "26098:419:9"
											},
											{
												"body": {
													"nativeSrc": "26677:288:9",
													"nodeType": "YulBlock",
													"src": "26677:288:9",
													"statements": [
														{
															"nativeSrc": "26687:26:9",
															"nodeType": "YulAssignment",
															"src": "26687:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26699:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "26699:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26710:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26710:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26695:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26695:3:9"
																},
																"nativeSrc": "26695:18:9",
																"nodeType": "YulFunctionCall",
																"src": "26695:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26687:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "26687:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26767:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "26767:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26780:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26780:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26791:1:9",
																				"nodeType": "YulLiteral",
																				"src": "26791:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26776:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26776:3:9"
																		},
																		"nativeSrc": "26776:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26776:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26723:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "26723:43:9"
																},
																"nativeSrc": "26723:71:9",
																"nodeType": "YulFunctionCall",
																"src": "26723:71:9"
															},
															"nativeSrc": "26723:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "26723:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26848:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "26848:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26861:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26861:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26872:2:9",
																				"nodeType": "YulLiteral",
																				"src": "26872:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26857:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26857:3:9"
																		},
																		"nativeSrc": "26857:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26857:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26804:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "26804:43:9"
																},
																"nativeSrc": "26804:72:9",
																"nodeType": "YulFunctionCall",
																"src": "26804:72:9"
															},
															"nativeSrc": "26804:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "26804:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26930:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "26930:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26943:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26943:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26954:2:9",
																				"nodeType": "YulLiteral",
																				"src": "26954:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26939:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26939:3:9"
																		},
																		"nativeSrc": "26939:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26939:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26886:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "26886:43:9"
																},
																"nativeSrc": "26886:72:9",
																"nodeType": "YulFunctionCall",
																"src": "26886:72:9"
															},
															"nativeSrc": "26886:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "26886:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "26523:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26633:9:9",
														"nodeType": "YulTypedName",
														"src": "26633:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26645:6:9",
														"nodeType": "YulTypedName",
														"src": "26645:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26653:6:9",
														"nodeType": "YulTypedName",
														"src": "26653:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26661:6:9",
														"nodeType": "YulTypedName",
														"src": "26661:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26672:4:9",
														"nodeType": "YulTypedName",
														"src": "26672:4:9",
														"type": ""
													}
												],
												"src": "26523:442:9"
											},
											{
												"body": {
													"nativeSrc": "27077:74:9",
													"nodeType": "YulBlock",
													"src": "27077:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27099:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "27099:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27107:1:9",
																				"nodeType": "YulLiteral",
																				"src": "27107:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27095:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "27095:3:9"
																		},
																		"nativeSrc": "27095:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "27095:14:9"
																	},
																	{
																		"hexValue": "5374616b696e673a20546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "27111:32:9",
																		"nodeType": "YulLiteral",
																		"src": "27111:32:9",
																		"type": "",
																		"value": "Staking: Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27088:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27088:6:9"
																},
																"nativeSrc": "27088:56:9",
																"nodeType": "YulFunctionCall",
																"src": "27088:56:9"
															},
															"nativeSrc": "27088:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "27088:56:9"
														}
													]
												},
												"name": "store_literal_in_memory_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9",
												"nativeSrc": "26971:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27069:6:9",
														"nodeType": "YulTypedName",
														"src": "27069:6:9",
														"type": ""
													}
												],
												"src": "26971:180:9"
											},
											{
												"body": {
													"nativeSrc": "27303:220:9",
													"nodeType": "YulBlock",
													"src": "27303:220:9",
													"statements": [
														{
															"nativeSrc": "27313:74:9",
															"nodeType": "YulAssignment",
															"src": "27313:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27379:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "27379:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27384:2:9",
																		"nodeType": "YulLiteral",
																		"src": "27384:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27320:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "27320:58:9"
																},
																"nativeSrc": "27320:67:9",
																"nodeType": "YulFunctionCall",
																"src": "27320:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27313:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "27313:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27485:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "27485:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9",
																	"nativeSrc": "27396:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "27396:88:9"
																},
																"nativeSrc": "27396:93:9",
																"nodeType": "YulFunctionCall",
																"src": "27396:93:9"
															},
															"nativeSrc": "27396:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "27396:93:9"
														},
														{
															"nativeSrc": "27498:19:9",
															"nodeType": "YulAssignment",
															"src": "27498:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27509:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "27509:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "27514:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "27505:3:9"
																},
																"nativeSrc": "27505:12:9",
																"nodeType": "YulFunctionCall",
																"src": "27505:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27498:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "27498:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27157:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27291:3:9",
														"nodeType": "YulTypedName",
														"src": "27291:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27299:3:9",
														"nodeType": "YulTypedName",
														"src": "27299:3:9",
														"type": ""
													}
												],
												"src": "27157:366:9"
											},
											{
												"body": {
													"nativeSrc": "27700:248:9",
													"nodeType": "YulBlock",
													"src": "27700:248:9",
													"statements": [
														{
															"nativeSrc": "27710:26:9",
															"nodeType": "YulAssignment",
															"src": "27710:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27722:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "27722:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27733:2:9",
																		"nodeType": "YulLiteral",
																		"src": "27733:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27718:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "27718:3:9"
																},
																"nativeSrc": "27718:18:9",
																"nodeType": "YulFunctionCall",
																"src": "27718:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27710:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "27710:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27757:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "27757:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27768:1:9",
																				"nodeType": "YulLiteral",
																				"src": "27768:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27753:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "27753:3:9"
																		},
																		"nativeSrc": "27753:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "27753:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27776:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "27776:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27782:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "27782:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27772:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "27772:3:9"
																		},
																		"nativeSrc": "27772:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "27772:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27746:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27746:6:9"
																},
																"nativeSrc": "27746:47:9",
																"nodeType": "YulFunctionCall",
																"src": "27746:47:9"
															},
															"nativeSrc": "27746:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "27746:47:9"
														},
														{
															"nativeSrc": "27802:139:9",
															"nodeType": "YulAssignment",
															"src": "27802:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27936:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "27936:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27810:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "27810:124:9"
																},
																"nativeSrc": "27810:131:9",
																"nodeType": "YulFunctionCall",
																"src": "27810:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27802:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "27802:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27529:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27680:9:9",
														"nodeType": "YulTypedName",
														"src": "27680:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27695:4:9",
														"nodeType": "YulTypedName",
														"src": "27695:4:9",
														"type": ""
													}
												],
												"src": "27529:419:9"
											},
											{
												"body": {
													"nativeSrc": "28060:61:9",
													"nodeType": "YulBlock",
													"src": "28060:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28082:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "28082:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28090:1:9",
																				"nodeType": "YulLiteral",
																				"src": "28090:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28078:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28078:3:9"
																		},
																		"nativeSrc": "28078:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28078:14:9"
																	},
																	{
																		"hexValue": "5374616b65206578636565647320636170",
																		"kind": "string",
																		"nativeSrc": "28094:19:9",
																		"nodeType": "YulLiteral",
																		"src": "28094:19:9",
																		"type": "",
																		"value": "Stake exceeds cap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28071:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "28071:6:9"
																},
																"nativeSrc": "28071:43:9",
																"nodeType": "YulFunctionCall",
																"src": "28071:43:9"
															},
															"nativeSrc": "28071:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "28071:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5",
												"nativeSrc": "27954:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28052:6:9",
														"nodeType": "YulTypedName",
														"src": "28052:6:9",
														"type": ""
													}
												],
												"src": "27954:167:9"
											},
											{
												"body": {
													"nativeSrc": "28273:220:9",
													"nodeType": "YulBlock",
													"src": "28273:220:9",
													"statements": [
														{
															"nativeSrc": "28283:74:9",
															"nodeType": "YulAssignment",
															"src": "28283:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28349:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "28349:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28354:2:9",
																		"nodeType": "YulLiteral",
																		"src": "28354:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28290:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "28290:58:9"
																},
																"nativeSrc": "28290:67:9",
																"nodeType": "YulFunctionCall",
																"src": "28290:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28283:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28283:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28455:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "28455:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5",
																	"nativeSrc": "28366:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "28366:88:9"
																},
																"nativeSrc": "28366:93:9",
																"nodeType": "YulFunctionCall",
																"src": "28366:93:9"
															},
															"nativeSrc": "28366:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "28366:93:9"
														},
														{
															"nativeSrc": "28468:19:9",
															"nodeType": "YulAssignment",
															"src": "28468:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28479:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "28479:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28484:2:9",
																		"nodeType": "YulLiteral",
																		"src": "28484:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28475:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28475:3:9"
																},
																"nativeSrc": "28475:12:9",
																"nodeType": "YulFunctionCall",
																"src": "28475:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28468:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28468:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28127:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28261:3:9",
														"nodeType": "YulTypedName",
														"src": "28261:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28269:3:9",
														"nodeType": "YulTypedName",
														"src": "28269:3:9",
														"type": ""
													}
												],
												"src": "28127:366:9"
											},
											{
												"body": {
													"nativeSrc": "28670:248:9",
													"nodeType": "YulBlock",
													"src": "28670:248:9",
													"statements": [
														{
															"nativeSrc": "28680:26:9",
															"nodeType": "YulAssignment",
															"src": "28680:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28692:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "28692:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28703:2:9",
																		"nodeType": "YulLiteral",
																		"src": "28703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28688:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28688:3:9"
																},
																"nativeSrc": "28688:18:9",
																"nodeType": "YulFunctionCall",
																"src": "28688:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28680:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "28680:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28727:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "28727:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28738:1:9",
																				"nodeType": "YulLiteral",
																				"src": "28738:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28723:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28723:3:9"
																		},
																		"nativeSrc": "28723:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28723:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28746:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "28746:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28752:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "28752:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28742:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28742:3:9"
																		},
																		"nativeSrc": "28742:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28742:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28716:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "28716:6:9"
																},
																"nativeSrc": "28716:47:9",
																"nodeType": "YulFunctionCall",
																"src": "28716:47:9"
															},
															"nativeSrc": "28716:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "28716:47:9"
														},
														{
															"nativeSrc": "28772:139:9",
															"nodeType": "YulAssignment",
															"src": "28772:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28906:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "28906:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28780:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "28780:124:9"
																},
																"nativeSrc": "28780:131:9",
																"nodeType": "YulFunctionCall",
																"src": "28780:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28772:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "28772:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28499:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28650:9:9",
														"nodeType": "YulTypedName",
														"src": "28650:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28665:4:9",
														"nodeType": "YulTypedName",
														"src": "28665:4:9",
														"type": ""
													}
												],
												"src": "28499:419:9"
											},
											{
												"body": {
													"nativeSrc": "29050:206:9",
													"nodeType": "YulBlock",
													"src": "29050:206:9",
													"statements": [
														{
															"nativeSrc": "29060:26:9",
															"nodeType": "YulAssignment",
															"src": "29060:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29072:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "29072:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29083:2:9",
																		"nodeType": "YulLiteral",
																		"src": "29083:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29068:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "29068:3:9"
																},
																"nativeSrc": "29068:18:9",
																"nodeType": "YulFunctionCall",
																"src": "29068:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29060:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "29060:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29140:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "29140:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29153:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "29153:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29164:1:9",
																				"nodeType": "YulLiteral",
																				"src": "29164:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29149:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "29149:3:9"
																		},
																		"nativeSrc": "29149:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "29149:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29096:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "29096:43:9"
																},
																"nativeSrc": "29096:71:9",
																"nodeType": "YulFunctionCall",
																"src": "29096:71:9"
															},
															"nativeSrc": "29096:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "29096:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29221:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "29221:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29234:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "29234:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29245:2:9",
																				"nodeType": "YulLiteral",
																				"src": "29245:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29230:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "29230:3:9"
																		},
																		"nativeSrc": "29230:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "29230:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "29177:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "29177:43:9"
																},
																"nativeSrc": "29177:72:9",
																"nodeType": "YulFunctionCall",
																"src": "29177:72:9"
															},
															"nativeSrc": "29177:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "29177:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "28924:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29014:9:9",
														"nodeType": "YulTypedName",
														"src": "29014:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29026:6:9",
														"nodeType": "YulTypedName",
														"src": "29026:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29034:6:9",
														"nodeType": "YulTypedName",
														"src": "29034:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29045:4:9",
														"nodeType": "YulTypedName",
														"src": "29045:4:9",
														"type": ""
													}
												],
												"src": "28924:332:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IMintableToken_$739(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMintableToken_$739(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMintableToken_$739(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMintableToken_$739(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMintableToken_$739(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMintableToken_$739(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMintableToken_$739(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$521(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$521(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$521(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$521(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$521(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$521t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$521(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$638_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$638_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$638_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$638_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_nftIface_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_nftIface_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_nftIface_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_nftIface_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_nftIface_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC721_$638(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$638(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$638(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$638(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$638(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$638(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$638(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IMintableToken_$739_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMintableToken_$739_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMintableToken_$739_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMintableToken_$739__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMintableToken_$739_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328(memPtr) {\n\n        mstore(add(memPtr, 0), \"No NFT Level\")\n\n    }\n\n    function abi_encode_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward rate must be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenStaking: Amount must be gre\")\n\n        mstore(add(memPtr, 32), \"ater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenStaking: Insufficient stake\")\n\n        mstore(add(memPtr, 32), \"d balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenStaking: Claim interval not\")\n\n        mstore(add(memPtr, 32), \" met\")\n\n    }\n\n    function abi_encode_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenStaking: Unstake transfer f\")\n\n        mstore(add(memPtr, 32), \"ailed\")\n\n    }\n\n    function abi_encode_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenStaking: No staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenStaking: No rewards to clai\")\n\n        mstore(add(memPtr, 32), \"m\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: Amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: No NFT balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: Approval failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake exceeds cap\")\n\n    }\n\n    function abi_encode_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2D57ADF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2D57ADF EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xF56E9C66 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xFDF553CF EQ PUSH2 0x5D7 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xB0AD08DF EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xB2F196F6 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x565 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xA218141B EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xA56BEF5D EQ PUSH2 0x4F1 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x817C8966 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x8D580B9F EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x90870492 EQ PUSH2 0x467 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2E97766D GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x41F431FD GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x41F431FD EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x48132F48 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x51557289 EQ PUSH2 0x3DD JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2E97766D EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x37D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x144FA6D7 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x30B JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x97AAD10 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xB433A12 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x834 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH2 0x8F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E5 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F9 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xC23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x533 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C1 PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DF PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x669 JUMPI POP PUSH2 0x668 DUP3 PUSH2 0xE0D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x67B DUP4 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x692 JUMPI PUSH1 0xA PUSH0 ADD SLOAD SWAP1 POP PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x6A7 JUMPI PUSH1 0xA PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x6BC JUMPI PUSH1 0xA PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD NUMBER PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x5 SLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AD PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x7A8 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x7B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83C PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x845 DUP2 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x84D PUSH2 0x116B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 NUMBER SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x865 DUP3 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x86E DUP2 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x878 DUP4 DUP4 PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x886 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F4 DUP3 DUP3 PUSH2 0x1271 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x901 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x911 PUSH2 0x90C PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x919 PUSH2 0x116B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x923 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x954 PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0x94F PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x95C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST POP PUSH2 0x9E0 PUSH2 0x116B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xA43 PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0xA3E PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xA4B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xA97 PUSH2 0x116B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1AB0D49E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x8C342C7ACA7F35847406E6353E35C5762132FA3E958179931981D120AF75DFB2 DUP2 JUMP JUMPDEST PUSH2 0xC2B PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0x157E JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x116B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD7 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xCD2 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xCDF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCF9 DUP3 PUSH2 0x818 JUMP JUMPDEST PUSH2 0xD02 DUP2 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xD0C DUP4 DUP4 PUSH2 0x1271 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD43 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xD3E PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD4B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD86 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xD81 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x2253 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 PUSH2 0xED8 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 GT PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFF PUSH2 0xFFA PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1011 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x1075 PUSH2 0xE76 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1093 SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x1112 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1109 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111A PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP4 PUSH1 0x40 MLOAD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1180 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x1989 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1193 DUP4 DUP4 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x1267 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1204 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x126B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x127C DUP4 DUP4 PUSH2 0xB90 JUMP JUMPDEST ISZERO PUSH2 0x1350 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x12ED PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1354 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D6 SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x13F1 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142A SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x143D DUP4 PUSH2 0x670 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP1 PUSH2 0x2581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x149B SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x449A52F8 DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FE SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1515 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1527 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2D5429EFDECA7741A8CD94067B18D988BC4E5F1D5B8272C37B7BFC31E9BFA32C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x15C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B7 SWAP1 PUSH2 0x260F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1606 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST GT PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP1 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP3 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1719 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x173D SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1773 SWAP1 PUSH2 0x26DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x17C1 PUSH2 0xE76 JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x1860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1857 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 PUSH2 0x186C PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18B9 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH9 0x56BC75E2D63100000 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x190F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1906 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1920 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP NUMBER DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1938 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1993 DUP3 DUP3 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x19D6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CD SWAP3 SWAP2 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A12 DUP2 PUSH2 0x19DE JUMP JUMPDEST DUP2 EQ PUSH2 0x1A1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A2D DUP2 PUSH2 0x1A09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A55 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A72 DUP2 PUSH2 0x1A5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8B PUSH0 DUP4 ADD DUP5 PUSH2 0x1A69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABA DUP3 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE5 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0D DUP5 DUP3 DUP6 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B28 DUP2 PUSH2 0x1B16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B41 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B51 DUP3 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B61 DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B7C DUP2 PUSH2 0x1B58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BC0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x1BCD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE6 DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C01 DUP2 PUSH2 0x1BDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C29 DUP5 DUP3 DUP6 ADD PUSH2 0x1BF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C3B DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C63 DUP2 PUSH2 0x1B16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7E DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C99 JUMPI PUSH2 0x1C98 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA6 DUP5 DUP3 DUP6 ADD PUSH2 0x1C70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x1CC4 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD2 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE3 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF7 DUP3 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1CED JUMP JUMPDEST DUP2 EQ PUSH2 0x1D11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D22 DUP2 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D3F JUMPI PUSH2 0x1D3E PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D4C DUP7 DUP3 DUP8 ADD PUSH2 0x1D14 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D5D DUP7 DUP3 DUP8 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D6E DUP7 DUP3 DUP8 ADD PUSH2 0x1C70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D9B PUSH2 0x1D96 PUSH2 0x1D91 DUP5 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAC DUP3 PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBD DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DCD DUP2 PUSH2 0x1DB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF6 DUP3 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x1DEC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E21 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E3C PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E4A DUP6 DUP3 DUP7 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5B DUP6 DUP3 DUP7 ADD PUSH2 0x1C70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6F DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7F DUP2 PUSH2 0x1E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E98 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA8 DUP3 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB8 DUP2 PUSH2 0x1E9E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED3 DUP2 PUSH2 0x1EAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EEE JUMPI PUSH2 0x1EED PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EFB DUP5 DUP3 DUP6 ADD PUSH2 0x1EC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0E DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1F04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F37 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F50 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x1F5D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x1F6A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204E4654204C6576656C0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB6 PUSH1 0xC DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC1 DUP3 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE3 DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2021 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x202C DUP4 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2044 JUMPI PUSH2 0x2043 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2054 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x205F DUP4 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2087 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x2092 DUP4 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20A0 DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x20ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1A5E JUMP JUMPDEST DUP2 EQ PUSH2 0x2107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2118 DUP2 PUSH2 0x20F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2133 JUMPI PUSH2 0x2132 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2140 DUP5 DUP3 DUP6 ADD PUSH2 0x210A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215C PUSH0 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2170 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x218B JUMPI PUSH2 0x218A PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2198 DUP5 DUP3 DUP6 ADD PUSH2 0x2162 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172642072617465206D75737420626520706F73697469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D5 PUSH1 0x1C DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E0 DUP3 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2202 DUP2 PUSH2 0x21C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223D PUSH1 0x1F DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2248 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x226A DUP2 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20416D6F756E74206D75737420626520677265 PUSH0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22CB PUSH1 0x2B DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x22D6 DUP3 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22F8 DUP2 PUSH2 0x22BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20496E73756666696369656E74207374616B65 PUSH0 DUP3 ADD MSTORE PUSH32 0x642062616C616E63650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2359 PUSH1 0x29 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2364 DUP3 PUSH2 0x22FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2386 DUP2 PUSH2 0x234D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20436C61696D20696E74657276616C206E6F74 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D657400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E7 PUSH1 0x24 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F2 DUP3 PUSH2 0x238D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2414 DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A20556E7374616B65207472616E736665722066 PUSH0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2475 PUSH1 0x25 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2480 DUP3 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A2 DUP2 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A204E6F207374616B65642062616C616E636500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DD PUSH1 0x1F DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E8 DUP3 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250A DUP2 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5374616B696E673A204E6F207265776172647320746F20636C6169 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x256B PUSH1 0x21 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2576 DUP3 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2598 DUP2 PUSH2 0x255F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20416D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F9 PUSH1 0x26 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2604 DUP3 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2626 DUP2 PUSH2 0x25ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A204E6F204E46542062616C616E6365000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2661 PUSH1 0x17 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x266C DUP3 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x268E DUP2 PUSH2 0x2655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20417070726F76616C206661696C65640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26C9 PUSH1 0x18 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D4 DUP3 PUSH2 0x2695 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F6 DUP2 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2710 PUSH0 DUP4 ADD DUP7 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x271D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x272A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20546F6B656E207472616E73666572206661696C65640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2766 PUSH1 0x1E DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2771 DUP3 PUSH2 0x2732 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2793 DUP2 PUSH2 0x275A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206578636565647320636170000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE PUSH1 0x11 DUP4 PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP PUSH2 0x27D9 DUP3 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27FB DUP2 PUSH2 0x27C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2815 PUSH0 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x2822 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xEE125C14226D1E1A099DD96A PUSH9 0xB0A5D518E378148EA4 0xD3 PUSH15 0x67FA71451B6E3864736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "953:9557:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7024:665:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1600:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1528:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8859:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2596:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:90:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9388:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4365:88:8;;;:::i;:::-;;9852:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1107:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10333:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1798:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1447:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7839:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1738:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1281:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1357:30:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1856:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3877:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8115:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8553:134:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9151:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1016:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2449:35;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;7024:665:8:-;7095:7;7114:13;7130:17;7139:7;7130:8;:17::i;:::-;7114:33;;7157:24;7205:1;7196:5;:10;7192:297;;7241:11;:16;;;7222:35;;7192:297;;;7287:1;7278:5;:10;7274:215;;7323:11;:18;;;7304:37;;7274:215;;;7371:1;7362:5;:10;7358:131;;7407:11;:18;;;7388:37;;7358:131;;;7456:22;;;;;;;;;;:::i;:::-;;;;;;;;7358:131;7274:215;7192:297;7499:21;7538:8;:17;7547:7;7538:17;;;;;;;;;;;;;;;:32;;;7523:12;:47;;;;:::i;:::-;7499:71;;7580:15;7640:13;7620:16;7599:18;;:37;;;;:::i;:::-;7598:55;;;;:::i;:::-;7580:73;;7675:7;7668:14;;;;;;7024:665;;;:::o;1600:28::-;;;;:::o;1528:27::-;;;;:::o;8859:135::-;8930:29;1831:19;8946:12;:10;:12::i;:::-;8930:7;:29::i;:::-;8922:38;;;;;;8978:9;8970:5;;:17;;;;;;;;;;;;;;;;;;8859:135;:::o;2596:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4143:90:8:-;2261:21:2;:19;:21::i;:::-;4209:17:8::1;4218:7;4209:8;:17::i;:::-;2303:20:2::0;:18;:20::i;:::-;4143:90:8;:::o;9388:110::-;9431:7;9450;9460:12;9450:22;;9489:2;9482:9;;;9388:110;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;4365:88:8:-;2261:21:2;:19;:21::i;:::-;4419:27:8::1;4433:12;:10;:12::i;:::-;4419:13;:27::i;:::-;2303:20:2::0;:18;:20::i;:::-;4365:88:8:o;9852:199::-;2261:21:2;:19;:21::i;:::-;9958:30:8::1;1772:20;9975:12;:10;:12::i;:::-;9958:7;:30::i;:::-;9950:39;;;::::0;::::1;;10007:6;10000:23;;;10024:5;10031:12;10000:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2303:20:2::0;:18;:20::i;:::-;9852:199:8;;;:::o;1107:18::-;;;;;;;;;;;;;:::o;10333:175::-;2261:21:2;:19;:21::i;:::-;10432:30:8::1;1772:20;10449:12;:10;:12::i;:::-;10432:7;:30::i;:::-;10424:39;;;::::0;::::1;;10473:5;:14;;:28;10488:12;10473:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2303:20:2::0;:18;:20::i;:::-;10333:175:8;;:::o;1798:52::-;1831:19;1798:52;:::o;1447:26::-;;;;:::o;7839:113::-;7892:7;7918:8;;;;;;;;;;;:21;;;7940:4;7918:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7911:34;;7839:113;;;:::o;1738:54::-;1772:20;1738:54;:::o;1281:33::-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1357:30:8:-;;;;:::o;1856:54::-;1890:20;1856:54;:::o;3877:86::-;2261:21:2;:19;:21::i;:::-;3941:15:8::1;3948:7;3941:6;:15::i;:::-;2303:20:2::0;:18;:20::i;:::-;3877:86:8;:::o;1201:24::-;;;;;;;;;;;;;:::o;8115:297::-;8230:1;8205:22;:26;8197:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8282:29;1831:19;8298:12;:10;:12::i;:::-;8282:7;:29::i;:::-;8274:38;;;;;;8343:22;8322:18;:43;;;;8393:12;8375:15;:30;;;;8115:297;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;8553:134:8:-;8620:29;1831:19;8636:12;:10;:12::i;:::-;8620:7;:29::i;:::-;8612:38;;;;;;8676:4;8660:13;:20;;;;8553:134;:::o;9151:128::-;9215:29;1831:19;9231:12;:10;:12::i;:::-;9215:7;:29::i;:::-;9207:38;;;;;;9261:11;9255:3;;:17;;;;;;;;;;;;;;;;;;9151:128;:::o;1016:27::-;;;;;;;;;;;;;:::o;2449:35::-;;;;;;;;;;;;;;;;;;;:::o;762:146:6:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5394:642:8:-;5448:21;5472:8;:22;5481:12;:10;:12::i;:::-;5472:22;;;;;;;;;;;;;;;5448:46;;5522:1;5512:7;:11;5504:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5611:7;5589:4;:18;;;:29;;5581:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5720:13;;5698:4;:19;;;:35;;;;:::i;:::-;5682:12;:51;;5674:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5785:27;5799:12;:10;:12::i;:::-;5785:13;:27::i;:::-;5845:7;5823:4;:18;;;:29;;;;;;;:::i;:::-;;;;;;;;5877:7;5862:11;;:22;;;;;;;:::i;:::-;;;;;;;;5903:5;;;;;;;;;;;:14;;;5918:12;:10;:12::i;:::-;5932:7;5903:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5895:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;6007:12;:10;:12::i;:::-;5998:31;;;6021:7;5998:31;;;;;;:::i;:::-;;;;;;;;5438:598;5394:642;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;6186:618:8:-;6244:21;6268:8;:16;6277:6;6268:16;;;;;;;;;;;;;;;6244:40;;6323:1;6302:4;:18;;;:22;6294:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6416:13;;6394:4;:19;;;:35;;;;:::i;:::-;6378:12;:51;;6370:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;6481:22;6506:31;6530:6;6506:23;:31::i;:::-;6481:56;;6572:1;6555:14;:18;6547:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6644:12;6622:4;:19;;:34;;;;6682:14;6666:12;;:30;;;;;;;:::i;:::-;;;;;;;;6707:5;;;;;;;;;;;:12;;;6720:6;6728:14;6707:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6774:6;6759:38;;;6782:14;6759:38;;;;;;:::i;:::-;;;;;;;;6234:570;;6186:618;:::o;4583:677::-;4653:1;4643:7;:11;4635:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4745:1;4715:3;;;;;;;;;;;:13;;;4729:12;:10;:12::i;:::-;4715:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;4707:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4793:5;;;;;;;;;;;:13;;;4815:4;4822:7;4793:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4785:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4877:5;;;;;;;;;;;:18;;;4896:12;:10;:12::i;:::-;4918:4;4925:7;4877:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4869:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4979:21;5003:8;:22;5012:12;:10;:12::i;:::-;5003:22;;;;;;;;;;;;;;;4979:46;;5058:7;5036:4;:18;;;:29;;;;;;;:::i;:::-;;;;;;;;5105:4;5083;:18;;;:26;;5075:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5157:7;5142:11;;:22;;;;;;;:::i;:::-;;;;;;;;5196:12;5174:4;:19;;:34;;;;5231:12;:10;:12::i;:::-;5224:29;;;5245:7;5224:29;;;;;;:::i;:::-;;;;;;;;4625:635;4583:677;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:9:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:118::-;2854:7;2883:24;2901:5;2883:24;:::i;:::-;2872:35;;2795:118;;;:::o;2919:166::-;3014:46;3054:5;3014:46;:::i;:::-;3007:5;3004:57;2994:85;;3075:1;3072;3065:12;2994:85;2919:166;:::o;3091:183::-;3159:5;3197:6;3184:20;3175:29;;3213:55;3262:5;3213:55;:::i;:::-;3091:183;;;;:::o;3280:373::-;3361:6;3410:2;3398:9;3389:7;3385:23;3381:32;3378:119;;;3416:79;;:::i;:::-;3378:119;3536:1;3561:75;3628:7;3619:6;3608:9;3604:22;3561:75;:::i;:::-;3551:85;;3507:139;3280:373;;;;:::o;3659:332::-;3780:4;3818:2;3807:9;3803:18;3795:26;;3831:71;3899:1;3888:9;3884:17;3875:6;3831:71;:::i;:::-;3912:72;3980:2;3969:9;3965:18;3956:6;3912:72;:::i;:::-;3659:332;;;;;:::o;3997:77::-;4034:7;4063:5;4052:16;;3997:77;;;:::o;4080:122::-;4153:24;4171:5;4153:24;:::i;:::-;4146:5;4143:35;4133:63;;4192:1;4189;4182:12;4133:63;4080:122;:::o;4208:139::-;4254:5;4292:6;4279:20;4270:29;;4308:33;4335:5;4308:33;:::i;:::-;4208:139;;;;:::o;4353:329::-;4412:6;4461:2;4449:9;4440:7;4436:23;4432:32;4429:119;;;4467:79;;:::i;:::-;4429:119;4587:1;4612:53;4657:7;4648:6;4637:9;4633:22;4612:53;:::i;:::-;4602:63;;4558:117;4353:329;;;;:::o;4688:118::-;4775:24;4793:5;4775:24;:::i;:::-;4770:3;4763:37;4688:118;;:::o;4812:222::-;4905:4;4943:2;4932:9;4928:18;4920:26;;4956:71;5024:1;5013:9;5009:17;5000:6;4956:71;:::i;:::-;4812:222;;;;:::o;5040:122::-;5113:24;5131:5;5113:24;:::i;:::-;5106:5;5103:35;5093:63;;5152:1;5149;5142:12;5093:63;5040:122;:::o;5168:139::-;5214:5;5252:6;5239:20;5230:29;;5268:33;5295:5;5268:33;:::i;:::-;5168:139;;;;:::o;5313:329::-;5372:6;5421:2;5409:9;5400:7;5396:23;5392:32;5389:119;;;5427:79;;:::i;:::-;5389:119;5547:1;5572:53;5617:7;5608:6;5597:9;5593:22;5572:53;:::i;:::-;5562:63;;5518:117;5313:329;;;;:::o;5648:474::-;5716:6;5724;5773:2;5761:9;5752:7;5748:23;5744:32;5741:119;;;5779:79;;:::i;:::-;5741:119;5899:1;5924:53;5969:7;5960:6;5949:9;5945:22;5924:53;:::i;:::-;5914:63;;5870:117;6026:2;6052:53;6097:7;6088:6;6077:9;6073:22;6052:53;:::i;:::-;6042:63;;5997:118;5648:474;;;;;:::o;6128:110::-;6179:7;6208:24;6226:5;6208:24;:::i;:::-;6197:35;;6128:110;;;:::o;6244:150::-;6331:38;6363:5;6331:38;:::i;:::-;6324:5;6321:49;6311:77;;6384:1;6381;6374:12;6311:77;6244:150;:::o;6400:167::-;6460:5;6498:6;6485:20;6476:29;;6514:47;6555:5;6514:47;:::i;:::-;6400:167;;;;:::o;6573:647::-;6664:6;6672;6680;6729:2;6717:9;6708:7;6704:23;6700:32;6697:119;;;6735:79;;:::i;:::-;6697:119;6855:1;6880:67;6939:7;6930:6;6919:9;6915:22;6880:67;:::i;:::-;6870:77;;6826:131;6996:2;7022:53;7067:7;7058:6;7047:9;7043:22;7022:53;:::i;:::-;7012:63;;6967:118;7124:2;7150:53;7195:7;7186:6;7175:9;7171:22;7150:53;:::i;:::-;7140:63;;7095:118;6573:647;;;;;:::o;7226:60::-;7254:3;7275:5;7268:12;;7226:60;;;:::o;7292:142::-;7342:9;7375:53;7393:34;7402:24;7420:5;7402:24;:::i;:::-;7393:34;:::i;:::-;7375:53;:::i;:::-;7362:66;;7292:142;;;:::o;7440:126::-;7490:9;7523:37;7554:5;7523:37;:::i;:::-;7510:50;;7440:126;;;:::o;7572:141::-;7637:9;7670:37;7701:5;7670:37;:::i;:::-;7657:50;;7572:141;;;:::o;7719:161::-;7821:52;7867:5;7821:52;:::i;:::-;7816:3;7809:65;7719:161;;:::o;7886:252::-;7994:4;8032:2;8021:9;8017:18;8009:26;;8045:86;8128:1;8117:9;8113:17;8104:6;8045:86;:::i;:::-;7886:252;;;;:::o;8144:104::-;8189:7;8218:24;8236:5;8218:24;:::i;:::-;8207:35;;8144:104;;;:::o;8254:138::-;8335:32;8361:5;8335:32;:::i;:::-;8328:5;8325:43;8315:71;;8382:1;8379;8372:12;8315:71;8254:138;:::o;8398:155::-;8452:5;8490:6;8477:20;8468:29;;8506:41;8541:5;8506:41;:::i;:::-;8398:155;;;;:::o;8559:490::-;8635:6;8643;8692:2;8680:9;8671:7;8667:23;8663:32;8660:119;;;8698:79;;:::i;:::-;8660:119;8818:1;8843:61;8896:7;8887:6;8876:9;8872:22;8843:61;:::i;:::-;8833:71;;8789:125;8953:2;8979:53;9024:7;9015:6;9004:9;9000:22;8979:53;:::i;:::-;8969:63;;8924:118;8559:490;;;;;:::o;9055:142::-;9121:9;9154:37;9185:5;9154:37;:::i;:::-;9141:50;;9055:142;;;:::o;9203:163::-;9306:53;9353:5;9306:53;:::i;:::-;9301:3;9294:66;9203:163;;:::o;9372:254::-;9481:4;9519:2;9508:9;9504:18;9496:26;;9532:87;9616:1;9605:9;9601:17;9592:6;9532:87;:::i;:::-;9372:254;;;;:::o;9632:111::-;9684:7;9713:24;9731:5;9713:24;:::i;:::-;9702:35;;9632:111;;;:::o;9749:152::-;9837:39;9870:5;9837:39;:::i;:::-;9830:5;9827:50;9817:78;;9891:1;9888;9881:12;9817:78;9749:152;:::o;9907:169::-;9968:5;10006:6;9993:20;9984:29;;10022:48;10064:5;10022:48;:::i;:::-;9907:169;;;;:::o;10082:359::-;10156:6;10205:2;10193:9;10184:7;10180:23;10176:32;10173:119;;;10211:79;;:::i;:::-;10173:119;10331:1;10356:68;10416:7;10407:6;10396:9;10392:22;10356:68;:::i;:::-;10346:78;;10302:132;10082:359;;;;:::o;10447:148::-;10519:9;10552:37;10583:5;10552:37;:::i;:::-;10539:50;;10447:148;;;:::o;10601:175::-;10710:59;10763:5;10710:59;:::i;:::-;10705:3;10698:72;10601:175;;:::o;10782:266::-;10897:4;10935:2;10924:9;10920:18;10912:26;;10948:93;11038:1;11027:9;11023:17;11014:6;10948:93;:::i;:::-;10782:266;;;;:::o;11054:442::-;11203:4;11241:2;11230:9;11226:18;11218:26;;11254:71;11322:1;11311:9;11307:17;11298:6;11254:71;:::i;:::-;11335:72;11403:2;11392:9;11388:18;11379:6;11335:72;:::i;:::-;11417;11485:2;11474:9;11470:18;11461:6;11417:72;:::i;:::-;11054:442;;;;;;:::o;11502:169::-;11586:11;11620:6;11615:3;11608:19;11660:4;11655:3;11651:14;11636:29;;11502:169;;;;:::o;11677:162::-;11817:14;11813:1;11805:6;11801:14;11794:38;11677:162;:::o;11845:366::-;11987:3;12008:67;12072:2;12067:3;12008:67;:::i;:::-;12001:74;;12084:93;12173:3;12084:93;:::i;:::-;12202:2;12197:3;12193:12;12186:19;;11845:366;;;:::o;12217:419::-;12383:4;12421:2;12410:9;12406:18;12398:26;;12470:9;12464:4;12460:20;12456:1;12445:9;12441:17;12434:47;12498:131;12624:4;12498:131;:::i;:::-;12490:139;;12217:419;;;:::o;12642:180::-;12690:77;12687:1;12680:88;12787:4;12784:1;12777:15;12811:4;12808:1;12801:15;12828:194;12868:4;12888:20;12906:1;12888:20;:::i;:::-;12883:25;;12922:20;12940:1;12922:20;:::i;:::-;12917:25;;12966:1;12963;12959:9;12951:17;;12990:1;12984:4;12981:11;12978:37;;;12995:18;;:::i;:::-;12978:37;12828:194;;;;:::o;13028:191::-;13068:3;13087:20;13105:1;13087:20;:::i;:::-;13082:25;;13121:20;13139:1;13121:20;:::i;:::-;13116:25;;13164:1;13161;13157:9;13150:16;;13185:3;13182:1;13179:10;13176:36;;;13192:18;;:::i;:::-;13176:36;13028:191;;;;:::o;13225:410::-;13265:7;13288:20;13306:1;13288:20;:::i;:::-;13283:25;;13322:20;13340:1;13322:20;:::i;:::-;13317:25;;13377:1;13374;13370:9;13399:30;13417:11;13399:30;:::i;:::-;13388:41;;13578:1;13569:7;13565:15;13562:1;13559:22;13539:1;13532:9;13512:83;13489:139;;13608:18;;:::i;:::-;13489:139;13273:362;13225:410;;;;:::o;13641:118::-;13728:24;13746:5;13728:24;:::i;:::-;13723:3;13716:37;13641:118;;:::o;13765:332::-;13886:4;13924:2;13913:9;13909:18;13901:26;;13937:71;14005:1;13994:9;13990:17;13981:6;13937:71;:::i;:::-;14018:72;14086:2;14075:9;14071:18;14062:6;14018:72;:::i;:::-;13765:332;;;;;:::o;14103:116::-;14173:21;14188:5;14173:21;:::i;:::-;14166:5;14163:32;14153:60;;14209:1;14206;14199:12;14153:60;14103:116;:::o;14225:137::-;14279:5;14310:6;14304:13;14295:22;;14326:30;14350:5;14326:30;:::i;:::-;14225:137;;;;:::o;14368:345::-;14435:6;14484:2;14472:9;14463:7;14459:23;14455:32;14452:119;;;14490:79;;:::i;:::-;14452:119;14610:1;14635:61;14688:7;14679:6;14668:9;14664:22;14635:61;:::i;:::-;14625:71;;14581:125;14368:345;;;;:::o;14719:222::-;14812:4;14850:2;14839:9;14835:18;14827:26;;14863:71;14931:1;14920:9;14916:17;14907:6;14863:71;:::i;:::-;14719:222;;;;:::o;14947:143::-;15004:5;15035:6;15029:13;15020:22;;15051:33;15078:5;15051:33;:::i;:::-;14947:143;;;;:::o;15096:351::-;15166:6;15215:2;15203:9;15194:7;15190:23;15186:32;15183:119;;;15221:79;;:::i;:::-;15183:119;15341:1;15366:64;15422:7;15413:6;15402:9;15398:22;15366:64;:::i;:::-;15356:74;;15312:128;15096:351;;;;:::o;15453:178::-;15593:30;15589:1;15581:6;15577:14;15570:54;15453:178;:::o;15637:366::-;15779:3;15800:67;15864:2;15859:3;15800:67;:::i;:::-;15793:74;;15876:93;15965:3;15876:93;:::i;:::-;15994:2;15989:3;15985:12;15978:19;;15637:366;;;:::o;16009:419::-;16175:4;16213:2;16202:9;16198:18;16190:26;;16262:9;16256:4;16252:20;16248:1;16237:9;16233:17;16226:47;16290:131;16416:4;16290:131;:::i;:::-;16282:139;;16009:419;;;:::o;16434:181::-;16574:33;16570:1;16562:6;16558:14;16551:57;16434:181;:::o;16621:366::-;16763:3;16784:67;16848:2;16843:3;16784:67;:::i;:::-;16777:74;;16860:93;16949:3;16860:93;:::i;:::-;16978:2;16973:3;16969:12;16962:19;;16621:366;;;:::o;16993:419::-;17159:4;17197:2;17186:9;17182:18;17174:26;;17246:9;17240:4;17236:20;17232:1;17221:9;17217:17;17210:47;17274:131;17400:4;17274:131;:::i;:::-;17266:139;;16993:419;;;:::o;17418:230::-;17558:34;17554:1;17546:6;17542:14;17535:58;17627:13;17622:2;17614:6;17610:15;17603:38;17418:230;:::o;17654:366::-;17796:3;17817:67;17881:2;17876:3;17817:67;:::i;:::-;17810:74;;17893:93;17982:3;17893:93;:::i;:::-;18011:2;18006:3;18002:12;17995:19;;17654:366;;;:::o;18026:419::-;18192:4;18230:2;18219:9;18215:18;18207:26;;18279:9;18273:4;18269:20;18265:1;18254:9;18250:17;18243:47;18307:131;18433:4;18307:131;:::i;:::-;18299:139;;18026:419;;;:::o;18451:228::-;18591:34;18587:1;18579:6;18575:14;18568:58;18660:11;18655:2;18647:6;18643:15;18636:36;18451:228;:::o;18685:366::-;18827:3;18848:67;18912:2;18907:3;18848:67;:::i;:::-;18841:74;;18924:93;19013:3;18924:93;:::i;:::-;19042:2;19037:3;19033:12;19026:19;;18685:366;;;:::o;19057:419::-;19223:4;19261:2;19250:9;19246:18;19238:26;;19310:9;19304:4;19300:20;19296:1;19285:9;19281:17;19274:47;19338:131;19464:4;19338:131;:::i;:::-;19330:139;;19057:419;;;:::o;19482:223::-;19622:34;19618:1;19610:6;19606:14;19599:58;19691:6;19686:2;19678:6;19674:15;19667:31;19482:223;:::o;19711:366::-;19853:3;19874:67;19938:2;19933:3;19874:67;:::i;:::-;19867:74;;19950:93;20039:3;19950:93;:::i;:::-;20068:2;20063:3;20059:12;20052:19;;19711:366;;;:::o;20083:419::-;20249:4;20287:2;20276:9;20272:18;20264:26;;20336:9;20330:4;20326:20;20322:1;20311:9;20307:17;20300:47;20364:131;20490:4;20364:131;:::i;:::-;20356:139;;20083:419;;;:::o;20508:224::-;20648:34;20644:1;20636:6;20632:14;20625:58;20717:7;20712:2;20704:6;20700:15;20693:32;20508:224;:::o;20738:366::-;20880:3;20901:67;20965:2;20960:3;20901:67;:::i;:::-;20894:74;;20977:93;21066:3;20977:93;:::i;:::-;21095:2;21090:3;21086:12;21079:19;;20738:366;;;:::o;21110:419::-;21276:4;21314:2;21303:9;21299:18;21291:26;;21363:9;21357:4;21353:20;21349:1;21338:9;21334:17;21327:47;21391:131;21517:4;21391:131;:::i;:::-;21383:139;;21110:419;;;:::o;21535:181::-;21675:33;21671:1;21663:6;21659:14;21652:57;21535:181;:::o;21722:366::-;21864:3;21885:67;21949:2;21944:3;21885:67;:::i;:::-;21878:74;;21961:93;22050:3;21961:93;:::i;:::-;22079:2;22074:3;22070:12;22063:19;;21722:366;;;:::o;22094:419::-;22260:4;22298:2;22287:9;22283:18;22275:26;;22347:9;22341:4;22337:20;22333:1;22322:9;22318:17;22311:47;22375:131;22501:4;22375:131;:::i;:::-;22367:139;;22094:419;;;:::o;22519:220::-;22659:34;22655:1;22647:6;22643:14;22636:58;22728:3;22723:2;22715:6;22711:15;22704:28;22519:220;:::o;22745:366::-;22887:3;22908:67;22972:2;22967:3;22908:67;:::i;:::-;22901:74;;22984:93;23073:3;22984:93;:::i;:::-;23102:2;23097:3;23093:12;23086:19;;22745:366;;;:::o;23117:419::-;23283:4;23321:2;23310:9;23306:18;23298:26;;23370:9;23364:4;23360:20;23356:1;23345:9;23341:17;23334:47;23398:131;23524:4;23398:131;:::i;:::-;23390:139;;23117:419;;;:::o;23542:225::-;23682:34;23678:1;23670:6;23666:14;23659:58;23751:8;23746:2;23738:6;23734:15;23727:33;23542:225;:::o;23773:366::-;23915:3;23936:67;24000:2;23995:3;23936:67;:::i;:::-;23929:74;;24012:93;24101:3;24012:93;:::i;:::-;24130:2;24125:3;24121:12;24114:19;;23773:366;;;:::o;24145:419::-;24311:4;24349:2;24338:9;24334:18;24326:26;;24398:9;24392:4;24388:20;24384:1;24373:9;24369:17;24362:47;24426:131;24552:4;24426:131;:::i;:::-;24418:139;;24145:419;;;:::o;24570:173::-;24710:25;24706:1;24698:6;24694:14;24687:49;24570:173;:::o;24749:366::-;24891:3;24912:67;24976:2;24971:3;24912:67;:::i;:::-;24905:74;;24988:93;25077:3;24988:93;:::i;:::-;25106:2;25101:3;25097:12;25090:19;;24749:366;;;:::o;25121:419::-;25287:4;25325:2;25314:9;25310:18;25302:26;;25374:9;25368:4;25364:20;25360:1;25349:9;25345:17;25338:47;25402:131;25528:4;25402:131;:::i;:::-;25394:139;;25121:419;;;:::o;25546:174::-;25686:26;25682:1;25674:6;25670:14;25663:50;25546:174;:::o;25726:366::-;25868:3;25889:67;25953:2;25948:3;25889:67;:::i;:::-;25882:74;;25965:93;26054:3;25965:93;:::i;:::-;26083:2;26078:3;26074:12;26067:19;;25726:366;;;:::o;26098:419::-;26264:4;26302:2;26291:9;26287:18;26279:26;;26351:9;26345:4;26341:20;26337:1;26326:9;26322:17;26315:47;26379:131;26505:4;26379:131;:::i;:::-;26371:139;;26098:419;;;:::o;26523:442::-;26672:4;26710:2;26699:9;26695:18;26687:26;;26723:71;26791:1;26780:9;26776:17;26767:6;26723:71;:::i;:::-;26804:72;26872:2;26861:9;26857:18;26848:6;26804:72;:::i;:::-;26886;26954:2;26943:9;26939:18;26930:6;26886:72;:::i;:::-;26523:442;;;;;;:::o;26971:180::-;27111:32;27107:1;27099:6;27095:14;27088:56;26971:180;:::o;27157:366::-;27299:3;27320:67;27384:2;27379:3;27320:67;:::i;:::-;27313:74;;27396:93;27485:3;27396:93;:::i;:::-;27514:2;27509:3;27505:12;27498:19;;27157:366;;;:::o;27529:419::-;27695:4;27733:2;27722:9;27718:18;27710:26;;27782:9;27776:4;27772:20;27768:1;27757:9;27753:17;27746:47;27810:131;27936:4;27810:131;:::i;:::-;27802:139;;27529:419;;;:::o;27954:167::-;28094:19;28090:1;28082:6;28078:14;28071:43;27954:167;:::o;28127:366::-;28269:3;28290:67;28354:2;28349:3;28290:67;:::i;:::-;28283:74;;28366:93;28455:3;28366:93;:::i;:::-;28484:2;28479:3;28475:12;28468:19;;28127:366;;;:::o;28499:419::-;28665:4;28703:2;28692:9;28688:18;28680:26;;28752:9;28746:4;28742:20;28738:1;28727:9;28723:17;28716:47;28780:131;28906:4;28780:131;:::i;:::-;28772:139;;28499:419;;;:::o;28924:332::-;29045:4;29083:2;29072:9;29068:18;29060:26;;29096:71;29164:1;29153:9;29149:17;29140:6;29096:71;:::i;:::-;29177:72;29245:2;29234:9;29230:18;29221:6;29177:72;:::i;:::-;28924:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2067000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "397",
								"_ADMIN()": "436",
								"_MINTER()": "436",
								"_RESCUE()": "415",
								"calculatePendingRewards(address)": "infinite",
								"claimInterval()": "2516",
								"claimRewards()": "infinite",
								"ethRescue(address,uint256)": "infinite",
								"getBlock()": "390",
								"getLevel(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"ifacenft()": "infinite",
								"lastUpdateBlock()": "2514",
								"moveERC20(address,address,uint256)": "infinite",
								"nft()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardBonus()": "infinite",
								"rewardRatePerBlock()": "2537",
								"setClaimInterval(uint256)": "24960",
								"setNFT(address)": "27224",
								"setRewardRatePerBlock(uint256)": "47140",
								"setToken(address)": "27204",
								"stake(uint256)": "infinite",
								"supportsInterface(bytes4)": "764",
								"token()": "infinite",
								"totalRewards()": "2538",
								"totalStaked()": "2471",
								"unstake(uint256)": "infinite",
								"userInfo(address)": "infinite"
							},
							"internal": {
								"_claimRewards(address)": "infinite",
								"_stake(uint256)": "infinite",
								"_unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3300,
									"end": 3701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3408,
									"end": 3414,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3405,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3400,
									"end": 3405,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3414,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3430,
									"end": 3434,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3427,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3424,
									"end": 3427,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3434,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3464,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3452,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3444,
									"end": 3452,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3444,
									"end": 3464,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3507,
									"name": "PUSH",
									"source": 8,
									"value": "2D79883D20000"
								},
								{
									"begin": 3474,
									"end": 3492,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3474,
									"end": 3507,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3474,
									"end": 3507,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3474,
									"end": 3507,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3474,
									"end": 3507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3535,
									"end": 3547,
									"name": "NUMBER",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3532,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3517,
									"end": 3547,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3547,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3547,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3573,
									"end": 3587,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3557,
									"end": 3570,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3557,
									"end": 3587,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3557,
									"end": 3587,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3557,
									"end": 3587,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3557,
									"end": 3587,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3636,
									"end": 3647,
									"name": "PUSH",
									"source": 8,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3669,
									"name": "PUSH",
									"source": 8,
									"value": "1C6BF52634000"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3679,
									"end": 3691,
									"name": "PUSH",
									"source": 8,
									"value": "B5E620F48000"
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3608,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 686,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 627,
									"end": 634,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 674,
									"end": 679,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 656,
									"end": 680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 680,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 656,
									"end": 680,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 645,
									"end": 680,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 645,
									"end": 680,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 686,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 568,
									"end": 686,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 568,
									"end": 686,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 692,
									"end": 858,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 692,
									"end": 858,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 787,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 787,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 787,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 787,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 787,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 780,
									"end": 785,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 777,
									"end": 834,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 767,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 767,
									"end": 852,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 848,
									"end": 849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 846,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 838,
									"end": 850,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 767,
									"end": 852,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 767,
									"end": 852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 692,
									"end": 858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 692,
									"end": 858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 864,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 864,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 943,
									"end": 948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 980,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 968,
									"end": 981,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 959,
									"end": 981,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 959,
									"end": 981,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1039,
									"end": 1044,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 990,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 990,
									"end": 1045,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 990,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 864,
									"end": 1051,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 864,
									"end": 1051,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 864,
									"end": 1051,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 864,
									"end": 1051,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 864,
									"end": 1051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 1134,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1057,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1094,
									"end": 1101,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1128,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 1128,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 1128,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 1134,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 1134,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 1134,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 1134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1262,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1140,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1231,
									"end": 1236,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1213,
									"end": 1237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1213,
									"end": 1237,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1213,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1206,
									"end": 1211,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1203,
									"end": 1238,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1193,
									"end": 1256,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1250,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1254,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1256,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1193,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1262,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1411,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1268,
									"end": 1411,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1330,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 1362,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1350,
									"end": 1363,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1363,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1363,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1372,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1405,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1372,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1411,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1528,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1417,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1476,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1516,
									"end": 1521,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1498,
									"end": 1522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1522,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1498,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 1522,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 1522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1528,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1534,
									"end": 1686,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1534,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1622,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1655,
									"end": 1660,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1622,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1622,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1622,
									"end": 1661,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1622,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1620,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1612,
									"end": 1662,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1602,
									"end": 1680,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1676,
									"end": 1677,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1673,
									"end": 1674,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1678,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1680,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1602,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1534,
									"end": 1686,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1534,
									"end": 1686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1865,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1692,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1764,
									"end": 1769,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1795,
									"end": 1801,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1789,
									"end": 1802,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 1802,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 1802,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1811,
									"end": 1859,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1853,
									"end": 1858,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1811,
									"end": 1859,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1811,
									"end": 1859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1811,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1811,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1865,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1871,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1871,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1924,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1953,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1971,
									"end": 1976,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1953,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1953,
									"end": 1977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1953,
									"end": 1977,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1953,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 1977,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 1977,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1871,
									"end": 1983,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1871,
									"end": 1983,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1871,
									"end": 1983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1871,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1989,
									"end": 2143,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2112,
									"end": 2117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2078,
									"end": 2118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2118,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2078,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2071,
									"end": 2076,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2068,
									"end": 2119,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2058,
									"end": 2137,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2134,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2130,
									"end": 2131,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2137,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2058,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1989,
									"end": 2143,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1989,
									"end": 2143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2324,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2149,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2227,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2253,
									"end": 2259,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2260,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2260,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2312,
									"end": 2317,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2269,
									"end": 2318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2318,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2269,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2324,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2324,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2324,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2324,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2324,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2480,
									"end": 2486,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2494,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2496,
									"end": 2502,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2504,
									"end": 2510,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2553,
									"end": 2556,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2532,
									"end": 2539,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2528,
									"end": 2551,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2524,
									"end": 2557,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2641,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2521,
									"end": 2641,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2560,
									"end": 2639,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2560,
									"end": 2639,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2560,
									"end": 2639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2560,
									"end": 2639,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2560,
									"end": 2639,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2641,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2521,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2680,
									"end": 2681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2705,
									"end": 2791,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2783,
									"end": 2790,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2774,
									"end": 2780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2772,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2781,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2705,
									"end": 2791,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2705,
									"end": 2791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2705,
									"end": 2791,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2705,
									"end": 2791,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2695,
									"end": 2791,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2695,
									"end": 2791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2651,
									"end": 2801,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 2842,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2866,
									"end": 2930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2922,
									"end": 2929,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2913,
									"end": 2919,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2902,
									"end": 2911,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2898,
									"end": 2920,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2866,
									"end": 2930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2866,
									"end": 2930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2866,
									"end": 2930,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2866,
									"end": 2930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2856,
									"end": 2930,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2856,
									"end": 2930,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2811,
									"end": 2940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2979,
									"end": 2981,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3076,
									"end": 3083,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3067,
									"end": 3073,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3056,
									"end": 3065,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3005,
									"end": 3084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2995,
									"end": 3084,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2995,
									"end": 3084,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2950,
									"end": 3094,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3159,
									"end": 3239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3231,
									"end": 3238,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3220,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3207,
									"end": 3229,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3159,
									"end": 3239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3159,
									"end": 3239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3159,
									"end": 3239,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3159,
									"end": 3239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3149,
									"end": 3239,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3149,
									"end": 3239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3104,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2330,
									"end": 3256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 10510,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bee125c14226d1e1a099dd96a68b0a5d518e378148ea4d36e67fa71451b6e3864736f6c634300081a0033",
									".code": [
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "817B1CD2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "F2D57ADF"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "F2D57ADF"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "F56E9C66"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "FDF553CF"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "B0AD08DF"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "B2F196F6"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "D547741F"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "A218141B"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "A56BEF5D"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "817B1CD2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "817C8966"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "8D580B9F"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "90870492"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "2E97766D"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "41F431FD"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "41F431FD"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "47CCCA02"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "48132F48"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "51557289"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "2E97766D"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "2F2FF15D"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "36568ABE"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "372500AB"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "144FA6D7"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "144FA6D7"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "1959A002"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "97AAD10"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "B433A12"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "E15561A"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 10510,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7024,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7024,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7024,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1600,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1600,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1528,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1528,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 8859,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 8859,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2596,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2596,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2596,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4143,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4143,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9388,
											"end": 9498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 9388,
											"end": 9498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4365,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 9852,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 9852,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1107,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1107,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 10333,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10333,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1798,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1798,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1447,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1447,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7839,
											"end": 7952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 7839,
											"end": 7952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7839,
											"end": 7952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1738,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1738,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1281,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1281,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1357,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1357,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1856,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1856,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3877,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3877,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1201,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1201,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8115,
											"end": 8412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 8115,
											"end": 8412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8553,
											"end": 8687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8553,
											"end": 8687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 9151,
											"end": 9279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 9151,
											"end": 9279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1016,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1016,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2449,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2449,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7095,
											"end": 7102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7127,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 7139,
											"end": 7146,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 7130,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7147,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 7130,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7114,
											"end": 7147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7114,
											"end": 7147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7157,
											"end": 7181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7196,
											"end": 7201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7196,
											"end": 7206,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7241,
											"end": 7252,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 7241,
											"end": 7257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7241,
											"end": 7257,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7222,
											"end": 7257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7222,
											"end": 7257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7278,
											"end": 7283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7278,
											"end": 7288,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7334,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7304,
											"end": 7341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7371,
											"end": 7372,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7362,
											"end": 7367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7372,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7418,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 7456,
											"end": 7478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 7358,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7274,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 7192,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7538,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7554,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7538,
											"end": 7555,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7535,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 7523,
											"end": 7570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7636,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7599,
											"end": 7636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 7599,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7636,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7599,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7598,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 7598,
											"end": 7653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7598,
											"end": 7653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7598,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 7598,
											"end": 7653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7598,
											"end": 7653,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 7598,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7682,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7682,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1831,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 8946,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8946,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 8946,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8946,
											"end": 8958,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8946,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8930,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8959,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 8930,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 8922,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8978,
											"end": 8987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8975,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8970,
											"end": 8975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4218,
											"end": 4225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4209,
											"end": 4226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4209,
											"end": 4226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9472,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4365,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4419,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4433,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4433,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4433,
											"end": 4445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4433,
											"end": 4445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4433,
											"end": 4445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4419,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 4419,
											"end": 4446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4419,
											"end": 4446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4419,
											"end": 4446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1772,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 9975,
											"end": 9987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 9975,
											"end": 9985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 9975,
											"end": 9987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 9987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 9975,
											"end": 9987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9958,
											"end": 9965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 9958,
											"end": 9988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9958,
											"end": 9988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 9958,
											"end": 9988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 9989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 9950,
											"end": 9989,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 9989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9989,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 9989,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 9989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 9950,
											"end": 9989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10013,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10000,
											"end": 10023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 10024,
											"end": 10029,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10031,
											"end": 10043,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 10000,
											"end": 10044,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 10000,
											"end": 10044,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 10051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10432,
											"end": 10462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1772,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 10449,
											"end": 10461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10449,
											"end": 10459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 10449,
											"end": 10461,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10449,
											"end": 10461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10449,
											"end": 10461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10432,
											"end": 10439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 10432,
											"end": 10462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10432,
											"end": 10462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 10432,
											"end": 10462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 10424,
											"end": 10463,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10463,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10463,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 10424,
											"end": 10463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7892,
											"end": 7899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7926,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7939,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7939,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7939,
											"name": "PUSH",
											"source": 8,
											"value": "1AB0D49E"
										},
										{
											"begin": 7940,
											"end": 7944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 7918,
											"end": 7945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7918,
											"end": 7945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7918,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1792,
											"name": "PUSH",
											"source": 8,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 1738,
											"end": 1792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "8C342C7ACA7F35847406E6353E35C5762132FA3E958179931981D120AF75DFB2"
										},
										{
											"begin": 1856,
											"end": 1910,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3948,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 3941,
											"end": 3956,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3941,
											"end": 3956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8205,
											"end": 8231,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8197,
											"end": 8264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8197,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8282,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1831,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 8298,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 8298,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8282,
											"end": 8311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8282,
											"end": 8311,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8282,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 8274,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8365,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8340,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8322,
											"end": 8365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8365,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8405,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8390,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8375,
											"end": 8405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8405,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1831,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 8636,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8636,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 8636,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8648,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8636,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8620,
											"end": 8649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 8612,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8676,
											"end": 8680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8673,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 8660,
											"end": 8680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8680,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 8680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9215,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1831,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 9231,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 9231,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 9231,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9231,
											"end": 9243,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 9231,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9215,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 9215,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9215,
											"end": 9244,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 9215,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 9207,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 6036,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5394,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5480,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5481,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5481,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5493,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5481,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5523,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5504,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5504,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5618,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5618,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5581,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5581,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5720,
											"end": 5733,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5720,
											"end": 5733,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5717,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5698,
											"end": 5717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5717,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5698,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5733,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5733,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5674,
											"end": 5774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5674,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5799,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5799,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5785,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5785,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5823,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5862,
											"end": 5884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5917,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5903,
											"end": 5917,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5917,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5918,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5918,
											"end": 5930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5939,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5903,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5903,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5903,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 5895,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 5895,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 6007,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6007,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5998,
											"end": 6029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6029,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 6036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 6036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 6036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6804,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6186,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6276,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6294,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6294,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6416,
											"end": 6429,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6416,
											"end": 6429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6413,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6394,
											"end": 6413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6413,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6394,
											"end": 6429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6394,
											"end": 6429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6429,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6394,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6390,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6429,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6429,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6370,
											"end": 6470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6370,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 6506,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6537,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6506,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6573,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6547,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6547,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6656,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6641,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6622,
											"end": 6641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6682,
											"end": 6696,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6678,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6666,
											"end": 6678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6666,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "PUSH",
											"source": 8,
											"value": "449A52F8"
										},
										{
											"begin": 6720,
											"end": 6726,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6707,
											"end": 6743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "2D5429EFDECA7741A8CD94067B18D988BC4E5F1D5B8272C37B7BFC31E9BFA32C"
										},
										{
											"begin": 6782,
											"end": 6796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 6759,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 5260,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4583,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4643,
											"end": 4654,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4635,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4635,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4729,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4729,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4715,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4715,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4715,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4746,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4707,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4707,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4806,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4793,
											"end": 4806,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4806,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 4815,
											"end": 4819,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4829,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4793,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4793,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4793,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 4785,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4785,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 4896,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4896,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4896,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4908,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4896,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4932,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 4877,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4877,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 4877,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 4869,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 4869,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5011,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5012,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5012,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5025,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5040,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5036,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "PUSH",
											"source": 8,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 5083,
											"end": 5087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5109,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5109,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5075,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5075,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5153,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5142,
											"end": 5153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5142,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5208,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5193,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5174,
											"end": 5193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5208,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 5231,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5231,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5243,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 5231,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 5245,
											"end": 5252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5224,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 5260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2913,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2795,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 2883,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 3085,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2919,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 3014,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3060,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 3014,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3061,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 2994,
											"end": 3079,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3079,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 2994,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 3085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 3085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3274,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 3091,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3204,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 3262,
											"end": 3267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 3213,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3268,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 3213,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3274,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3653,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3280,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3497,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 3378,
											"end": 3497,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 3416,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3416,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3495,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 3416,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3497,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 3378,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 3628,
											"end": 3635,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3617,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 3561,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3636,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 3561,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3653,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3795,
											"end": 3821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3795,
											"end": 3821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 3831,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3902,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 3831,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 3912,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3659,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 3997,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4202,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4080,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4153,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 4153,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4178,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4194,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4347,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 4208,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4299,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4308,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4341,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 4308,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4347,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4682,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4353,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4449,
											"end": 4458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4464,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4467,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 4657,
											"end": 4664,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 4612,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4602,
											"end": 4665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4602,
											"end": 4665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4682,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4682,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 4688,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 4775,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4799,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 4775,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4800,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 5034,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4812,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 5024,
											"end": 5025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 4956,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 5027,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 4956,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 5034,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 5034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 5034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 5034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 5034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5162,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 5040,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5113,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5137,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 5113,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5111,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5103,
											"end": 5138,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5307,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 5168,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5239,
											"end": 5259,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 5268,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5301,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 5268,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5307,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5642,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5313,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5409,
											"end": 5418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5407,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5396,
											"end": 5419,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5424,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5508,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5389,
											"end": 5508,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5427,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5427,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 5427,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5427,
											"end": 5506,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5427,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5508,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5389,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5593,
											"end": 5615,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 5572,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5625,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5572,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5642,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5773,
											"end": 5775,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5759,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5748,
											"end": 5771,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5744,
											"end": 5776,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5860,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 5741,
											"end": 5860,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5779,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 5779,
											"end": 5858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5858,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5779,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5860,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 5741,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 5969,
											"end": 5976,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 5966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 5924,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5977,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 5924,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5914,
											"end": 5977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5914,
											"end": 5977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 5987,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6052,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 6097,
											"end": 6104,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6086,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6052,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 6052,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6052,
											"end": 6105,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 6052,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5997,
											"end": 6115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 6122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6238,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6128,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6186,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 6208,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6232,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 6208,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6394,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6244,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 6363,
											"end": 6368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6331,
											"end": 6369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6369,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 6331,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6370,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 6311,
											"end": 6388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6388,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 6311,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6567,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6400,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6505,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 6555,
											"end": 6560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6514,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6561,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 6514,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6731,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6715,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6700,
											"end": 6732,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6816,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 6697,
											"end": 6816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6735,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6816,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 6697,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 6939,
											"end": 6946,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 6937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6880,
											"end": 6947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 6947,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 6947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 6998,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 7067,
											"end": 7074,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7058,
											"end": 7064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7022,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7195,
											"end": 7202,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7184,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7150,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7150,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 7220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7286,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7226,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7275,
											"end": 7280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7434,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7292,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 7393,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 7402,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 7402,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7426,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 7402,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7393,
											"end": 7427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7427,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 7393,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 7375,
											"end": 7428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7428,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 7375,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7566,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 7440,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7490,
											"end": 7499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 7554,
											"end": 7559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 7523,
											"end": 7560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7560,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 7523,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7713,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7572,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 7701,
											"end": 7706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 7670,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 7707,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 7670,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7880,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 7719,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 7867,
											"end": 7872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7821,
											"end": 7873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7873,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 7821,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8138,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7886,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7994,
											"end": 7998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8126,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8110,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 8045,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8131,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8045,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 8138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8248,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 8144,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 8236,
											"end": 8241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8218,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8392,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 8254,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 8361,
											"end": 8366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 8335,
											"end": 8367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8367,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 8335,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 8315,
											"end": 8386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8384,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8386,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 8315,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8553,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 8398,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8490,
											"end": 8496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8497,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8506,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 8541,
											"end": 8546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8506,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 8506,
											"end": 8547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8506,
											"end": 8547,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 8506,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8553,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 8678,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8667,
											"end": 8690,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 8695,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8660,
											"end": 8779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8660,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 8660,
											"end": 8779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8698,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8660,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 8660,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 8896,
											"end": 8903,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8887,
											"end": 8893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8876,
											"end": 8885,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8843,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 8843,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8843,
											"end": 8904,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 8843,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8904,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 8914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8953,
											"end": 8955,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8979,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 9024,
											"end": 9031,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9013,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8979,
											"end": 9032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9032,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 8979,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 9032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 9032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8924,
											"end": 9042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 9049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9197,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9055,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 9185,
											"end": 9190,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9154,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9191,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 9154,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9366,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9203,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9306,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9301,
											"end": 9304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9626,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9372,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9481,
											"end": 9485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9521,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9496,
											"end": 9522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9496,
											"end": 9522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9598,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9532,
											"end": 9619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9619,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 9532,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9626,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9743,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9632,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9684,
											"end": 9691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 9731,
											"end": 9736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9713,
											"end": 9737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9737,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 9713,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9901,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9749,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9837,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 9870,
											"end": 9875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9837,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9837,
											"end": 9876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9837,
											"end": 9876,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 9837,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9830,
											"end": 9835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9877,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 9817,
											"end": 9895,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9881,
											"end": 9893,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9895,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 9817,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 10076,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9907,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 9973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9993,
											"end": 10013,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 10064,
											"end": 10069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10022,
											"end": 10070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 10022,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 10076,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 10076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 10076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 10076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 10076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10441,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 10082,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10193,
											"end": 10202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10184,
											"end": 10191,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10203,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10176,
											"end": 10208,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10173,
											"end": 10292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10173,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 10173,
											"end": 10292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10211,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 10211,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10173,
											"end": 10292,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 10173,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10331,
											"end": 10332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 10416,
											"end": 10423,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10356,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10356,
											"end": 10424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10356,
											"end": 10424,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 10356,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10447,
											"end": 10595,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10447,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10519,
											"end": 10528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 10583,
											"end": 10588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 10552,
											"end": 10589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10589,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 10552,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10447,
											"end": 10595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10447,
											"end": 10595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10447,
											"end": 10595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10447,
											"end": 10595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10776,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10601,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10710,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 10763,
											"end": 10768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10710,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10710,
											"end": 10769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10710,
											"end": 10769,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 10710,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10705,
											"end": 10708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 11048,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10782,
											"end": 11048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10897,
											"end": 10901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10935,
											"end": 10937,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10924,
											"end": 10933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10912,
											"end": 10938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10912,
											"end": 10938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 11038,
											"end": 11039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11027,
											"end": 11036,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11023,
											"end": 11040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11020,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10948,
											"end": 11041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 11041,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 10948,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 11048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 11048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 11048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11203,
											"end": 11207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11241,
											"end": 11243,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11230,
											"end": 11239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11254,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 11322,
											"end": 11323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11311,
											"end": 11320,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11307,
											"end": 11324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11298,
											"end": 11304,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11254,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11254,
											"end": 11325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11254,
											"end": 11325,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 11254,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 11403,
											"end": 11405,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11392,
											"end": 11401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11379,
											"end": 11385,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11335,
											"end": 11407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11407,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 11335,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11417,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 11485,
											"end": 11487,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11483,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11488,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11467,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11417,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11417,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11417,
											"end": 11489,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 11417,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11054,
											"end": 11496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 11671,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 11502,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11586,
											"end": 11597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11620,
											"end": 11626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11615,
											"end": 11618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11627,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11660,
											"end": 11664,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11655,
											"end": 11658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11636,
											"end": 11665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11636,
											"end": 11665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 11671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 11671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 11671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 11671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11839,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 11677,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11817,
											"end": 11831,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F204E4654204C6576656C0000000000000000000000000000000000000000"
										},
										{
											"begin": 11813,
											"end": 11814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 11811,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11801,
											"end": 11815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11794,
											"end": 11832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11987,
											"end": 11990,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 12072,
											"end": 12074,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 12067,
											"end": 12070,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 12008,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12001,
											"end": 12075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12001,
											"end": 12075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 12173,
											"end": 12176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 12084,
											"end": 12177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12202,
											"end": 12204,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 12211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12421,
											"end": 12423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12410,
											"end": 12419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12398,
											"end": 12424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12398,
											"end": 12424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12470,
											"end": 12479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12460,
											"end": 12480,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12456,
											"end": 12457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12441,
											"end": 12458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12434,
											"end": 12481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 12624,
											"end": 12628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 12498,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12490,
											"end": 12629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12490,
											"end": 12629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12217,
											"end": 12636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12822,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 12642,
											"end": 12822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12767,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12687,
											"end": 12688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12680,
											"end": 12768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12791,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12784,
											"end": 12785,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12777,
											"end": 12792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12811,
											"end": 12815,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12808,
											"end": 12809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12801,
											"end": 12816,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 13022,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12828,
											"end": 13022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 12906,
											"end": 12907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12888,
											"end": 12908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12888,
											"end": 12908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12888,
											"end": 12908,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 12888,
											"end": 12908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12922,
											"end": 12942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 12940,
											"end": 12941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12922,
											"end": 12942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12922,
											"end": 12942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12922,
											"end": 12942,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 12922,
											"end": 12942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12966,
											"end": 12967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12959,
											"end": 12968,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12951,
											"end": 12968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12951,
											"end": 12968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12990,
											"end": 12991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 12988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12981,
											"end": 12992,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12978,
											"end": 13015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12978,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 12978,
											"end": 13015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 12995,
											"end": 13013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12978,
											"end": 13015,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 12978,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 13022,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 13022,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 13022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 13022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 13022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13219,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 13028,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13068,
											"end": 13071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13087,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 13105,
											"end": 13106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13087,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13087,
											"end": 13107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13087,
											"end": 13107,
											"name": "tag",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 13087,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13107,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 13139,
											"end": 13140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13121,
											"end": 13141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 13121,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13141,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13164,
											"end": 13165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13161,
											"end": 13162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13150,
											"end": 13166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13150,
											"end": 13166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13188,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13182,
											"end": 13183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13179,
											"end": 13189,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13176,
											"end": 13212,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13176,
											"end": 13212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 13176,
											"end": 13212,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13192,
											"end": 13210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13176,
											"end": 13212,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 13176,
											"end": 13212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13219,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13219,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13225,
											"end": 13635,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13225,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13288,
											"end": 13308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 13306,
											"end": 13307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13288,
											"end": 13308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13288,
											"end": 13308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13288,
											"end": 13308,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 13288,
											"end": 13308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13308,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13322,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13322,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13322,
											"end": 13342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13322,
											"end": 13342,
											"name": "tag",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 13322,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13317,
											"end": 13342,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13317,
											"end": 13342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13377,
											"end": 13378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13379,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13399,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 13417,
											"end": 13428,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13399,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 13399,
											"end": 13429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13399,
											"end": 13429,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 13399,
											"end": 13429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13388,
											"end": 13429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13388,
											"end": 13429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13578,
											"end": 13579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13565,
											"end": 13580,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13562,
											"end": 13563,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13581,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13539,
											"end": 13540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13532,
											"end": 13541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13512,
											"end": 13595,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13489,
											"end": 13628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 13489,
											"end": 13628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13608,
											"end": 13626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "tag",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13489,
											"end": 13628,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 13489,
											"end": 13628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13225,
											"end": 13635,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13225,
											"end": 13635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13225,
											"end": 13635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13225,
											"end": 13635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13225,
											"end": 13635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13759,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13641,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13728,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 13746,
											"end": 13751,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13728,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 13728,
											"end": 13752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13728,
											"end": 13752,
											"name": "tag",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 13728,
											"end": 13752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 13890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13924,
											"end": 13926,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13913,
											"end": 13922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13901,
											"end": 13927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13901,
											"end": 13927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13937,
											"end": 14008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 14005,
											"end": 14006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13994,
											"end": 14003,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 13987,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13937,
											"end": 14008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13937,
											"end": 14008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13937,
											"end": 14008,
											"name": "tag",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 13937,
											"end": 14008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 14086,
											"end": 14088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14075,
											"end": 14084,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14068,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 14018,
											"end": 14090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14090,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 14018,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 14097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14219,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 14103,
											"end": 14219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "623"
										},
										{
											"begin": 14188,
											"end": 14193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 14173,
											"end": 14194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "tag",
											"source": 9,
											"value": "623"
										},
										{
											"begin": 14173,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14163,
											"end": 14195,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 14153,
											"end": 14213,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14209,
											"end": 14210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14206,
											"end": 14207,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14199,
											"end": 14211,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14213,
											"name": "tag",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 14153,
											"end": 14213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14362,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 14225,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14279,
											"end": 14284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14316,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14304,
											"end": 14317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14295,
											"end": 14317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14295,
											"end": 14317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 14350,
											"end": 14355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 14326,
											"end": 14356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14356,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 14326,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14362,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14713,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 14368,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14484,
											"end": 14486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14472,
											"end": 14481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14463,
											"end": 14470,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14459,
											"end": 14482,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14455,
											"end": 14487,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 14452,
											"end": 14571,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14452,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 14452,
											"end": 14571,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14490,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 14490,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14490,
											"end": 14569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14490,
											"end": 14569,
											"name": "tag",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 14490,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14452,
											"end": 14571,
											"name": "tag",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 14452,
											"end": 14571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14635,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 14688,
											"end": 14695,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14679,
											"end": 14685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14677,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14664,
											"end": 14686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14635,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 14635,
											"end": 14696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14635,
											"end": 14696,
											"name": "tag",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 14635,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14625,
											"end": 14696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14625,
											"end": 14696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14941,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 14719,
											"end": 14941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14850,
											"end": 14852,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14848,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14835,
											"end": 14853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14827,
											"end": 14853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14827,
											"end": 14853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 14931,
											"end": 14932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14920,
											"end": 14929,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14916,
											"end": 14933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14907,
											"end": 14913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 14863,
											"end": 14934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14863,
											"end": 14934,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 14863,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14941,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14941,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15090,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 14947,
											"end": 15090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15004,
											"end": 15009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15035,
											"end": 15041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15029,
											"end": 15042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15051,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 15078,
											"end": 15083,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15051,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 15051,
											"end": 15084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15051,
											"end": 15084,
											"name": "tag",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 15051,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 15090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15447,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 15096,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15166,
											"end": 15172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15215,
											"end": 15217,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15203,
											"end": 15212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15190,
											"end": 15213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15186,
											"end": 15218,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15302,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 15183,
											"end": 15302,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15221,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 15221,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 15221,
											"end": 15300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15221,
											"end": 15300,
											"name": "tag",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 15221,
											"end": 15300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15302,
											"name": "tag",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 15183,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15341,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 15422,
											"end": 15429,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15402,
											"end": 15411,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15398,
											"end": 15420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15366,
											"end": 15430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 15366,
											"end": 15430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15366,
											"end": 15430,
											"name": "tag",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 15366,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15356,
											"end": 15430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15356,
											"end": 15430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15312,
											"end": 15440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15453,
											"end": 15631,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 15453,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15593,
											"end": 15623,
											"name": "PUSH",
											"source": 9,
											"value": "5265776172642072617465206D75737420626520706F73697469766500000000"
										},
										{
											"begin": 15589,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15581,
											"end": 15587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15577,
											"end": 15591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15624,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15453,
											"end": 15631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15453,
											"end": 15631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15637,
											"end": 16003,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 15637,
											"end": 16003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15779,
											"end": 15782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 15864,
											"end": 15866,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 15859,
											"end": 15862,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15800,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 15800,
											"end": 15867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15800,
											"end": 15867,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 15800,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15793,
											"end": 15867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15793,
											"end": 15867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 15965,
											"end": 15968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 15876,
											"end": 15969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15969,
											"name": "tag",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 15876,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15994,
											"end": 15996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15985,
											"end": 15997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15978,
											"end": 15997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15978,
											"end": 15997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15637,
											"end": 16003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15637,
											"end": 16003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15637,
											"end": 16003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15637,
											"end": 16003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16428,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 16009,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16213,
											"end": 16215,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16202,
											"end": 16211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16198,
											"end": 16216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16190,
											"end": 16216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16190,
											"end": 16216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16262,
											"end": 16271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16256,
											"end": 16260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16252,
											"end": 16272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16248,
											"end": 16249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16237,
											"end": 16246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16233,
											"end": 16250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16290,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 16416,
											"end": 16420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16290,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 16290,
											"end": 16421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16290,
											"end": 16421,
											"name": "tag",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 16290,
											"end": 16421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16282,
											"end": 16421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16282,
											"end": 16421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16434,
											"end": 16615,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 16434,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16574,
											"end": 16607,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 16570,
											"end": 16571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16562,
											"end": 16568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16558,
											"end": 16572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16608,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16434,
											"end": 16615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16434,
											"end": 16615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16621,
											"end": 16987,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 16621,
											"end": 16987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16784,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 16848,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16843,
											"end": 16846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16784,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 16784,
											"end": 16851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16784,
											"end": 16851,
											"name": "tag",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 16784,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16777,
											"end": 16851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16777,
											"end": 16851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16860,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 16949,
											"end": 16952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16860,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 16860,
											"end": 16953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16860,
											"end": 16953,
											"name": "tag",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 16860,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16978,
											"end": 16980,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16973,
											"end": 16976,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16969,
											"end": 16981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16962,
											"end": 16981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16962,
											"end": 16981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16621,
											"end": 16987,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16621,
											"end": 16987,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16621,
											"end": 16987,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16621,
											"end": 16987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17412,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 16993,
											"end": 17412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17159,
											"end": 17163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17199,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17186,
											"end": 17195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17182,
											"end": 17200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17174,
											"end": 17200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17174,
											"end": 17200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17246,
											"end": 17255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17240,
											"end": 17244,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17236,
											"end": 17256,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17232,
											"end": 17233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17221,
											"end": 17230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17217,
											"end": 17234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17274,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 17400,
											"end": 17404,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17274,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 17274,
											"end": 17405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17274,
											"end": 17405,
											"name": "tag",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 17274,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17266,
											"end": 17405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17266,
											"end": 17405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17412,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16993,
											"end": 17412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17418,
											"end": 17648,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 17418,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17558,
											"end": 17592,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E5374616B696E673A20416D6F756E74206D75737420626520677265"
										},
										{
											"begin": 17554,
											"end": 17555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17546,
											"end": 17552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17542,
											"end": 17556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17627,
											"end": 17640,
											"name": "PUSH",
											"source": 9,
											"value": "61746572207468616E2030000000000000000000000000000000000000000000"
										},
										{
											"begin": 17622,
											"end": 17624,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17614,
											"end": 17620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17603,
											"end": 17641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17418,
											"end": 17648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17418,
											"end": 17648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17796,
											"end": 17799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 17881,
											"end": 17883,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 17876,
											"end": 17879,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 17817,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "tag",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17810,
											"end": 17884,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17810,
											"end": 17884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 17982,
											"end": 17985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 17893,
											"end": 17986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "tag",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18011,
											"end": 18013,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18006,
											"end": 18009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18002,
											"end": 18014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17995,
											"end": 18014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17995,
											"end": 18014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 18020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18232,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18215,
											"end": 18233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18207,
											"end": 18233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18207,
											"end": 18233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18279,
											"end": 18288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18273,
											"end": 18277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18269,
											"end": 18289,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18265,
											"end": 18266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18254,
											"end": 18263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18250,
											"end": 18267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18243,
											"end": 18290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 18433,
											"end": 18437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 18307,
											"end": 18438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "tag",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18299,
											"end": 18438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18299,
											"end": 18438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18679,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 18451,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18591,
											"end": 18625,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E5374616B696E673A20496E73756666696369656E74207374616B65"
										},
										{
											"begin": 18587,
											"end": 18588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18579,
											"end": 18585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18568,
											"end": 18626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18660,
											"end": 18671,
											"name": "PUSH",
											"source": 9,
											"value": "642062616C616E63650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18655,
											"end": 18657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18647,
											"end": 18653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18643,
											"end": 18658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18636,
											"end": 18672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18827,
											"end": 18830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 18912,
											"end": 18914,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 18907,
											"end": 18910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 18848,
											"end": 18915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "tag",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18841,
											"end": 18915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18841,
											"end": 18915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 19013,
											"end": 19016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 18924,
											"end": 19017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "tag",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19042,
											"end": 19044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19037,
											"end": 19040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19033,
											"end": 19045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18685,
											"end": 19051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19223,
											"end": 19227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19261,
											"end": 19263,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19250,
											"end": 19259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19246,
											"end": 19264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19238,
											"end": 19264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19238,
											"end": 19264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19310,
											"end": 19319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19304,
											"end": 19308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19300,
											"end": 19320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19296,
											"end": 19297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19285,
											"end": 19294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19281,
											"end": 19298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19274,
											"end": 19321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19464,
											"end": 19468,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 19338,
											"end": 19469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "tag",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19330,
											"end": 19469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19330,
											"end": 19469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19057,
											"end": 19476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19705,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 19482,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19622,
											"end": 19656,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E5374616B696E673A20436C61696D20696E74657276616C206E6F74"
										},
										{
											"begin": 19618,
											"end": 19619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19610,
											"end": 19616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19606,
											"end": 19620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19599,
											"end": 19657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19691,
											"end": 19697,
											"name": "PUSH",
											"source": 9,
											"value": "206D657400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19686,
											"end": 19688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19678,
											"end": 19684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19674,
											"end": 19689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19667,
											"end": 19698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19853,
											"end": 19856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 19938,
											"end": 19940,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19933,
											"end": 19936,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 19874,
											"end": 19941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "tag",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 19874,
											"end": 19941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19941,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 20039,
											"end": 20042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 19950,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "tag",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 19950,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20068,
											"end": 20070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20063,
											"end": 20066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20059,
											"end": 20071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20052,
											"end": 20071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20052,
											"end": 20071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19711,
											"end": 20077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19711,
											"end": 20077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20249,
											"end": 20253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20287,
											"end": 20289,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20276,
											"end": 20285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20272,
											"end": 20290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20264,
											"end": 20290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20264,
											"end": 20290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20336,
											"end": 20345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20330,
											"end": 20334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20346,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20322,
											"end": 20323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20311,
											"end": 20320,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20307,
											"end": 20324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20300,
											"end": 20347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 20490,
											"end": 20494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 20364,
											"end": 20495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "tag",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 20364,
											"end": 20495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20356,
											"end": 20495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20356,
											"end": 20495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20083,
											"end": 20502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20083,
											"end": 20502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20508,
											"end": 20732,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 20508,
											"end": 20732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20648,
											"end": 20682,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E5374616B696E673A20556E7374616B65207472616E736665722066"
										},
										{
											"begin": 20644,
											"end": 20645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20632,
											"end": 20646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20625,
											"end": 20683,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20717,
											"end": 20724,
											"name": "PUSH",
											"source": 9,
											"value": "61696C6564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20712,
											"end": 20714,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20704,
											"end": 20710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20700,
											"end": 20715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20693,
											"end": 20725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20508,
											"end": 20732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20508,
											"end": 20732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20738,
											"end": 21104,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 20738,
											"end": 21104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20880,
											"end": 20883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20901,
											"end": 20968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "671"
										},
										{
											"begin": 20965,
											"end": 20967,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 20960,
											"end": 20963,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20901,
											"end": 20968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 20901,
											"end": 20968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20901,
											"end": 20968,
											"name": "tag",
											"source": 9,
											"value": "671"
										},
										{
											"begin": 20901,
											"end": 20968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20894,
											"end": 20968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20894,
											"end": 20968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20977,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 21066,
											"end": 21069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20977,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 20977,
											"end": 21070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20977,
											"end": 21070,
											"name": "tag",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 20977,
											"end": 21070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21095,
											"end": 21097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21090,
											"end": 21093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21086,
											"end": 21098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21079,
											"end": 21098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21079,
											"end": 21098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20738,
											"end": 21104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20738,
											"end": 21104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20738,
											"end": 21104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20738,
											"end": 21104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21529,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 21110,
											"end": 21529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21276,
											"end": 21280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21314,
											"end": 21316,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21303,
											"end": 21312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21299,
											"end": 21317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21363,
											"end": 21372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21357,
											"end": 21361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21353,
											"end": 21373,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21349,
											"end": 21350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21338,
											"end": 21347,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21334,
											"end": 21351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21327,
											"end": 21374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21391,
											"end": 21522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "674"
										},
										{
											"begin": 21517,
											"end": 21521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21391,
											"end": 21522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 21391,
											"end": 21522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21391,
											"end": 21522,
											"name": "tag",
											"source": 9,
											"value": "674"
										},
										{
											"begin": 21391,
											"end": 21522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21383,
											"end": 21522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21383,
											"end": 21522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21110,
											"end": 21529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21535,
											"end": 21716,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 21535,
											"end": 21716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21675,
											"end": 21708,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E5374616B696E673A204E6F207374616B65642062616C616E636500"
										},
										{
											"begin": 21671,
											"end": 21672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21663,
											"end": 21669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21659,
											"end": 21673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21652,
											"end": 21709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21535,
											"end": 21716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21535,
											"end": 21716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21722,
											"end": 22088,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 21722,
											"end": 22088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21864,
											"end": 21867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21885,
											"end": 21952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 21949,
											"end": 21951,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 21944,
											"end": 21947,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21885,
											"end": 21952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 21885,
											"end": 21952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21885,
											"end": 21952,
											"name": "tag",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 21885,
											"end": 21952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21878,
											"end": 21952,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21878,
											"end": 21952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21961,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "678"
										},
										{
											"begin": 22050,
											"end": 22053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21961,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 21961,
											"end": 22054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21961,
											"end": 22054,
											"name": "tag",
											"source": 9,
											"value": "678"
										},
										{
											"begin": 21961,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22079,
											"end": 22081,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22074,
											"end": 22077,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22070,
											"end": 22082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22063,
											"end": 22082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22063,
											"end": 22082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21722,
											"end": 22088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21722,
											"end": 22088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21722,
											"end": 22088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21722,
											"end": 22088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22513,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 22094,
											"end": 22513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22260,
											"end": 22264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22298,
											"end": 22300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22287,
											"end": 22296,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22283,
											"end": 22301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22275,
											"end": 22301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22275,
											"end": 22301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22347,
											"end": 22356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22341,
											"end": 22345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22337,
											"end": 22357,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22333,
											"end": 22334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22322,
											"end": 22331,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22318,
											"end": 22335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22311,
											"end": 22358,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22375,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "680"
										},
										{
											"begin": 22501,
											"end": 22505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22375,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 22375,
											"end": 22506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22375,
											"end": 22506,
											"name": "tag",
											"source": 9,
											"value": "680"
										},
										{
											"begin": 22375,
											"end": 22506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22367,
											"end": 22506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22367,
											"end": 22506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22519,
											"end": 22739,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 22519,
											"end": 22739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22659,
											"end": 22693,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E5374616B696E673A204E6F207265776172647320746F20636C6169"
										},
										{
											"begin": 22655,
											"end": 22656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22647,
											"end": 22653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22643,
											"end": 22657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22728,
											"end": 22731,
											"name": "PUSH",
											"source": 9,
											"value": "6D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22723,
											"end": 22725,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22715,
											"end": 22721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22711,
											"end": 22726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22704,
											"end": 22732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22519,
											"end": 22739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22519,
											"end": 22739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 23111,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 22745,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22887,
											"end": 22890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22908,
											"end": 22975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "683"
										},
										{
											"begin": 22972,
											"end": 22974,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 22967,
											"end": 22970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22908,
											"end": 22975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 22908,
											"end": 22975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22908,
											"end": 22975,
											"name": "tag",
											"source": 9,
											"value": "683"
										},
										{
											"begin": 22908,
											"end": 22975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22901,
											"end": 22975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22901,
											"end": 22975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22984,
											"end": 23077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 23073,
											"end": 23076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22984,
											"end": 23077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 22984,
											"end": 23077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22984,
											"end": 23077,
											"name": "tag",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 22984,
											"end": 23077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23102,
											"end": 23104,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23097,
											"end": 23100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23093,
											"end": 23105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23086,
											"end": 23105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23086,
											"end": 23105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 23111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 23111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 23111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 23111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23117,
											"end": 23536,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 23117,
											"end": 23536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23283,
											"end": 23287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23321,
											"end": 23323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23310,
											"end": 23319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23306,
											"end": 23324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23298,
											"end": 23324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23298,
											"end": 23324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23370,
											"end": 23379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23364,
											"end": 23368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23360,
											"end": 23380,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23356,
											"end": 23357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23345,
											"end": 23354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23341,
											"end": 23358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23334,
											"end": 23381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23398,
											"end": 23529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 23524,
											"end": 23528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23398,
											"end": 23529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 23398,
											"end": 23529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23398,
											"end": 23529,
											"name": "tag",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 23398,
											"end": 23529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23390,
											"end": 23529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23390,
											"end": 23529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23117,
											"end": 23536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23117,
											"end": 23536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23117,
											"end": 23536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23117,
											"end": 23536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23767,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 23542,
											"end": 23767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23682,
											"end": 23716,
											"name": "PUSH",
											"source": 9,
											"value": "5374616B696E673A20416D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 23678,
											"end": 23679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23670,
											"end": 23676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23666,
											"end": 23680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23659,
											"end": 23717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23751,
											"end": 23759,
											"name": "PUSH",
											"source": 9,
											"value": "7468616E20300000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23746,
											"end": 23748,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23738,
											"end": 23744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23734,
											"end": 23749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23727,
											"end": 23760,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 24139,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 23773,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23915,
											"end": 23918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23936,
											"end": 24003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 24000,
											"end": 24002,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 23995,
											"end": 23998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23936,
											"end": 24003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 23936,
											"end": 24003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23936,
											"end": 24003,
											"name": "tag",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 23936,
											"end": 24003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23929,
											"end": 24003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23929,
											"end": 24003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24012,
											"end": 24105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "690"
										},
										{
											"begin": 24101,
											"end": 24104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24012,
											"end": 24105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 24012,
											"end": 24105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24012,
											"end": 24105,
											"name": "tag",
											"source": 9,
											"value": "690"
										},
										{
											"begin": 24012,
											"end": 24105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24130,
											"end": 24132,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24125,
											"end": 24128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24121,
											"end": 24133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24114,
											"end": 24133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24114,
											"end": 24133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 24139,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 24139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 24139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 24139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24564,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 24145,
											"end": 24564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24311,
											"end": 24315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24349,
											"end": 24351,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24338,
											"end": 24347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24334,
											"end": 24352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24326,
											"end": 24352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24326,
											"end": 24352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24398,
											"end": 24407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24392,
											"end": 24396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24388,
											"end": 24408,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24384,
											"end": 24385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24373,
											"end": 24382,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24369,
											"end": 24386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24362,
											"end": 24409,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24426,
											"end": 24557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 24552,
											"end": 24556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24426,
											"end": 24557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 24426,
											"end": 24557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24426,
											"end": 24557,
											"name": "tag",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 24426,
											"end": 24557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24418,
											"end": 24557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24418,
											"end": 24557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24564,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24570,
											"end": 24743,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 24570,
											"end": 24743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24710,
											"end": 24735,
											"name": "PUSH",
											"source": 9,
											"value": "5374616B696E673A204E6F204E46542062616C616E6365000000000000000000"
										},
										{
											"begin": 24706,
											"end": 24707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24698,
											"end": 24704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24687,
											"end": 24736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24570,
											"end": 24743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24570,
											"end": 24743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24749,
											"end": 25115,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 24749,
											"end": 25115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24891,
											"end": 24894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24912,
											"end": 24979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "695"
										},
										{
											"begin": 24976,
											"end": 24978,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 24971,
											"end": 24974,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24912,
											"end": 24979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 24912,
											"end": 24979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24912,
											"end": 24979,
											"name": "tag",
											"source": 9,
											"value": "695"
										},
										{
											"begin": 24912,
											"end": 24979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24905,
											"end": 24979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24905,
											"end": 24979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 25077,
											"end": 25080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 24988,
											"end": 25081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25081,
											"name": "tag",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 24988,
											"end": 25081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25106,
											"end": 25108,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25097,
											"end": 25109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25090,
											"end": 25109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25090,
											"end": 25109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24749,
											"end": 25115,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24749,
											"end": 25115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24749,
											"end": 25115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24749,
											"end": 25115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25121,
											"end": 25540,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 25121,
											"end": 25540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25287,
											"end": 25291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25325,
											"end": 25327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25314,
											"end": 25323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25310,
											"end": 25328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25302,
											"end": 25328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25302,
											"end": 25328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25374,
											"end": 25383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25368,
											"end": 25372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25360,
											"end": 25361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25349,
											"end": 25358,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25345,
											"end": 25362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25338,
											"end": 25385,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25402,
											"end": 25533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "698"
										},
										{
											"begin": 25528,
											"end": 25532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25402,
											"end": 25533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 25402,
											"end": 25533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25402,
											"end": 25533,
											"name": "tag",
											"source": 9,
											"value": "698"
										},
										{
											"begin": 25402,
											"end": 25533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25394,
											"end": 25533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25394,
											"end": 25533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25121,
											"end": 25540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25121,
											"end": 25540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25121,
											"end": 25540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25121,
											"end": 25540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25546,
											"end": 25720,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 25546,
											"end": 25720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25686,
											"end": 25712,
											"name": "PUSH",
											"source": 9,
											"value": "5374616B696E673A20417070726F76616C206661696C65640000000000000000"
										},
										{
											"begin": 25682,
											"end": 25683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25674,
											"end": 25680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25670,
											"end": 25684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25663,
											"end": 25713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25546,
											"end": 25720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25546,
											"end": 25720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25726,
											"end": 26092,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 25726,
											"end": 26092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25868,
											"end": 25871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25889,
											"end": 25956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 25953,
											"end": 25955,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 25948,
											"end": 25951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25889,
											"end": 25956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 25889,
											"end": 25956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25889,
											"end": 25956,
											"name": "tag",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 25889,
											"end": 25956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25882,
											"end": 25956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25882,
											"end": 25956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25965,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 26054,
											"end": 26057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25965,
											"end": 26058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 25965,
											"end": 26058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25965,
											"end": 26058,
											"name": "tag",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 25965,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26083,
											"end": 26085,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26078,
											"end": 26081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26074,
											"end": 26086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26067,
											"end": 26086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26067,
											"end": 26086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25726,
											"end": 26092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25726,
											"end": 26092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25726,
											"end": 26092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25726,
											"end": 26092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26098,
											"end": 26517,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 26098,
											"end": 26517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26264,
											"end": 26268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26302,
											"end": 26304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26291,
											"end": 26300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26279,
											"end": 26305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26279,
											"end": 26305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26351,
											"end": 26360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26345,
											"end": 26349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26341,
											"end": 26361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26337,
											"end": 26338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26326,
											"end": 26335,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26322,
											"end": 26339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26315,
											"end": 26362,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26379,
											"end": 26510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "704"
										},
										{
											"begin": 26505,
											"end": 26509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26379,
											"end": 26510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 26379,
											"end": 26510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26379,
											"end": 26510,
											"name": "tag",
											"source": 9,
											"value": "704"
										},
										{
											"begin": 26379,
											"end": 26510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26371,
											"end": 26510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26371,
											"end": 26510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26098,
											"end": 26517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26098,
											"end": 26517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26098,
											"end": 26517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26098,
											"end": 26517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26672,
											"end": 26676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26710,
											"end": 26712,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 26699,
											"end": 26708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26695,
											"end": 26713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26687,
											"end": 26713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26687,
											"end": 26713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26723,
											"end": 26794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "706"
										},
										{
											"begin": 26791,
											"end": 26792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26780,
											"end": 26789,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26776,
											"end": 26793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26767,
											"end": 26773,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 26723,
											"end": 26794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 26723,
											"end": 26794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26723,
											"end": 26794,
											"name": "tag",
											"source": 9,
											"value": "706"
										},
										{
											"begin": 26723,
											"end": 26794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26804,
											"end": 26876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "707"
										},
										{
											"begin": 26872,
											"end": 26874,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26861,
											"end": 26870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26857,
											"end": 26875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26848,
											"end": 26854,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 26804,
											"end": 26876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 26804,
											"end": 26876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26804,
											"end": 26876,
											"name": "tag",
											"source": 9,
											"value": "707"
										},
										{
											"begin": 26804,
											"end": 26876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26886,
											"end": 26958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "708"
										},
										{
											"begin": 26954,
											"end": 26956,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 26943,
											"end": 26952,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26939,
											"end": 26957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26930,
											"end": 26936,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26886,
											"end": 26958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 26886,
											"end": 26958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26886,
											"end": 26958,
											"name": "tag",
											"source": 9,
											"value": "708"
										},
										{
											"begin": 26886,
											"end": 26958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26523,
											"end": 26965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26971,
											"end": 27151,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 26971,
											"end": 27151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27111,
											"end": 27143,
											"name": "PUSH",
											"source": 9,
											"value": "5374616B696E673A20546F6B656E207472616E73666572206661696C65640000"
										},
										{
											"begin": 27107,
											"end": 27108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27099,
											"end": 27105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27095,
											"end": 27109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27088,
											"end": 27144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26971,
											"end": 27151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26971,
											"end": 27151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27157,
											"end": 27523,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 27157,
											"end": 27523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27299,
											"end": 27302,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27320,
											"end": 27387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 27384,
											"end": 27386,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 27379,
											"end": 27382,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27320,
											"end": 27387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 27320,
											"end": 27387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27320,
											"end": 27387,
											"name": "tag",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 27320,
											"end": 27387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27313,
											"end": 27387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27313,
											"end": 27387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27396,
											"end": 27489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "712"
										},
										{
											"begin": 27485,
											"end": 27488,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27396,
											"end": 27489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 27396,
											"end": 27489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27396,
											"end": 27489,
											"name": "tag",
											"source": 9,
											"value": "712"
										},
										{
											"begin": 27396,
											"end": 27489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27514,
											"end": 27516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27509,
											"end": 27512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27505,
											"end": 27517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27498,
											"end": 27517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27498,
											"end": 27517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27157,
											"end": 27523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27157,
											"end": 27523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27157,
											"end": 27523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27157,
											"end": 27523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27529,
											"end": 27948,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 27529,
											"end": 27948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27695,
											"end": 27699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27733,
											"end": 27735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27722,
											"end": 27731,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27718,
											"end": 27736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27710,
											"end": 27736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27710,
											"end": 27736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27782,
											"end": 27791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27776,
											"end": 27780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27772,
											"end": 27792,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27768,
											"end": 27769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27757,
											"end": 27766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27753,
											"end": 27770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27746,
											"end": 27793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27810,
											"end": 27941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 27936,
											"end": 27940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27810,
											"end": 27941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 27810,
											"end": 27941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27810,
											"end": 27941,
											"name": "tag",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 27810,
											"end": 27941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27802,
											"end": 27941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27802,
											"end": 27941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27529,
											"end": 27948,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27529,
											"end": 27948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27529,
											"end": 27948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27529,
											"end": 27948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27954,
											"end": 28121,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 27954,
											"end": 28121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28094,
											"end": 28113,
											"name": "PUSH",
											"source": 9,
											"value": "5374616B65206578636565647320636170000000000000000000000000000000"
										},
										{
											"begin": 28090,
											"end": 28091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28082,
											"end": 28088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28078,
											"end": 28092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28071,
											"end": 28114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27954,
											"end": 28121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27954,
											"end": 28121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28269,
											"end": 28272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 28354,
											"end": 28356,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 28349,
											"end": 28352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 28290,
											"end": 28357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "tag",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28283,
											"end": 28357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28283,
											"end": 28357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "718"
										},
										{
											"begin": 28455,
											"end": 28458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 28366,
											"end": 28459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "tag",
											"source": 9,
											"value": "718"
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28484,
											"end": 28486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28479,
											"end": 28482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28475,
											"end": 28487,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28468,
											"end": 28487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28468,
											"end": 28487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28127,
											"end": 28493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28665,
											"end": 28669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28703,
											"end": 28705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28692,
											"end": 28701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28688,
											"end": 28706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28680,
											"end": 28706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28680,
											"end": 28706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28752,
											"end": 28761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28746,
											"end": 28750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28742,
											"end": 28762,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28738,
											"end": 28739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28727,
											"end": 28736,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28723,
											"end": 28740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28716,
											"end": 28763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "720"
										},
										{
											"begin": 28906,
											"end": 28910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 28780,
											"end": 28911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "tag",
											"source": 9,
											"value": "720"
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28772,
											"end": 28911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28772,
											"end": 28911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28499,
											"end": 28918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29045,
											"end": 29049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29083,
											"end": 29085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 29072,
											"end": 29081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29068,
											"end": 29086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29060,
											"end": 29086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29060,
											"end": 29086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29096,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "722"
										},
										{
											"begin": 29164,
											"end": 29165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29153,
											"end": 29162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29149,
											"end": 29166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29140,
											"end": 29146,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29096,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 29096,
											"end": 29167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29096,
											"end": 29167,
											"name": "tag",
											"source": 9,
											"value": "722"
										},
										{
											"begin": 29096,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29177,
											"end": 29249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 29245,
											"end": 29247,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29234,
											"end": 29243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29230,
											"end": 29248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29221,
											"end": 29227,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29177,
											"end": 29249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 29177,
											"end": 29249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29177,
											"end": 29249,
											"name": "tag",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 29177,
											"end": 29249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28924,
											"end": 29256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"_ADMIN()": "51557289",
							"_MINTER()": "a56bef5d",
							"_RESCUE()": "8d580b9f",
							"calculatePendingRewards(address)": "097aad10",
							"claimInterval()": "0b433a12",
							"claimRewards()": "372500ab",
							"ethRescue(address,uint256)": "48132f48",
							"getBlock()": "2e97766d",
							"getLevel(address)": "817c8966",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"ifacenft()": "b0ad08df",
							"lastUpdateBlock()": "a218141b",
							"moveERC20(address,address,uint256)": "41f431fd",
							"nft()": "47ccca02",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardBonus()": "fdf553cf",
							"rewardRatePerBlock()": "90870492",
							"setClaimInterval(uint256)": "f2d57adf",
							"setNFT(address)": "f56e9c66",
							"setRewardRatePerBlock(uint256)": "b2f196f6",
							"setToken(address)": "144fa6d7",
							"stake(uint256)": "a694fc3a",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"totalRewards()": "0e15561a",
							"totalStaked()": "817b1cd2",
							"unstake(uint256)": "2e17de78",
							"userInfo(address)": "1959a002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMintableToken\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"contract nftIface\",\"name\":\"_ifacenft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_RESCUE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"calculatePendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_etherAmount\",\"type\":\"uint256\"}],\"name\":\"ethRescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ifacenft\",\"outputs\":[{\"internalType\":\"contract nftIface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_ERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ERC20Amount\",\"type\":\"uint256\"}],\"name\":\"moveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"silver\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bronze\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_niw\",\"type\":\"uint256\"}],\"name\":\"setClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_newGoldNFT\",\"type\":\"address\"}],\"name\":\"setNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRewardRatePerBlock\",\"type\":\"uint256\"}],\"name\":\"setRewardRatePerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMintableToken\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IMintableToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows users to stake ERC20 tokens and claim rewards based on the staking duration. It also supports NFT-based reward bonuses. The contract is protected against reentrancy attacks and uses role-based access control for administrative functions.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"calculatePendingRewards(address)\":{\"details\":\"Calculates the pending rewards for a staker based on their staking duration and NFT level.\",\"params\":{\"_staker\":\"The address of the staker.\"},\"returns\":{\"_0\":\"The amount of pending rewards.\"}},\"claimRewards()\":{\"details\":\"Public function to claim staking rewards. The nonReentrant modifier ensures no reentrancy attack.\"},\"constructor\":{\"details\":\"Constructor to initialize the staking contract with the token, claim interval, NFT, and NFT interface.\",\"params\":{\"_claimInterval\":\"The interval (in blocks) between reward claims.\",\"_ifacenft\":\"The address of the NFT interface contract.\",\"_nft\":\"The address of the ERC-721 NFT contract.\",\"_token\":\"The address of the mintable ERC-20 token contract.\"}},\"ethRescue(address,uint256)\":{\"details\":\"Allows an authorized user to rescue Ether sent to the contract by mistake. Only callable by a user with the RESCUE role.\",\"params\":{\"_dest\":\"The address to send the rescued Ether to.\",\"_etherAmount\":\"The amount of Ether to rescue.\"}},\"getBlock()\":{\"details\":\"Returns the current block number.\",\"returns\":{\"_0\":\"The current block number.\"}},\"getLevel(address)\":{\"details\":\"Gets the NFT level of a user.\",\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The NFT level of the user.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"moveERC20(address,address,uint256)\":{\"details\":\"Allows an authorized user to rescue ERC20 tokens sent to the contract by mistake. Only callable by a user with the RESCUE role.\",\"params\":{\"_ERC20\":\"The address of the ERC20 token to rescue.\",\"_ERC20Amount\":\"The amount of tokens to rescue.\",\"_dest\":\"The address to send the rescued tokens to.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimInterval(uint256)\":{\"details\":\"Sets a new claim interval. Only callable by an admin.\",\"params\":{\"_niw\":\"The new claim interval in blocks.\"}},\"setNFT(address)\":{\"details\":\"Sets a new NFT contract. Only callable by an admin.\",\"params\":{\"_newGoldNFT\":\"The address of the new ERC-721 NFT contract.\"}},\"setRewardRatePerBlock(uint256)\":{\"details\":\"Sets a new reward rate per block. Only callable by an admin.\",\"params\":{\"_newRewardRatePerBlock\":\"The new reward rate per block.\"}},\"setToken(address)\":{\"details\":\"Sets a new token contract for staking. Only callable by an admin.\",\"params\":{\"_newToken\":\"The address of the new mintable token contract.\"}},\"stake(uint256)\":{\"details\":\"Public function to stake tokens. The nonReentrant modifier ensures no reentrancy attack.\",\"params\":{\"_amount\":\"The amount of tokens to stake.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unstake(uint256)\":{\"details\":\"Public function to unstake tokens. The nonReentrant modifier ensures no reentrancy attack.\",\"params\":{\"_amount\":\"The amount of tokens to unstake.\"}}},\"title\":\"TokenStaking\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking.sol\":\"TokenStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/staking.sol\":{\"keccak256\":\"0x074121075388873b92cd86e7f9aca37f82e430a368076cdf9eec55887aee3dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f267caf6d1affa96ba144079bc389ebdb87098711a397f460d81ab08745646af\",\"dweb:/ipfs/QmZbzS5atAJZKMxgm8hADtANKffHAJJYcxAU3um4Dsy2dm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "src/staking.sol:TokenStaking",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 389,
								"contract": "src/staking.sol:TokenStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 747,
								"contract": "src/staking.sol:TokenStaking",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IMintableToken)739"
							},
							{
								"astId": 750,
								"contract": "src/staking.sol:TokenStaking",
								"label": "nft",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)638"
							},
							{
								"astId": 753,
								"contract": "src/staking.sol:TokenStaking",
								"label": "ifacenft",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(nftIface)729"
							},
							{
								"astId": 755,
								"contract": "src/staking.sol:TokenStaking",
								"label": "rewardRatePerBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 757,
								"contract": "src/staking.sol:TokenStaking",
								"label": "lastUpdateBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 759,
								"contract": "src/staking.sol:TokenStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 761,
								"contract": "src/staking.sol:TokenStaking",
								"label": "totalRewards",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 763,
								"contract": "src/staking.sol:TokenStaking",
								"label": "claimInterval",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 793,
								"contract": "src/staking.sol:TokenStaking",
								"label": "rewardBonus",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(RewardLevelBonus)790_storage"
							},
							{
								"astId": 798,
								"contract": "src/staking.sol:TokenStaking",
								"label": "userInfo",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_struct(UserInfo)783_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC721)638": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMintableToken)739": {
								"encoding": "inplace",
								"label": "contract IMintableToken",
								"numberOfBytes": "20"
							},
							"t_contract(nftIface)729": {
								"encoding": "inplace",
								"label": "contract nftIface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)783_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenStaking.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)783_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RewardLevelBonus)790_storage": {
								"encoding": "inplace",
								"label": "struct TokenStaking.RewardLevelBonus",
								"members": [
									{
										"astId": 785,
										"contract": "src/staking.sol:TokenStaking",
										"label": "gold",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 787,
										"contract": "src/staking.sol:TokenStaking",
										"label": "silver",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 789,
										"contract": "src/staking.sol:TokenStaking",
										"label": "bronze",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/staking.sol:TokenStaking",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/staking.sol:TokenStaking",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)783_storage": {
								"encoding": "inplace",
								"label": "struct TokenStaking.UserInfo",
								"members": [
									{
										"astId": 780,
										"contract": "src/staking.sol:TokenStaking",
										"label": "stakedBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 782,
										"contract": "src/staking.sol:TokenStaking",
										"label": "lastClaimBlock",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"nftIface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "nftOwnerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nftOwnerInfo(address)": "1ab0d49e",
							"tokenURI(uint256)": "c87b56dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nftOwnerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking.sol\":\"nftIface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/staking.sol\":{\"keccak256\":\"0x074121075388873b92cd86e7f9aca37f82e430a368076cdf9eec55887aee3dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f267caf6d1affa96ba144079bc389ebdb87098711a397f460d81ab08745646af\",\"dweb:/ipfs/QmZbzS5atAJZKMxgm8hADtANKffHAJJYcxAU3um4Dsy2dm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							668
						],
						"ERC165": [
							692
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 669,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 668,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 693,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 692,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 668,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 692,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								692,
								704,
								378,
								668
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										691
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 691,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							443
						]
					},
					"id": 444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 387,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 443,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 400,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 403,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 408,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 413,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 419,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 443,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 443,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 438,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 443,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 444,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							521
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 446,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 455,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 464,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 521,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 521,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 521,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 521,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 521,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 521,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 522,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								455,
								464
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							704
						],
						"IERC721": [
							638
						]
					},
					"id": 639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 705,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 704,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "287:7:4"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								704
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 537,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 546,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 555,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 638,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 638,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 638,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 638,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 638,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 638,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 638,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 638,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 638,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 639,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								537,
								546,
								555
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							668
						]
					},
					"id": 669,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 641,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 668,
							"linearizedBaseContracts": [
								668
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 646,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 645,
												"id": 648,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 668,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 655,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 654,
												"id": 657,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 668,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 663,
												"id": 665,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 668,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 669,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							692
						],
						"IERC165": [
							704
						]
					},
					"id": 693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 670,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 693,
							"sourceUnit": 705,
							"src": "140:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 671,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 704,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 674,
										"name": "IERC165",
										"nameLocations": [
											"687:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "687:7:6"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 673,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 692,
							"linearizedBaseContracts": [
								692,
								704
							],
							"name": "ERC165",
							"nameLocation": "677:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "844:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "861:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 685,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "881:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$704_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$704_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 684,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$704",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 689,
												"nodeType": "Return",
												"src": "854:47:6"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "789:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 677,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:6"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "838:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:6"
									},
									"scope": 692,
									"src": "762:146:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 693,
							"src": "659:251:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							704
						]
					},
					"id": 705,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 704,
							"linearizedBaseContracts": [
								704
							],
							"name": "IERC165",
							"nameLocation": "431:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "817:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 697,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:7"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:7"
									},
									"scope": 704,
									"src": "790:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 705,
							"src": "421:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:7"
				},
				"id": 7
			},
			"src/staking.sol": {
				"ast": {
					"absolutePath": "src/staking.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"IERC20": [
							521
						],
						"IERC721": [
							638
						],
						"IMintableToken": [
							739
						],
						"ReentrancyGuard": [
							443
						],
						"TokenStaking": [
							1382
						],
						"nftIface": [
							729
						]
					},
					"id": 1383,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 708,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1383,
							"sourceUnit": 522,
							"src": "57:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 707,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 521,
										"src": "65:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1383,
							"sourceUnit": 639,
							"src": "128:73:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 709,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 638,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1383,
							"sourceUnit": 296,
							"src": "202:79:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 711,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "210:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1383,
							"sourceUnit": 444,
							"src": "282:85:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 713,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 443,
										"src": "290:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "nftIface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "nftIface",
							"nameLocation": "379:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c87b56dd",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "403:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "420:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "412:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:17:8"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "452:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "452:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:15:8"
									},
									"scope": 729,
									"src": "394:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ab0d49e",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nftOwnerInfo",
									"nameLocation": "481:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "502:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "494:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:14:8"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "531:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:8"
									},
									"scope": 729,
									"src": "472:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1383,
							"src": "369:173:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 730,
										"name": "IERC20",
										"nameLocations": [
											"572:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 521,
										"src": "572:6:8"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "572:6:8"
								}
							],
							"canonicalName": "IMintableToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 739,
							"linearizedBaseContracts": [
								739,
								521
							],
							"name": "IMintableToken",
							"nameLocation": "554:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "449a52f8",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintTo",
									"nameLocation": "594:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "609:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "601:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "628:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "620:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:35:8"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:0:8"
									},
									"scope": 739,
									"src": "585:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1383,
							"src": "544:103:8",
							"usedErrors": [],
							"usedEvents": [
								455,
								464
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 741,
										"name": "AccessControl",
										"nameLocations": [
											"978:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "978:13:8"
									},
									"id": 742,
									"nodeType": "InheritanceSpecifier",
									"src": "978:13:8"
								},
								{
									"baseName": {
										"id": 743,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"993:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "993:15:8"
									},
									"id": 744,
									"nodeType": "InheritanceSpecifier",
									"src": "993:15:8"
								}
							],
							"canonicalName": "TokenStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 740,
								"nodeType": "StructuredDocumentation",
								"src": "649:303:8",
								"text": " @title TokenStaking\n @dev This contract allows users to stake ERC20 tokens and claim rewards based on the staking duration.\n It also supports NFT-based reward bonuses. The contract is protected against reentrancy attacks and\n uses role-based access control for administrative functions."
							},
							"fullyImplemented": true,
							"id": 1382,
							"linearizedBaseContracts": [
								1382,
								443,
								295,
								692,
								704,
								378,
								668
							],
							"name": "TokenStaking",
							"nameLocation": "962:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 747,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1038:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1016:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMintableToken_$739",
										"typeString": "contract IMintableToken"
									},
									"typeName": {
										"id": 746,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 745,
											"name": "IMintableToken",
											"nameLocations": [
												"1016:14:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 739,
											"src": "1016:14:8"
										},
										"referencedDeclaration": 739,
										"src": "1016:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMintableToken_$739",
											"typeString": "contract IMintableToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 750,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "1122:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1107:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$638",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 749,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 748,
											"name": "IERC721",
											"nameLocations": [
												"1107:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 638,
											"src": "1107:7:8"
										},
										"referencedDeclaration": 638,
										"src": "1107:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$638",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0ad08df",
									"id": 753,
									"mutability": "mutable",
									"name": "ifacenft",
									"nameLocation": "1217:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1201:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_nftIface_$729",
										"typeString": "contract nftIface"
									},
									"typeName": {
										"id": 752,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 751,
											"name": "nftIface",
											"nameLocations": [
												"1201:8:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "1201:8:8"
										},
										"referencedDeclaration": 729,
										"src": "1201:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_nftIface_$729",
											"typeString": "contract nftIface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90870492",
									"id": 755,
									"mutability": "mutable",
									"name": "rewardRatePerBlock",
									"nameLocation": "1296:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1281:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 754,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1281:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a218141b",
									"id": 757,
									"mutability": "mutable",
									"name": "lastUpdateBlock",
									"nameLocation": "1372:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1357:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 756,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1357:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 759,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1462:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1447:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 758,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1447:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 761,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "1543:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1528:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1528:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b433a12",
									"id": 763,
									"mutability": "mutable",
									"name": "claimInterval",
									"nameLocation": "1615:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1600:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 762,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1600:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8d580b9f",
									"id": 768,
									"mutability": "constant",
									"name": "_RESCUE",
									"nameLocation": "1762:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1738:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 764,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1738:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f524553435545",
												"id": 766,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1782:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9",
													"typeString": "literal_string \"_RESCUE\""
												},
												"value": "_RESCUE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9",
													"typeString": "literal_string \"_RESCUE\""
												}
											],
											"id": 765,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1772:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 767,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1772:20:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "51557289",
									"id": 773,
									"mutability": "constant",
									"name": "_ADMIN",
									"nameLocation": "1822:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1798:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 769,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1798:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f41444d494e",
												"id": 771,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1841:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3",
													"typeString": "literal_string \"_ADMIN\""
												},
												"value": "_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3",
													"typeString": "literal_string \"_ADMIN\""
												}
											],
											"id": 770,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1831:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 772,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1831:19:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a56bef5d",
									"id": 778,
									"mutability": "constant",
									"name": "_MINTER",
									"nameLocation": "1880:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "1856:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 774,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1856:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4d494e544552",
												"id": 776,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1900:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8c342c7aca7f35847406e6353e35c5762132fa3e958179931981d120af75dfb2",
													"typeString": "literal_string \"_MINTER\""
												},
												"value": "_MINTER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8c342c7aca7f35847406e6353e35c5762132fa3e958179931981d120af75dfb2",
													"typeString": "literal_string \"_MINTER\""
												}
											],
											"id": 775,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1890:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 777,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1890:20:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TokenStaking.UserInfo",
									"id": 783,
									"members": [
										{
											"constant": false,
											"id": 780,
											"mutability": "mutable",
											"name": "stakedBalance",
											"nameLocation": "2010:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 783,
											"src": "2002:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 779,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2002:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 782,
											"mutability": "mutable",
											"name": "lastClaimBlock",
											"nameLocation": "2084:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 783,
											"src": "2076:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 781,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2076:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1983:8:8",
									"nodeType": "StructDefinition",
									"scope": 1382,
									"src": "1976:181:8",
									"visibility": "public"
								},
								{
									"canonicalName": "TokenStaking.RewardLevelBonus",
									"id": 790,
									"members": [
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "gold",
											"nameLocation": "2270:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "2262:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 784,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2262:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 787,
											"mutability": "mutable",
											"name": "silver",
											"nameLocation": "2330:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "2322:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2322:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 789,
											"mutability": "mutable",
											"name": "bronze",
											"nameLocation": "2392:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 790,
											"src": "2384:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2384:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RewardLevelBonus",
									"nameLocation": "2235:16:8",
									"nodeType": "StructDefinition",
									"scope": 1382,
									"src": "2228:215:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdf553cf",
									"id": 793,
									"mutability": "mutable",
									"name": "rewardBonus",
									"nameLocation": "2473:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "2449:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage",
										"typeString": "struct TokenStaking.RewardLevelBonus"
									},
									"typeName": {
										"id": 792,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 791,
											"name": "RewardLevelBonus",
											"nameLocations": [
												"2449:16:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 790,
											"src": "2449:16:8"
										},
										"referencedDeclaration": 790,
										"src": "2449:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage_ptr",
											"typeString": "struct TokenStaking.RewardLevelBonus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 798,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "2632:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1382,
									"src": "2596:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$783_storage_$",
										"typeString": "mapping(address => struct TokenStaking.UserInfo)"
									},
									"typeName": {
										"id": 797,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 794,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2604:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2596:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$783_storage_$",
											"typeString": "mapping(address => struct TokenStaking.UserInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 796,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 795,
												"name": "UserInfo",
												"nameLocations": [
													"2615:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 783,
												"src": "2615:8:8"
											},
											"referencedDeclaration": 783,
											"src": "2615:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
												"typeString": "struct TokenStaking.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 804,
									"name": "Staked",
									"nameLocation": "2714:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2737:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2721:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2753:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2745:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:40:8"
									},
									"src": "2708:53:8"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 810,
									"name": "Unstaked",
									"nameLocation": "2772:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2797:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2781:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2813:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2805:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:40:8"
									},
									"src": "2766:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "2d5429efdeca7741a8cd94067b18d988bc4e5f1d5b8272c37b7bfc31e9bfa32c",
									"id": 816,
									"name": "ClaimedRewards",
									"nameLocation": "2832:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2863:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "2847:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2879:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "2871:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:40:8"
									},
									"src": "2826:61:8"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "3390:311:8",
										"statements": [
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 831,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "3400:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMintableToken_$739",
															"typeString": "contract IMintableToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 832,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3408:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMintableToken_$739",
															"typeString": "contract IMintableToken"
														}
													},
													"src": "3400:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMintableToken_$739",
														"typeString": "contract IMintableToken"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "3400:14:8"
											},
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3424:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 836,
														"name": "_nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3430:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"src": "3424:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$638",
														"typeString": "contract IERC721"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "3424:10:8"
											},
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 839,
														"name": "ifacenft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3444:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_nftIface_$729",
															"typeString": "contract nftIface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 840,
														"name": "_ifacenft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "3455:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_nftIface_$729",
															"typeString": "contract nftIface"
														}
													},
													"src": "3444:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_nftIface_$729",
														"typeString": "contract nftIface"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "3444:20:8"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "rewardRatePerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "3474:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "302e30303038",
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3495:12:8",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_800000000000000_by_1",
															"typeString": "int_const 800000000000000"
														},
														"value": "0.0008"
													},
													"src": "3474:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "3474:33:8"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "lastUpdateBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "3517:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 848,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3535:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3541:6:8",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3535:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3517:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "3517:30:8"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 852,
														"name": "claimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3557:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 853,
														"name": "_claimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3573:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3557:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "3557:30:8"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "rewardBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3597:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage",
															"typeString": "struct TokenStaking.RewardLevelBonus storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "302e303031",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3636:11:8",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																"value": "0.001"
															},
															{
																"hexValue": "302e30303035",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3657:12:8",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000_by_1",
																	"typeString": "int_const 500000000000000"
																},
																"value": "0.0005"
															},
															{
																"hexValue": "302e30303032",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3679:12:8",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200000000000000_by_1",
																	"typeString": "int_const 200000000000000"
																},
																"value": "0.0002"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																{
																	"typeIdentifier": "t_rational_500000000000000_by_1",
																	"typeString": "int_const 500000000000000"
																},
																{
																	"typeIdentifier": "t_rational_200000000000000_by_1",
																	"typeString": "int_const 200000000000000"
																}
															],
															"id": 857,
															"name": "RewardLevelBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "3611:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RewardLevelBonus_$790_storage_ptr_$",
																"typeString": "type(struct TokenStaking.RewardLevelBonus storage pointer)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3630:4:8",
															"3649:6:8",
															"3671:6:8"
														],
														"names": [
															"gold",
															"silver",
															"bronze"
														],
														"nodeType": "FunctionCall",
														"src": "3611:83:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardLevelBonus_$790_memory_ptr",
															"typeString": "struct TokenStaking.RewardLevelBonus memory"
														}
													},
													"src": "3597:97:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage",
														"typeString": "struct TokenStaking.RewardLevelBonus storage ref"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "3597:97:8"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "2893:402:8",
										"text": " @dev Constructor to initialize the staking contract with the token, claim interval, NFT, and NFT interface.\n @param _token The address of the mintable ERC-20 token contract.\n @param _claimInterval The interval (in blocks) between reward claims.\n @param _nft The address of the ERC-721 NFT contract.\n @param _ifacenft The address of the NFT interface contract."
									},
									"id": 865,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3327:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "3312:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMintableToken_$739",
													"typeString": "contract IMintableToken"
												},
												"typeName": {
													"id": 819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 818,
														"name": "IMintableToken",
														"nameLocations": [
															"3312:14:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "3312:14:8"
													},
													"referencedDeclaration": 739,
													"src": "3312:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMintableToken_$739",
														"typeString": "contract IMintableToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_claimInterval",
												"nameLocation": "3340:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "3335:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3335:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "3364:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "3356:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$638",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 823,
														"name": "IERC721",
														"nameLocations": [
															"3356:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 638,
														"src": "3356:7:8"
													},
													"referencedDeclaration": 638,
													"src": "3356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$638",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "_ifacenft",
												"nameLocation": "3379:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "3370:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_nftIface_$729",
													"typeString": "contract nftIface"
												},
												"typeName": {
													"id": 827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 826,
														"name": "nftIface",
														"nameLocations": [
															"3370:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "3370:8:8"
													},
													"referencedDeclaration": 729,
													"src": "3370:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_nftIface_$729",
														"typeString": "contract nftIface"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:78:8"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:8"
									},
									"scope": 1382,
									"src": "3300:401:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3931:32:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3948:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "3941:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3941:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3941:15:8"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "3707:165:8",
										"text": " @dev Public function to stake tokens. The nonReentrant modifier ensures no reentrancy attack.\n @param _amount The amount of tokens to stake."
									},
									"functionSelector": "a694fc3a",
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 871,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 870,
												"name": "nonReentrant",
												"nameLocations": [
													"3918:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "3918:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3918:12:8"
										}
									],
									"name": "stake",
									"nameLocation": "3886:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3900:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3892:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3891:17:8"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3931:0:8"
									},
									"scope": 1382,
									"src": "3877:86:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "4199:34:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 887,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4218:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "_unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "4209:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "4209:17:8"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3969:169:8",
										"text": " @dev Public function to unstake tokens. The nonReentrant modifier ensures no reentrancy attack.\n @param _amount The amount of tokens to unstake."
									},
									"functionSelector": "2e17de78",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 883,
												"name": "nonReentrant",
												"nameLocations": [
													"4186:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "4186:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4186:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "4152:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4168:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4160:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:17:8"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4199:0:8"
									},
									"scope": 1382,
									"src": "4143:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "4409:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 898,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "4433:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4433:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 897,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "4419:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4419:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "4419:27:8"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "4239:121:8",
										"text": " @dev Public function to claim staking rewards. The nonReentrant modifier ensures no reentrancy attack."
									},
									"functionSelector": "372500ab",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 895,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 894,
												"name": "nonReentrant",
												"nameLocations": [
													"4396:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "4396:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4396:12:8"
										}
									],
									"name": "claimRewards",
									"nameLocation": "4374:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4386:2:8"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4409:0:8"
									},
									"scope": 1382,
									"src": "4365:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "4625:635:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 910,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "4643:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4653:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4643:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a20416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4656:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b",
																"typeString": "literal_string \"Staking: Amount must be greater than 0\""
															},
															"value": "Staking: Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6be0ae1c8787230851198050cbfa30b1c707450acee5e19e2cb8abf41c838f9b",
																"typeString": "literal_string \"Staking: Amount must be greater than 0\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4635:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4635:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "4635:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 919,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "4729:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4729:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 917,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "4715:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4719:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 563,
																	"src": "4715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4715:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4745:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4715:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a204e6f204e46542062616c616e6365",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4748:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc",
																"typeString": "literal_string \"Staking: No NFT balance\""
															},
															"value": "Staking: No NFT balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19687e2a70ef80864c4dff249b3b9db7f22e427c0e4016f3c78c6f5f5d32bacc",
																"typeString": "literal_string \"Staking: No NFT balance\""
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4707:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4707:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "4707:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 932,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4815:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenStaking_$1382",
																				"typeString": "contract TokenStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenStaking_$1382",
																				"typeString": "contract TokenStaking"
																			}
																		],
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4807:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 930,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4807:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4807:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "4822:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 928,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4793:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMintableToken_$739",
																		"typeString": "contract IMintableToken"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4799:7:8",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 508,
																"src": "4793:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4793:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a20417070726f76616c206661696c6564",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4832:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db",
																"typeString": "literal_string \"Staking: Approval failed\""
															},
															"value": "Staking: Approval failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_454d976121b74212753c7f4ea0f5993a0bb52e49405272541245db74ddc7c0db",
																"typeString": "literal_string \"Staking: Approval failed\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4785:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4785:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "4785:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 942,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "4896:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4896:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 946,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4918:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenStaking_$1382",
																				"typeString": "contract TokenStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenStaking_$1382",
																				"typeString": "contract TokenStaking"
																			}
																		],
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4910:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 944,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4910:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4910:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 948,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "4925:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 940,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4877:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMintableToken_$739",
																		"typeString": "contract IMintableToken"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4883:12:8",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 520,
																"src": "4877:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4877:56:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a20546f6b656e207472616e73666572206661696c6564",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4935:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9",
																"typeString": "literal_string \"Staking: Token transfer failed\""
															},
															"value": "Staking: Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f0fb8cd61a91ed69fa4d0079d066aadf487e131c23217efa36ed821478252f9",
																"typeString": "literal_string \"Staking: Token transfer failed\""
															}
														],
														"id": 939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4869:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4869:99:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "4869:99:8"
											},
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4996:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "4979:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
															"typeString": "struct TokenStaking.UserInfo"
														},
														"typeName": {
															"id": 954,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 953,
																"name": "UserInfo",
																"nameLocations": [
																	"4979:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 783,
																"src": "4979:8:8"
															},
															"referencedDeclaration": 783,
															"src": "4979:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"baseExpression": {
														"id": 956,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5003:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$783_storage_$",
															"typeString": "mapping(address => struct TokenStaking.UserInfo storage ref)"
														}
													},
													"id": 959,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 957,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5012:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5012:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5003:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$783_storage",
														"typeString": "struct TokenStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4979:46:8"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 961,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "5036:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo storage pointer"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5041:13:8",
														"memberName": "stakedBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 780,
														"src": "5036:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 964,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5058:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5036:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "5036:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 968,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "5083:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																		"typeString": "struct TokenStaking.UserInfo storage pointer"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5088:13:8",
																"memberName": "stakedBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 780,
																"src": "5083:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31653230",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5105:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000"
																},
																"value": "1e20"
															},
															"src": "5083:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206578636565647320636170",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5111:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5",
																"typeString": "literal_string \"Stake exceeds cap\""
															},
															"value": "Stake exceeds cap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a0a0b84324bd4ceac599b6cb5a07ba54b0a5a3bece1cd10ab480f4051bfd1d5",
																"typeString": "literal_string \"Stake exceeds cap\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5075:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5075:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "5075:56:8"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "5142:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 976,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5157:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5142:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "5142:22:8"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 979,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "5174:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo storage pointer"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5179:14:8",
														"memberName": "lastClaimBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 782,
														"src": "5174:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 982,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5196:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5202:6:8",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "5196:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5174:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "5174:34:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 987,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5231:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5231:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5245:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "5224:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5224:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "EmitStatement",
												"src": "5219:34:8"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "4459:119:8",
										"text": " @dev Internal function to handle staking logic.\n @param _amount The amount of tokens to stake."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "4592:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4607:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4599:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4599:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4598:17:8"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4625:0:8"
									},
									"scope": 1382,
									"src": "4583:677:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "5438:598:8",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5465:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "5448:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
															"typeString": "struct TokenStaking.UserInfo"
														},
														"typeName": {
															"id": 1000,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 999,
																"name": "UserInfo",
																"nameLocations": [
																	"5448:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 783,
																"src": "5448:8:8"
															},
															"referencedDeclaration": 783,
															"src": "5448:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"baseExpression": {
														"id": 1002,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5472:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$783_storage_$",
															"typeString": "mapping(address => struct TokenStaking.UserInfo storage ref)"
														}
													},
													"id": 1005,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1003,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5481:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5472:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$783_storage",
														"typeString": "struct TokenStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5448:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "5512:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5522:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5512:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a20416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5525:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2",
																"typeString": "literal_string \"TokenStaking: Amount must be greater than 0\""
															},
															"value": "TokenStaking: Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ca0a3e2979e819b7fa419aefea793f952936bd64adc4459a3e46ce1b9881df2",
																"typeString": "literal_string \"TokenStaking: Amount must be greater than 0\""
															}
														],
														"id": 1007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5504:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "5504:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1015,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "5589:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																		"typeString": "struct TokenStaking.UserInfo storage pointer"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5594:13:8",
																"memberName": "stakedBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 780,
																"src": "5589:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1017,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "5611:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5589:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a20496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5620:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20",
																"typeString": "literal_string \"TokenStaking: Insufficient staked balance\""
															},
															"value": "TokenStaking: Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36d0f33f5a6f0f233eb39f4808005b62dc5143ce5f09e465f166ce9cc2cbbd20",
																"typeString": "literal_string \"TokenStaking: Insufficient staked balance\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5581:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5581:83:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "5581:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1023,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5682:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5688:6:8",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "5682:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1025,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "5698:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																			"typeString": "struct TokenStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5703:14:8",
																	"memberName": "lastClaimBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 782,
																	"src": "5698:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1027,
																	"name": "claimInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "5720:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5698:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5682:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a20436c61696d20696e74657276616c206e6f74206d6574",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5735:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7",
																"typeString": "literal_string \"TokenStaking: Claim interval not met\""
															},
															"value": "TokenStaking: Claim interval not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7",
																"typeString": "literal_string \"TokenStaking: Claim interval not met\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5674:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5674:100:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "5674:100:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1034,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5799:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5799:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "5785:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "5785:27:8"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1038,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "5823:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo storage pointer"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5828:13:8",
														"memberName": "stakedBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 780,
														"src": "5823:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1041,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "5845:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5823:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "5823:29:8"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "5862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1045,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "5877:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5862:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "5862:22:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1051,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "5918:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5918:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1053,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "5932:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1049,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "5903:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMintableToken_$739",
																		"typeString": "contract IMintableToken"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5909:8:8",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 488,
																"src": "5903:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5903:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a20556e7374616b65207472616e73666572206661696c6564",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5942:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2",
																"typeString": "literal_string \"TokenStaking: Unstake transfer failed\""
															},
															"value": "TokenStaking: Unstake transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da2379db3e1cb67462d5219834bea4813ccfeace4ded72ee5d1415e20888b1f2",
																"typeString": "literal_string \"TokenStaking: Unstake transfer failed\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5895:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5895:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "5895:87:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1059,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "6007:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6007:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6021:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "5998:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "EmitStatement",
												"src": "5993:36:8"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "5266:123:8",
										"text": " @dev Internal function to handle unstaking logic.\n @param _amount The amount of tokens to unstake."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unstake",
									"nameLocation": "5403:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5420:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "5412:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:17:8"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5438:0:8"
									},
									"scope": 1382,
									"src": "5394:642:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "6234:570:8",
										"statements": [
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6261:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "6244:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
															"typeString": "struct TokenStaking.UserInfo"
														},
														"typeName": {
															"id": 1072,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1071,
																"name": "UserInfo",
																"nameLocations": [
																	"6244:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 783,
																"src": "6244:8:8"
															},
															"referencedDeclaration": 783,
															"src": "6244:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"baseExpression": {
														"id": 1074,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "6268:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$783_storage_$",
															"typeString": "mapping(address => struct TokenStaking.UserInfo storage ref)"
														}
													},
													"id": 1076,
													"indexExpression": {
														"id": 1075,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "6277:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6268:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$783_storage",
														"typeString": "struct TokenStaking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6244:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1079,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6302:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																		"typeString": "struct TokenStaking.UserInfo storage pointer"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6307:13:8",
																"memberName": "stakedBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 780,
																"src": "6302:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6323:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6302:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a204e6f207374616b65642062616c616e6365",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6326:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b",
																"typeString": "literal_string \"TokenStaking: No staked balance\""
															},
															"value": "TokenStaking: No staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5aa1e239423054db366248d756d48e8a1767180820f190023be3cd04a349c52b",
																"typeString": "literal_string \"TokenStaking: No staked balance\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6294:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6294:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "6294:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1087,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6378:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6384:6:8",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "6378:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1089,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "6394:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																			"typeString": "struct TokenStaking.UserInfo storage pointer"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6399:14:8",
																	"memberName": "lastClaimBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 782,
																	"src": "6394:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1091,
																	"name": "claimInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6416:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6394:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6378:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a20436c61696d20696e74657276616c206e6f74206d6574",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6431:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7",
																"typeString": "literal_string \"TokenStaking: Claim interval not met\""
															},
															"value": "TokenStaking: Claim interval not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_905a163cedac3fd0ac242e7396558b80697fcad50e2f5955afd8790ce4be78a7",
																"typeString": "literal_string \"TokenStaking: Claim interval not met\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6370:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6370:100:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "6370:100:8"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "pendingRewards",
														"nameLocation": "6489:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "6481:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6481:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"arguments": [
														{
															"id": 1100,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "6530:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1099,
														"name": "calculatePendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "6506:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6481:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1104,
																"name": "pendingRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "6555:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6572:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6555:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e5374616b696e673a204e6f207265776172647320746f20636c61696d",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6575:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af",
																"typeString": "literal_string \"TokenStaking: No rewards to claim\""
															},
															"value": "TokenStaking: No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f63c25868b94718e213c14e0461ff6d8e0152bc8874730f4b23681185b915af",
																"typeString": "literal_string \"TokenStaking: No rewards to claim\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6547:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6547:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "6547:64:8"
											},
											{
												"expression": {
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1110,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "6622:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage_ptr",
																"typeString": "struct TokenStaking.UserInfo storage pointer"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6627:14:8",
														"memberName": "lastClaimBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 782,
														"src": "6622:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1113,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6644:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6650:6:8",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "6644:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6622:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "6622:34:8"
											},
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1117,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "6666:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1118,
														"name": "pendingRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "6682:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6666:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "6666:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "6720:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "pendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "6728:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1121,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6707:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMintableToken_$739",
																"typeString": "contract IMintableToken"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6713:6:8",
														"memberName": "mintTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "6707:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "6707:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1129,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "6774:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1130,
															"name": "pendingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "6782:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "ClaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "6759:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6759:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "EmitStatement",
												"src": "6754:43:8"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "6042:139:8",
										"text": " @dev Internal function to handle reward claiming logic.\n @param staker The address of the staker claiming rewards."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRewards",
									"nameLocation": "6195:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "6217:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "6209:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6208:16:8"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6234:0:8"
									},
									"scope": 1382,
									"src": "6186:618:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "7104:585:8",
										"statements": [
											{
												"assignments": [
													1143
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "level",
														"nameLocation": "7122:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "7114:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7114:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"arguments": [
														{
															"id": 1145,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "7139:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1144,
														"name": "getLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "7130:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7130:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7114:33:8"
											},
											{
												"assignments": [
													1149
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "rewardBonusLevel",
														"nameLocation": "7165:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "7157:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7157:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"nodeType": "VariableDeclarationStatement",
												"src": "7157:24:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1151,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "7196:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7205:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7196:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1160,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "7278:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7287:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7278:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "7362:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7371:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "7362:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1182,
															"nodeType": "Block",
															"src": "7442:47:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4e6f204e4654204c6576656c",
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7463:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328",
																					"typeString": "literal_string \"No NFT Level\""
																				},
																				"value": "No NFT Level"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_f02b2e0469ee41e8e9dade6ffe874c41dd2d4eb0b343f933434e384eaed8a328",
																					"typeString": "literal_string \"No NFT Level\""
																				}
																			],
																			"id": 1178,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "7456:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7456:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1181,
																	"nodeType": "ExpressionStatement",
																	"src": "7456:22:8"
																}
															]
														},
														"id": 1183,
														"nodeType": "IfStatement",
														"src": "7358:131:8",
														"trueBody": {
															"id": 1177,
															"nodeType": "Block",
															"src": "7374:62:8",
															"statements": [
																{
																	"expression": {
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "rewardBonusLevel",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "7388:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 1173,
																				"name": "rewardBonus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "7407:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage",
																					"typeString": "struct TokenStaking.RewardLevelBonus storage ref"
																				}
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7419:6:8",
																			"memberName": "bronze",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 789,
																			"src": "7407:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7388:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1176,
																	"nodeType": "ExpressionStatement",
																	"src": "7388:37:8"
																}
															]
														}
													},
													"id": 1184,
													"nodeType": "IfStatement",
													"src": "7274:215:8",
													"trueBody": {
														"id": 1168,
														"nodeType": "Block",
														"src": "7290:62:8",
														"statements": [
															{
																"expression": {
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1163,
																		"name": "rewardBonusLevel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "7304:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1164,
																			"name": "rewardBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "7323:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage",
																				"typeString": "struct TokenStaking.RewardLevelBonus storage ref"
																			}
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7335:6:8",
																		"memberName": "silver",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "7323:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7304:37:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1167,
																"nodeType": "ExpressionStatement",
																"src": "7304:37:8"
															}
														]
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "7192:297:8",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "7208:60:8",
													"statements": [
														{
															"expression": {
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1154,
																	"name": "rewardBonusLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "7222:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1155,
																		"name": "rewardBonus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7241:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardLevelBonus_$790_storage",
																			"typeString": "struct TokenStaking.RewardLevelBonus storage ref"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7253:4:8",
																	"memberName": "gold",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 785,
																	"src": "7241:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7222:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1158,
															"nodeType": "ExpressionStatement",
															"src": "7222:35:8"
														}
													]
												}
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "blocksElapsed",
														"nameLocation": "7507:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "7499:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7499:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1188,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7523:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7529:6:8",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "7523:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1190,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "7538:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$783_storage_$",
																	"typeString": "mapping(address => struct TokenStaking.UserInfo storage ref)"
																}
															},
															"id": 1192,
															"indexExpression": {
																"id": 1191,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "7547:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7538:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$783_storage",
																"typeString": "struct TokenStaking.UserInfo storage ref"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7556:14:8",
														"memberName": "lastClaimBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 782,
														"src": "7538:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7523:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7499:71:8"
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "7588:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1207,
														"src": "7580:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7580:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1198,
																	"name": "rewardRatePerBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "7599:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1199,
																	"name": "rewardBonusLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "7620:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7599:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1201,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7598:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1202,
														"name": "blocksElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "7640:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7598:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7580:73:8"
											},
											{
												"expression": {
													"id": 1205,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1197,
													"src": "7675:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1206,
												"nodeType": "Return",
												"src": "7668:14:8"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "6810:209:8",
										"text": " @dev Calculates the pending rewards for a staker based on their staking duration and NFT level.\n @param _staker The address of the staker.\n @return The amount of pending rewards."
									},
									"functionSelector": "097aad10",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePendingRewards",
									"nameLocation": "7033:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "7065:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "7057:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7057:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7056:17:8"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "7095:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7095:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:9:8"
									},
									"scope": 1382,
									"src": "7024:665:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "7901:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1218,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "7940:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1216,
															"name": "ifacenft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7918:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_nftIface_$729",
																"typeString": "contract nftIface"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7927:12:8",
														"memberName": "nftOwnerInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "7918:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7918:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1220,
												"nodeType": "Return",
												"src": "7911:34:8"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "7695:139:8",
										"text": " @dev Gets the NFT level of a user.\n @param user The address of the user.\n @return The NFT level of the user."
									},
									"functionSelector": "817c8966",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevel",
									"nameLocation": "7848:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7865:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "7857:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7856:14:8"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "7892:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7891:9:8"
									},
									"scope": 1382,
									"src": "7839:113:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "8187:225:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "_newRewardRatePerBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "8205:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8230:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8205:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642072617465206d75737420626520706f736974697665",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8233:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324",
																"typeString": "literal_string \"Reward rate must be positive\""
															},
															"value": "Reward rate must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b01b3a5ed2be74b98877d9a4e4c46361af51fc80f46c0b81825b181c303ae324",
																"typeString": "literal_string \"Reward rate must be positive\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8197:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8197:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "8197:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1237,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "8290:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1238,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "8298:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8298:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1236,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "8282:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8282:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8274:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8274:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "8274:38:8"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "rewardRatePerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "8322:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1244,
														"name": "_newRewardRatePerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "8343:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8322:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "8322:43:8"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1247,
														"name": "lastUpdateBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "8375:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1248,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8393:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8399:6:8",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "8393:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "8375:30:8"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "7958:152:8",
										"text": " @dev Sets a new reward rate per block. Only callable by an admin.\n @param _newRewardRatePerBlock The new reward rate per block."
									},
									"functionSelector": "b2f196f6",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRewardRatePerBlock",
									"nameLocation": "8124:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_newRewardRatePerBlock",
												"nameLocation": "8154:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "8146:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8145:32:8"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8187:0:8"
									},
									"scope": 1382,
									"src": "8115:297:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "8602:85:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1261,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "8628:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1262,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "8636:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8636:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1260,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "8620:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8612:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "8612:38:8"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1267,
														"name": "claimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "8660:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1268,
														"name": "_niw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "8676:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8660:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "8660:20:8"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "8418:130:8",
										"text": " @dev Sets a new claim interval. Only callable by an admin.\n @param _niw The new claim interval in blocks."
									},
									"functionSelector": "f2d57adf",
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimInterval",
									"nameLocation": "8562:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "_niw",
												"nameLocation": "8587:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "8579:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8579:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:14:8"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8602:0:8"
									},
									"scope": 1382,
									"src": "8553:134:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "8912:82:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1281,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "8938:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1282,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "8946:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8946:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1280,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "8930:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8930:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8922:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8922:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "8922:38:8"
											},
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1287,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "8970:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMintableToken_$739",
															"typeString": "contract IMintableToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1288,
														"name": "_newToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "8978:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMintableToken_$739",
															"typeString": "contract IMintableToken"
														}
													},
													"src": "8970:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMintableToken_$739",
														"typeString": "contract IMintableToken"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "8970:17:8"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "8693:161:8",
										"text": " @dev Sets a new token contract for staking. Only callable by an admin.\n @param _newToken The address of the new mintable token contract."
									},
									"functionSelector": "144fa6d7",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setToken",
									"nameLocation": "8868:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "_newToken",
												"nameLocation": "8892:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "8877:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMintableToken_$739",
													"typeString": "contract IMintableToken"
												},
												"typeName": {
													"id": 1275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1274,
														"name": "IMintableToken",
														"nameLocations": [
															"8877:14:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "8877:14:8"
													},
													"referencedDeclaration": 739,
													"src": "8877:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMintableToken_$739",
														"typeString": "contract IMintableToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8876:26:8"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8912:0:8"
									},
									"scope": 1382,
									"src": "8859:135:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "9197:82:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1301,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "9223:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1302,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "9231:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9231:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1300,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "9215:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9215:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9207:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9207:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "9207:38:8"
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1307,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "9255:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1308,
														"name": "_newGoldNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "9261:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"src": "9255:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$638",
														"typeString": "contract IERC721"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "9255:17:8"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "9000:146:8",
										"text": " @dev Sets a new NFT contract. Only callable by an admin.\n @param _newGoldNFT The address of the new ERC-721 NFT contract."
									},
									"functionSelector": "f56e9c66",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNFT",
									"nameLocation": "9160:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_newGoldNFT",
												"nameLocation": "9175:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "9167:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$638",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1294,
														"name": "IERC721",
														"nameLocations": [
															"9167:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 638,
														"src": "9167:7:8"
													},
													"referencedDeclaration": 638,
													"src": "9167:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$638",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9166:21:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9197:0:8"
									},
									"scope": 1382,
									"src": "9151:128:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "9440:58:8",
										"statements": [
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "cb",
														"nameLocation": "9455:2:8",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "9450:7:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9450:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"expression": {
														"id": 1320,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "9460:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9466:6:8",
													"memberName": "number",
													"nodeType": "MemberAccess",
													"src": "9460:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9450:22:8"
											},
											{
												"expression": {
													"id": 1323,
													"name": "cb",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1319,
													"src": "9489:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1324,
												"nodeType": "Return",
												"src": "9482:9:8"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "9285:98:8",
										"text": " @dev Returns the current block number.\n @return The current block number."
									},
									"functionSelector": "2e97766d",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBlock",
									"nameLocation": "9397:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9405:2:8"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "9431:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9431:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9430:9:8"
									},
									"scope": 1382,
									"src": "9388:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "9940:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1341,
																	"name": "_RESCUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "9966:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1342,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "9975:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9975:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1340,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "9958:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9958:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9950:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9950:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "9950:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1351,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "10024:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1352,
															"name": "_ERC20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "10031:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1348,
																	"name": "_ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "10007:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$521",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$521",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1347,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "10000:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10000:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10015:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "10000:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10000:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "10000:44:8"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "9504:343:8",
										"text": " @dev Allows an authorized user to rescue ERC20 tokens sent to the contract by mistake.\n Only callable by a user with the RESCUE role.\n @param _ERC20 The address of the ERC20 token to rescue.\n @param _dest The address to send the rescued tokens to.\n @param _ERC20Amount The amount of tokens to rescue."
									},
									"functionSelector": "41f431fd",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1336,
												"name": "nonReentrant",
												"nameLocations": [
													"9920:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "9920:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9920:12:8"
										}
									],
									"name": "moveERC20",
									"nameLocation": "9861:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_ERC20",
												"nameLocation": "9878:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9871:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$521",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1328,
														"name": "IERC20",
														"nameLocations": [
															"9871:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 521,
														"src": "9871:6:8"
													},
													"referencedDeclaration": 521,
													"src": "9871:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$521",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "9894:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9886:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9886:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_ERC20Amount",
												"nameLocation": "9906:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9901:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9901:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9870:49:8"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9940:0:8"
									},
									"scope": 1382,
									"src": "9852:199:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "10414:94:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1368,
																	"name": "_RESCUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "10440:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1369,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "10449:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10449:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1367,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "10432:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10432:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10424:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10424:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "10424:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1377,
															"name": "_etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "10488:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1374,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "10473:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10479:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "10473:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10473:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "10473:28:8"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "10057:271:8",
										"text": " @dev Allows an authorized user to rescue Ether sent to the contract by mistake.\n Only callable by a user with the RESCUE role.\n @param _dest The address to send the rescued Ether to.\n @param _etherAmount The amount of Ether to rescue."
									},
									"functionSelector": "48132f48",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1363,
												"name": "nonReentrant",
												"nameLocations": [
													"10394:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "10394:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10394:12:8"
										}
									],
									"name": "ethRescue",
									"nameLocation": "10342:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "10368:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "10352:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10352:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_etherAmount",
												"nameLocation": "10380:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "10375:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10375:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:42:8"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10414:0:8"
									},
									"scope": 1382,
									"src": "10333:175:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1383,
							"src": "953:9557:8",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								804,
								810,
								816
							]
						}
					],
					"src": "32:10480:8"
				},
				"id": 8
			}
		}
	}
}