{
	"id": "fe00840d9aa1aa1e04180886dc6e45c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/LiquidityPoolManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract UniswapV3LiquidityManager is AccessControl {\n    INonfungiblePositionManager public positionManager;\n    IUniswapV3Factory public factory;\n\n    constructor(\n        address _positionManager,\n        address _factory\n    ) {\n        positionManager = INonfungiblePositionManager(_positionManager);\n        factory = IUniswapV3Factory(_factory);\n    }\n\n    /// @notice Approve tokens for the Uniswap position manager\n    function approveTokens(address tokenA, address tokenB, uint256 amountA, uint256 amountB) external {\n        IERC20(tokenA).approve(address(positionManager), amountA);\n        IERC20(tokenB).approve(address(positionManager), amountB);\n    }\n\n    /// @notice Create the Uniswap V3 pool for the specified token pair and fee tier if it doesnâ€™t exist, then return its address\n    function createPool(address tokenA, address tokenB, uint24 fee, uint160 sqrtPriceX96) external  returns (address pool) {\n        require(factory.getPool(tokenA, tokenB, fee) == address(0), \"Pool already exists\");\n        pool = factory.createPool(tokenA, tokenB, fee);\n        IUniswapV3Pool(pool).initialize(sqrtPriceX96);  // Initialize with sqrtPriceX96\n    }\n\n    /// @notice Adds liquidity to the specified pool, creating a new position NFT\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint24 fee,\n        uint256 amountA,\n        uint256 amountB,\n        int24 tickLower,\n        int24 tickUpper\n    ) external  returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1) {\n        require(IERC20(tokenA).balanceOf(address(this)) >= amountA, \"Insufficient TokenA\");\n        require(IERC20(tokenB).balanceOf(address(this)) >= amountB, \"Insufficient TokenB\");\n\n        INonfungiblePositionManager.MintParams memory params = INonfungiblePositionManager.MintParams({\n            token0: tokenA,\n            token1: tokenB,\n            fee: fee,\n            tickLower: tickLower,\n            tickUpper: tickUpper,\n            amount0Desired: amountA,\n            amount1Desired: amountB,\n            amount0Min: 0,\n            amount1Min: 0,\n            recipient: msg.sender,\n            deadline: block.timestamp + 120\n        });\n\n        (tokenId, liquidity, amount0, amount1) = positionManager.mint(params);\n\n        // Refund unused tokens\n        if (amountA > amount0) {\n            IERC20(tokenA).transfer(msg.sender, amountA - amount0);\n        }\n        if (amountB > amount1) {\n            IERC20(tokenB).transfer(msg.sender, amountB - amount1);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport {IUniswapV3PoolImmutables} from './pool/IUniswapV3PoolImmutables.sol';\nimport {IUniswapV3PoolState} from './pool/IUniswapV3PoolState.sol';\nimport {IUniswapV3PoolDerivedState} from './pool/IUniswapV3PoolDerivedState.sol';\nimport {IUniswapV3PoolActions} from './pool/IUniswapV3PoolActions.sol';\nimport {IUniswapV3PoolOwnerActions} from './pool/IUniswapV3PoolOwnerActions.sol';\nimport {IUniswapV3PoolErrors} from './pool/IUniswapV3PoolErrors.sol';\nimport {IUniswapV3PoolEvents} from './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolErrors,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\nimport '../libraries/PoolAddress.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
			},
			"lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint160(\n                uint256(\n                    keccak256(\n                        abi.encodePacked(\n                            hex'ff',\n                            factory,\n                            keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                            POOL_INIT_CODE_HASH\n                        )\n                    )\n                )\n            )\n        );\n    }\n}\n"
			},
			"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
			},
			"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Errors emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolErrors {\n    error LOK();\n    error TLU();\n    error TLM();\n    error TUM();\n    error AI();\n    error M0();\n    error M1();\n    error AS();\n    error IIA();\n    error L();\n    error F0();\n    error F1();\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// @return tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// @return observationIndex The index of the last oracle observation that was written,\n    /// @return observationCardinality The current maximum number of observations stored in the pool,\n    /// @return observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// @return feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    /// @return The liquidity at the current price of the pool\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper\n    /// @return liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// @return feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// @return feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// @return tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// @return secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// @return secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// @return initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return liquidity The amount of liquidity in the position,\n    /// @return feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// @return feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// @return tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// @return tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// @return tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// @return secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// @return initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
				"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
				"@uniswap/v3-core/=lib/v3-core/",
				"@uniswap/v3-periphery/=lib/v3-periphery/",
				"ds-test/=lib/forge-std/lib/ds-test/src/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"inputs": [],
							"name": "AI",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "F0",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "F1",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IIA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "L",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LOK",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "M0",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "M1",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TLM",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TLU",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TUM",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks",
								"returns": {
									"_0": "The liquidity at the current price of the pool"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation,",
									"initialized": "whether the observation has been initialized and the values are safe to use",
									"secondsPerLiquidityCumulativeX128": "the seconds per in range liquidity for the life of the pool as of the observation timestamp,",
									"tickCumulative": "the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"feeGrowthInside0LastX128": "fee growth of token0 inside the tick range as of the last mint/burn/poke,",
									"feeGrowthInside1LastX128": "fee growth of token1 inside the tick range as of the last mint/burn/poke,",
									"liquidity": "The amount of liquidity in the position,",
									"tokensOwed0": "the computed amount of token0 owed to the position as of the last mint/burn/poke,",
									"tokensOwed1": "the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"feeProtocol": "The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy",
									"observationCardinality": "The current maximum number of observations stored in the pool,",
									"observationCardinalityNext": "The next maximum number of observations, to be updated when the observation.",
									"observationIndex": "The index of the last oracle observation that was written,",
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value",
									"tick": "The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary."
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"feeGrowthOutside0X128": "the fee growth on the other side of the tick from the current tick in token0,",
									"feeGrowthOutside1X128": "the fee growth on the other side of the tick from the current tick in token1,",
									"initialized": "Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.",
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper",
									"liquidityNet": "how much liquidity changes when the pool price crosses the tick,",
									"secondsOutside": "the seconds spent on the other side of the tick from the current tick,",
									"secondsPerLiquidityOutsideX128": "the seconds spent per liquidity on the other side of the tick from the current tick,",
									"tickCumulativeOutside": "the cumulative tick value on the other side of the tick from the current tick"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"F0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"F1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IIA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LOK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"M0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"M1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TLM\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TLU\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TUM\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\",\"returns\":{\"_0\":\"The liquidity at the current price of the pool\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation,\",\"initialized\":\"whether the observation has been initialized and the values are safe to use\",\"secondsPerLiquidityCumulativeX128\":\"the seconds per in range liquidity for the life of the pool as of the observation timestamp,\",\"tickCumulative\":\"the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"feeGrowthInside0LastX128\":\"fee growth of token0 inside the tick range as of the last mint/burn/poke,\",\"feeGrowthInside1LastX128\":\"fee growth of token1 inside the tick range as of the last mint/burn/poke,\",\"liquidity\":\"The amount of liquidity in the position,\",\"tokensOwed0\":\"the computed amount of token0 owed to the position as of the last mint/burn/poke,\",\"tokensOwed1\":\"the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"feeProtocol\":\"The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\",\"observationCardinality\":\"The current maximum number of observations stored in the pool,\",\"observationCardinalityNext\":\"The next maximum number of observations, to be updated when the observation.\",\"observationIndex\":\"The index of the last oracle observation that was written,\",\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value\",\"tick\":\"The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary.\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"feeGrowthOutside0X128\":\"the fee growth on the other side of the tick from the current tick in token0,\",\"feeGrowthOutside1X128\":\"the fee growth on the other side of the tick from the current tick in token1,\",\"initialized\":\"Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\",\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper\",\"liquidityNet\":\"how much liquidity changes when the pool price crosses the tick,\",\"secondsOutside\":\"the seconds spent on the other side of the tick from the current tick,\",\"secondsPerLiquidityOutsideX128\":\"the seconds spent per liquidity on the other side of the tick from the current tick,\",\"tickCumulativeOutside\":\"the cumulative tick value on the other side of the tick from the current tick\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
				"IUniswapV3PoolErrors": {
					"abi": [
						{
							"inputs": [],
							"name": "AI",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "F0",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "F1",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IIA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "L",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LOK",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "M0",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "M1",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TLM",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TLU",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TUM",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Errors emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"F0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"F1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IIA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LOK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"M0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"M1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TLM\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TLU\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TUM\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":\"IUniswapV3PoolErrors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks",
								"returns": {
									"_0": "The liquidity at the current price of the pool"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation,",
									"initialized": "whether the observation has been initialized and the values are safe to use",
									"secondsPerLiquidityCumulativeX128": "the seconds per in range liquidity for the life of the pool as of the observation timestamp,",
									"tickCumulative": "the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"feeGrowthInside0LastX128": "fee growth of token0 inside the tick range as of the last mint/burn/poke,",
									"feeGrowthInside1LastX128": "fee growth of token1 inside the tick range as of the last mint/burn/poke,",
									"liquidity": "The amount of liquidity in the position,",
									"tokensOwed0": "the computed amount of token0 owed to the position as of the last mint/burn/poke,",
									"tokensOwed1": "the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"feeProtocol": "The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy",
									"observationCardinality": "The current maximum number of observations stored in the pool,",
									"observationCardinalityNext": "The next maximum number of observations, to be updated when the observation.",
									"observationIndex": "The index of the last oracle observation that was written,",
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value",
									"tick": "The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary."
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"feeGrowthOutside0X128": "the fee growth on the other side of the tick from the current tick in token0,",
									"feeGrowthOutside1X128": "the fee growth on the other side of the tick from the current tick in token1,",
									"initialized": "Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.",
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper",
									"liquidityNet": "how much liquidity changes when the pool price crosses the tick,",
									"secondsOutside": "the seconds spent on the other side of the tick from the current tick,",
									"secondsPerLiquidityOutsideX128": "the seconds spent per liquidity on the other side of the tick from the current tick,",
									"tickCumulativeOutside": "the cumulative tick value on the other side of the tick from the current tick"
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\",\"returns\":{\"_0\":\"The liquidity at the current price of the pool\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation,\",\"initialized\":\"whether the observation has been initialized and the values are safe to use\",\"secondsPerLiquidityCumulativeX128\":\"the seconds per in range liquidity for the life of the pool as of the observation timestamp,\",\"tickCumulative\":\"the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"feeGrowthInside0LastX128\":\"fee growth of token0 inside the tick range as of the last mint/burn/poke,\",\"feeGrowthInside1LastX128\":\"fee growth of token1 inside the tick range as of the last mint/burn/poke,\",\"liquidity\":\"The amount of liquidity in the position,\",\"tokensOwed0\":\"the computed amount of token0 owed to the position as of the last mint/burn/poke,\",\"tokensOwed1\":\"the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"feeProtocol\":\"The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\",\"observationCardinality\":\"The current maximum number of observations stored in the pool,\",\"observationCardinalityNext\":\"The next maximum number of observations, to be updated when the observation.\",\"observationIndex\":\"The index of the last oracle observation that was written,\",\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value\",\"tick\":\"The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary.\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"feeGrowthOutside0X128\":\"the fee growth on the other side of the tick from the current tick in token0,\",\"feeGrowthOutside1X128\":\"the fee growth on the other side of the tick from the current tick in token1,\",\"initialized\":\"Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\",\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper\",\"liquidityNet\":\"how much liquidity changes when the pool price crosses the tick,\",\"secondsOutside\":\"the seconds spent on the other side of the tick from the current tick,\",\"secondsPerLiquidityOutsideX128\":\"the seconds spent per liquidity on the other side of the tick from the current tick,\",\"tickCumulativeOutside\":\"the cumulative tick value on the other side of the tick from the current tick\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x3357b065654abb7f4a9ebd184a260bc39efde2afa4e99dca2e72ffc28e9c2984\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7682dab014724be8e0a5a401b047788ff9c70b77fa5bd567ea6adc333cb3b56\",\"dweb:/ipfs/QmatH1Gc6z3AkP4dHjAEBKfCBbgBfD4vCceF4TuZU2bCyW\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1894  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1894  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220038f57aab9c2b98e7e6f94090a8f1213372bc275d143a3a10d0b01503a396ea564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220038f57aab9c2b98e7e6f94090a8f1213372bc275d143a3a10d0b01503a396ea564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DUP16 JUMPI 0xAA 0xB9 0xC2 0xB9 DUP15 PUSH31 0x6F94090A8F1213372BC275D143A3A10D0B01503A396EA564736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "167:1727:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220038f57aab9c2b98e7e6f94090a8f1213372bc275d143a3a10d0b01503a396ea564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DUP16 JUMPI 0xAA 0xB9 0xC2 0xB9 DUP15 PUSH31 0x6F94090A8F1213372BC275D143A3A10D0B01503A396EA564736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "167:1727:23:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH #[$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH [$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "B"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "CODECOPY",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "BYTE",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "tag",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "ADDRESS",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "PUSH",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "MSTORE8",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 167,
									"end": 1894,
									"name": "RETURN",
									"source": 23
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220038f57aab9c2b98e7e6f94090a8f1213372bc275d143a3a10d0b01503a396ea564736f6c634300081a0033",
									".code": [
										{
											"begin": 167,
											"end": 1894,
											"name": "PUSHDEPLOYADDRESS",
											"source": 23
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "ADDRESS",
											"source": 23
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 167,
											"end": 1894,
											"name": "REVERT",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"lib/v3-periphery/contracts/libraries/PoolAddress.sol",
								"src/LiquidityPoolManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/LiquidityPoolManager.sol": {
				"UniswapV3LiquidityManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_positionManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "approveTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionManager",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/LiquidityPoolManager.sol\":396:2934  contract UniswapV3LiquidityManager is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"src/LiquidityPoolManager.sol\":549:754  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/LiquidityPoolManager.sol\":683:699  _positionManager */\n  dup2\n    /* \"src/LiquidityPoolManager.sol\":637:652  positionManager */\n  0x01\n  0x00\n    /* \"src/LiquidityPoolManager.sol\":637:700  positionManager = INonfungiblePositionManager(_positionManager) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/LiquidityPoolManager.sol\":738:746  _factory */\n  dup1\n    /* \"src/LiquidityPoolManager.sol\":710:717  factory */\n  0x02\n  0x00\n    /* \"src/LiquidityPoolManager.sol\":710:747  factory = IUniswapV3Factory(_factory) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/LiquidityPoolManager.sol\":549:754  constructor(... */\n  pop\n  pop\n    /* \"src/LiquidityPoolManager.sol\":396:2934  contract UniswapV3LiquidityManager is AccessControl {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"src/LiquidityPoolManager.sol\":396:2934  contract UniswapV3LiquidityManager is AccessControl {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/LiquidityPoolManager.sol\":396:2934  contract UniswapV3LiquidityManager is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xafbce84e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xecf4daa7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x791b98bc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8e909e51\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"src/LiquidityPoolManager.sol\":454:504  INonfungiblePositionManager public positionManager */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/LiquidityPoolManager.sol\":1201:1563  function createPool(address tokenA, address tokenB, uint24 fee, uint160 sqrtPriceX96) external  returns (address pool) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/LiquidityPoolManager.sol\":1651:2932  function addLiquidity(... */\n    tag_11:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/LiquidityPoolManager.sol\":510:542  IUniswapV3Factory public factory */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"src/LiquidityPoolManager.sol\":824:1063  function approveTokens(address tokenA, address tokenB, uint256 amountA, uint256 amountB) external {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_19:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_71\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_72\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_71:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_70:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_25:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_31:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_74\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_25\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_74:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_76\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_77\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_76:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_79\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_80\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_34:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_82\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_84\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_84:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_85\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_86\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/LiquidityPoolManager.sol\":454:504  INonfungiblePositionManager public positionManager */\n    tag_36:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/LiquidityPoolManager.sol\":1201:1563  function createPool(address tokenA, address tokenB, uint24 fee, uint160 sqrtPriceX96) external  returns (address pool) {... */\n    tag_42:\n        /* \"src/LiquidityPoolManager.sol\":1306:1318  address pool */\n      0x00\n        /* \"src/LiquidityPoolManager.sol\":1386:1387  0 */\n      dup1\n        /* \"src/LiquidityPoolManager.sol\":1338:1388  factory.getPool(tokenA, tokenB, fee) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/LiquidityPoolManager.sol\":1338:1345  factory */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/LiquidityPoolManager.sol\":1338:1353  factory.getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"src/LiquidityPoolManager.sol\":1354:1360  tokenA */\n      dup8\n        /* \"src/LiquidityPoolManager.sol\":1362:1368  tokenB */\n      dup8\n        /* \"src/LiquidityPoolManager.sol\":1370:1373  fee */\n      dup8\n        /* \"src/LiquidityPoolManager.sol\":1338:1374  factory.getPool(tokenA, tokenB, fee) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"src/LiquidityPoolManager.sol\":1338:1388  factory.getPool(tokenA, tokenB, fee) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/LiquidityPoolManager.sol\":1330:1412  require(factory.getPool(tokenA, tokenB, fee) == address(0), \"Pool already exists\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"src/LiquidityPoolManager.sol\":1429:1436  factory */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/LiquidityPoolManager.sol\":1429:1447  factory.createPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1671295\n        /* \"src/LiquidityPoolManager.sol\":1448:1454  tokenA */\n      dup7\n        /* \"src/LiquidityPoolManager.sol\":1456:1462  tokenB */\n      dup7\n        /* \"src/LiquidityPoolManager.sol\":1464:1467  fee */\n      dup7\n        /* \"src/LiquidityPoolManager.sol\":1429:1468  factory.createPool(tokenA, tokenB, fee) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_100:\n        /* \"src/LiquidityPoolManager.sol\":1422:1468  pool = factory.createPool(tokenA, tokenB, fee) */\n      swap1\n      pop\n        /* \"src/LiquidityPoolManager.sol\":1493:1497  pool */\n      dup1\n        /* \"src/LiquidityPoolManager.sol\":1478:1509  IUniswapV3Pool(pool).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf637731d\n        /* \"src/LiquidityPoolManager.sol\":1510:1522  sqrtPriceX96 */\n      dup4\n        /* \"src/LiquidityPoolManager.sol\":1478:1523  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/LiquidityPoolManager.sol\":1201:1563  function createPool(address tokenA, address tokenB, uint24 fee, uint160 sqrtPriceX96) external  returns (address pool) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_50:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/LiquidityPoolManager.sol\":1651:2932  function addLiquidity(... */\n    tag_55:\n        /* \"src/LiquidityPoolManager.sol\":1866:1881  uint256 tokenId */\n      0x00\n        /* \"src/LiquidityPoolManager.sol\":1883:1900  uint128 liquidity */\n      dup1\n        /* \"src/LiquidityPoolManager.sol\":1902:1917  uint256 amount0 */\n      0x00\n        /* \"src/LiquidityPoolManager.sol\":1919:1934  uint256 amount1 */\n      dup1\n        /* \"src/LiquidityPoolManager.sol\":1997:2004  amountA */\n      dup8\n        /* \"src/LiquidityPoolManager.sol\":1961:1967  tokenA */\n      dup12\n        /* \"src/LiquidityPoolManager.sol\":1954:1978  IERC20(tokenA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/LiquidityPoolManager.sol\":1987:1991  this */\n      address\n        /* \"src/LiquidityPoolManager.sol\":1954:1993  IERC20(tokenA).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"src/LiquidityPoolManager.sol\":1954:2004  IERC20(tokenA).balanceOf(address(this)) >= amountA */\n      lt\n      iszero\n        /* \"src/LiquidityPoolManager.sol\":1946:2028  require(IERC20(tokenA).balanceOf(address(this)) >= amountA, \"Insufficient TokenA\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"src/LiquidityPoolManager.sol\":2089:2096  amountB */\n      dup7\n        /* \"src/LiquidityPoolManager.sol\":2053:2059  tokenB */\n      dup11\n        /* \"src/LiquidityPoolManager.sol\":2046:2070  IERC20(tokenB).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/LiquidityPoolManager.sol\":2079:2083  this */\n      address\n        /* \"src/LiquidityPoolManager.sol\":2046:2085  IERC20(tokenB).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_119:\n        /* \"src/LiquidityPoolManager.sol\":2046:2096  IERC20(tokenB).balanceOf(address(this)) >= amountB */\n      lt\n      iszero\n        /* \"src/LiquidityPoolManager.sol\":2038:2120  require(IERC20(tokenB).balanceOf(address(this)) >= amountB, \"Insufficient TokenB\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"src/LiquidityPoolManager.sol\":2131:2183  INonfungiblePositionManager.MintParams memory params */\n      0x00\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/LiquidityPoolManager.sol\":2247:2253  tokenA */\n      dup14\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2275:2281  tokenB */\n      dup13\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2300:2303  fee */\n      dup12\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2328:2337  tickLower */\n      dup9\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2362:2371  tickUpper */\n      dup8\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2401:2408  amountA */\n      dup11\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2438:2445  amountB */\n      dup10\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2471:2472  0 */\n      0x00\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2498:2499  0 */\n      0x00\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2524:2534  msg.sender */\n      caller\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/LiquidityPoolManager.sol\":2576:2579  120 */\n      0x78\n        /* \"src/LiquidityPoolManager.sol\":2558:2573  block.timestamp */\n      timestamp\n        /* \"src/LiquidityPoolManager.sol\":2558:2579  block.timestamp + 120 */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"src/LiquidityPoolManager.sol\":2186:2590  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      pop\n        /* \"src/LiquidityPoolManager.sol\":2131:2590  INonfungiblePositionManager.MintParams memory params = INonfungiblePositionManager.MintParams({... */\n      swap1\n      pop\n        /* \"src/LiquidityPoolManager.sol\":2642:2657  positionManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/LiquidityPoolManager.sol\":2642:2662  positionManager.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88316456\n        /* \"src/LiquidityPoolManager.sol\":2663:2669  params */\n      dup3\n        /* \"src/LiquidityPoolManager.sol\":2642:2670  positionManager.mint(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"src/LiquidityPoolManager.sol\":2601:2670  (tokenId, liquidity, amount0, amount1) = positionManager.mint(params) */\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      dup3\n      swap8\n      pop\n      dup4\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/LiquidityPoolManager.sol\":2727:2734  amount0 */\n      dup3\n        /* \"src/LiquidityPoolManager.sol\":2717:2724  amountA */\n      dup10\n        /* \"src/LiquidityPoolManager.sol\":2717:2734  amountA > amount0 */\n      gt\n        /* \"src/LiquidityPoolManager.sol\":2713:2815  if (amountA > amount0) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"src/LiquidityPoolManager.sol\":2757:2763  tokenA */\n      dup12\n        /* \"src/LiquidityPoolManager.sol\":2750:2773  IERC20(tokenA).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/LiquidityPoolManager.sol\":2774:2784  msg.sender */\n      caller\n        /* \"src/LiquidityPoolManager.sol\":2796:2803  amount0 */\n      dup6\n        /* \"src/LiquidityPoolManager.sol\":2786:2793  amountA */\n      dup13\n        /* \"src/LiquidityPoolManager.sol\":2786:2803  amountA - amount0 */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"src/LiquidityPoolManager.sol\":2750:2804  IERC20(tokenA).transfer(msg.sender, amountA - amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n        /* \"src/LiquidityPoolManager.sol\":2713:2815  if (amountA > amount0) {... */\n    tag_131:\n        /* \"src/LiquidityPoolManager.sol\":2838:2845  amount1 */\n      dup2\n        /* \"src/LiquidityPoolManager.sol\":2828:2835  amountB */\n      dup9\n        /* \"src/LiquidityPoolManager.sol\":2828:2845  amountB > amount1 */\n      gt\n        /* \"src/LiquidityPoolManager.sol\":2824:2926  if (amountB > amount1) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"src/LiquidityPoolManager.sol\":2868:2874  tokenB */\n      dup11\n        /* \"src/LiquidityPoolManager.sol\":2861:2884  IERC20(tokenB).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/LiquidityPoolManager.sol\":2885:2895  msg.sender */\n      caller\n        /* \"src/LiquidityPoolManager.sol\":2907:2914  amount1 */\n      dup5\n        /* \"src/LiquidityPoolManager.sol\":2897:2904  amountB */\n      dup12\n        /* \"src/LiquidityPoolManager.sol\":2897:2914  amountB - amount1 */\n      tag_141\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_141:\n        /* \"src/LiquidityPoolManager.sol\":2861:2915  IERC20(tokenB).transfer(msg.sender, amountB - amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_145:\n      pop\n        /* \"src/LiquidityPoolManager.sol\":2824:2926  if (amountB > amount1) {... */\n    tag_140:\n        /* \"src/LiquidityPoolManager.sol\":1936:2932  {... */\n      pop\n        /* \"src/LiquidityPoolManager.sol\":1651:2932  function addLiquidity(... */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/LiquidityPoolManager.sol\":510:542  IUniswapV3Factory public factory */\n    tag_59:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_64:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_146\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_25\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_146:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_148\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_77\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_148:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_150\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_86\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/LiquidityPoolManager.sol\":824:1063  function approveTokens(address tokenA, address tokenB, uint256 amountA, uint256 amountB) external {... */\n    tag_68:\n        /* \"src/LiquidityPoolManager.sol\":939:945  tokenA */\n      dup4\n        /* \"src/LiquidityPoolManager.sol\":932:954  IERC20(tokenA).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"src/LiquidityPoolManager.sol\":963:978  positionManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/LiquidityPoolManager.sol\":981:988  amountA */\n      dup5\n        /* \"src/LiquidityPoolManager.sol\":932:989  IERC20(tokenA).approve(address(positionManager), amountA) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_152:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_155:\n      pop\n        /* \"src/LiquidityPoolManager.sol\":1006:1012  tokenB */\n      dup3\n        /* \"src/LiquidityPoolManager.sol\":999:1021  IERC20(tokenB).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"src/LiquidityPoolManager.sol\":1030:1045  positionManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/LiquidityPoolManager.sol\":1048:1055  amountB */\n      dup4\n        /* \"src/LiquidityPoolManager.sol\":999:1056  IERC20(tokenB).approve(address(positionManager), amountB) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_156:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_159:\n      pop\n        /* \"src/LiquidityPoolManager.sol\":824:1063  function approveTokens(address tokenA, address tokenB, uint256 amountA, uint256 amountB) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_72:\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_77:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_162\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_163\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_164\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_162:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_80:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_166\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_47\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_166:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_167\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_168\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_165)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_167:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_165:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_83:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_86:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_172\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_47\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_172:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_174\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_171)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_173:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_171:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_164:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_177\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_47\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_178:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_182:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_184:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_185:\n        /* \"#utility.yul\":561:584   */\n      tag_246\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_184\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_247:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_186:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_249\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_185\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_18:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_252\n      tag_182\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":833:952   */\n    tag_251:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_253\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_186\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_187:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_188:\n        /* \"#utility.yul\":1268:1289   */\n      tag_256\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_187\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_21:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_258\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_188\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_189:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_190:\n        /* \"#utility.yul\":1674:1698   */\n      tag_261\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_189\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_262:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_191:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_264\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_190\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_24:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_267\n      tag_182\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1950:2069   */\n    tag_266:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_268\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_191\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_192:\n        /* \"#utility.yul\":2296:2320   */\n      tag_270\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_189\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_27:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_272\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_192\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_193:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_194:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_275\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_193\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_195:\n        /* \"#utility.yul\":2868:2892   */\n      tag_277\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_194\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_278:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_196:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_280\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_195\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_30:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_283\n      tag_182\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3161:3280   */\n    tag_282:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_284\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_191\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_285\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_196\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3608   */\n    tag_197:\n        /* \"#utility.yul\":3576:3579   */\n      0x00\n        /* \"#utility.yul\":3597:3602   */\n      dup2\n        /* \"#utility.yul\":3590:3602   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3756   */\n    tag_198:\n        /* \"#utility.yul\":3664:3673   */\n      0x00\n        /* \"#utility.yul\":3697:3750   */\n      tag_288\n        /* \"#utility.yul\":3715:3749   */\n      tag_289\n        /* \"#utility.yul\":3724:3748   */\n      tag_290\n        /* \"#utility.yul\":3742:3747   */\n      dup5\n        /* \"#utility.yul\":3724:3748   */\n      tag_193\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3715:3749   */\n      tag_197\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3697:3750   */\n      tag_193\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3684:3750   */\n      swap1\n      pop\n        /* \"#utility.yul\":3614:3756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3762:3888   */\n    tag_199:\n        /* \"#utility.yul\":3812:3821   */\n      0x00\n        /* \"#utility.yul\":3845:3882   */\n      tag_292\n        /* \"#utility.yul\":3876:3881   */\n      dup3\n        /* \"#utility.yul\":3845:3882   */\n      tag_198\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3832:3882   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3894:4056   */\n    tag_200:\n        /* \"#utility.yul\":3980:3989   */\n      0x00\n        /* \"#utility.yul\":4013:4050   */\n      tag_294\n        /* \"#utility.yul\":4044:4049   */\n      dup3\n        /* \"#utility.yul\":4013:4050   */\n      tag_199\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4000:4050   */\n      swap1\n      pop\n        /* \"#utility.yul\":3894:4056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4062:4265   */\n    tag_201:\n        /* \"#utility.yul\":4185:4258   */\n      tag_296\n        /* \"#utility.yul\":4252:4257   */\n      dup2\n        /* \"#utility.yul\":4185:4258   */\n      tag_200\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4180:4183   */\n      dup3\n        /* \"#utility.yul\":4173:4259   */\n      mstore\n        /* \"#utility.yul\":4062:4265   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4271:4565   */\n    tag_38:\n        /* \"#utility.yul\":4400:4404   */\n      0x00\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4427:4436   */\n      dup3\n        /* \"#utility.yul\":4423:4441   */\n      add\n        /* \"#utility.yul\":4415:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4558   */\n      tag_298\n        /* \"#utility.yul\":4555:4556   */\n      0x00\n        /* \"#utility.yul\":4544:4553   */\n      dup4\n        /* \"#utility.yul\":4540:4557   */\n      add\n        /* \"#utility.yul\":4531:4537   */\n      dup5\n        /* \"#utility.yul\":4451:4558   */\n      tag_201\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4271:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4662   */\n    tag_202:\n        /* \"#utility.yul\":4607:4614   */\n      0x00\n        /* \"#utility.yul\":4647:4655   */\n      0xffffff\n        /* \"#utility.yul\":4640:4645   */\n      dup3\n        /* \"#utility.yul\":4636:4656   */\n      and\n        /* \"#utility.yul\":4625:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:4788   */\n    tag_203:\n        /* \"#utility.yul\":4740:4763   */\n      tag_301\n        /* \"#utility.yul\":4757:4762   */\n      dup2\n        /* \"#utility.yul\":4740:4763   */\n      tag_202\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4733:4738   */\n      dup2\n        /* \"#utility.yul\":4730:4764   */\n      eq\n        /* \"#utility.yul\":4720:4782   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4775:4776   */\n      dup1\n        /* \"#utility.yul\":4768:4780   */\n      revert\n        /* \"#utility.yul\":4720:4782   */\n    tag_302:\n        /* \"#utility.yul\":4668:4788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4794:4931   */\n    tag_204:\n        /* \"#utility.yul\":4839:4844   */\n      0x00\n        /* \"#utility.yul\":4877:4883   */\n      dup2\n        /* \"#utility.yul\":4864:4884   */\n      calldataload\n        /* \"#utility.yul\":4855:4884   */\n      swap1\n      pop\n        /* \"#utility.yul\":4893:4925   */\n      tag_304\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4893:4925   */\n      tag_203\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4794:4931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4937:5059   */\n    tag_205:\n        /* \"#utility.yul\":5010:5034   */\n      tag_306\n        /* \"#utility.yul\":5028:5033   */\n      dup2\n        /* \"#utility.yul\":5010:5034   */\n      tag_193\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5003:5008   */\n      dup2\n        /* \"#utility.yul\":5000:5035   */\n      eq\n        /* \"#utility.yul\":4990:5053   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5049:5050   */\n      0x00\n        /* \"#utility.yul\":5046:5047   */\n      dup1\n        /* \"#utility.yul\":5039:5051   */\n      revert\n        /* \"#utility.yul\":4990:5053   */\n    tag_307:\n        /* \"#utility.yul\":4937:5059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5065:5204   */\n    tag_206:\n        /* \"#utility.yul\":5111:5116   */\n      0x00\n        /* \"#utility.yul\":5149:5155   */\n      dup2\n        /* \"#utility.yul\":5136:5156   */\n      calldataload\n        /* \"#utility.yul\":5127:5156   */\n      swap1\n      pop\n        /* \"#utility.yul\":5165:5198   */\n      tag_309\n        /* \"#utility.yul\":5192:5197   */\n      dup2\n        /* \"#utility.yul\":5165:5198   */\n      tag_205\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5065:5204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5210:5973   */\n    tag_41:\n        /* \"#utility.yul\":5295:5301   */\n      0x00\n        /* \"#utility.yul\":5303:5309   */\n      dup1\n        /* \"#utility.yul\":5311:5317   */\n      0x00\n        /* \"#utility.yul\":5319:5325   */\n      dup1\n        /* \"#utility.yul\":5368:5371   */\n      0x80\n        /* \"#utility.yul\":5356:5365   */\n      dup6\n        /* \"#utility.yul\":5347:5354   */\n      dup8\n        /* \"#utility.yul\":5343:5366   */\n      sub\n        /* \"#utility.yul\":5339:5372   */\n      slt\n        /* \"#utility.yul\":5336:5456   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":5375:5454   */\n      tag_312\n      tag_182\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5336:5456   */\n    tag_311:\n        /* \"#utility.yul\":5495:5496   */\n      0x00\n        /* \"#utility.yul\":5520:5573   */\n      tag_313\n        /* \"#utility.yul\":5565:5572   */\n      dup8\n        /* \"#utility.yul\":5556:5562   */\n      dup3\n        /* \"#utility.yul\":5545:5554   */\n      dup9\n        /* \"#utility.yul\":5541:5563   */\n      add\n        /* \"#utility.yul\":5520:5573   */\n      tag_196\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5510:5573   */\n      swap5\n      pop\n        /* \"#utility.yul\":5466:5583   */\n      pop\n        /* \"#utility.yul\":5622:5624   */\n      0x20\n        /* \"#utility.yul\":5648:5701   */\n      tag_314\n        /* \"#utility.yul\":5693:5700   */\n      dup8\n        /* \"#utility.yul\":5684:5690   */\n      dup3\n        /* \"#utility.yul\":5673:5682   */\n      dup9\n        /* \"#utility.yul\":5669:5691   */\n      add\n        /* \"#utility.yul\":5648:5701   */\n      tag_196\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5638:5701   */\n      swap4\n      pop\n        /* \"#utility.yul\":5593:5711   */\n      pop\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5776:5828   */\n      tag_315\n        /* \"#utility.yul\":5820:5827   */\n      dup8\n        /* \"#utility.yul\":5811:5817   */\n      dup3\n        /* \"#utility.yul\":5800:5809   */\n      dup9\n        /* \"#utility.yul\":5796:5818   */\n      add\n        /* \"#utility.yul\":5776:5828   */\n      tag_204\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5766:5828   */\n      swap3\n      pop\n        /* \"#utility.yul\":5721:5838   */\n      pop\n        /* \"#utility.yul\":5877:5879   */\n      0x60\n        /* \"#utility.yul\":5903:5956   */\n      tag_316\n        /* \"#utility.yul\":5948:5955   */\n      dup8\n        /* \"#utility.yul\":5939:5945   */\n      dup3\n        /* \"#utility.yul\":5928:5937   */\n      dup9\n        /* \"#utility.yul\":5924:5946   */\n      add\n        /* \"#utility.yul\":5903:5956   */\n      tag_206\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5893:5956   */\n      swap2\n      pop\n        /* \"#utility.yul\":5848:5966   */\n      pop\n        /* \"#utility.yul\":5210:5973   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5979:6097   */\n    tag_207:\n        /* \"#utility.yul\":6066:6090   */\n      tag_318\n        /* \"#utility.yul\":6084:6089   */\n      dup2\n        /* \"#utility.yul\":6066:6090   */\n      tag_194\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6061:6064   */\n      dup3\n        /* \"#utility.yul\":6054:6091   */\n      mstore\n        /* \"#utility.yul\":5979:6097   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6103:6325   */\n    tag_44:\n        /* \"#utility.yul\":6196:6200   */\n      0x00\n        /* \"#utility.yul\":6234:6236   */\n      0x20\n        /* \"#utility.yul\":6223:6232   */\n      dup3\n        /* \"#utility.yul\":6219:6237   */\n      add\n        /* \"#utility.yul\":6211:6237   */\n      swap1\n      pop\n        /* \"#utility.yul\":6247:6318   */\n      tag_320\n        /* \"#utility.yul\":6315:6316   */\n      0x00\n        /* \"#utility.yul\":6304:6313   */\n      dup4\n        /* \"#utility.yul\":6300:6317   */\n      add\n        /* \"#utility.yul\":6291:6297   */\n      dup5\n        /* \"#utility.yul\":6247:6318   */\n      tag_207\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6103:6325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6331:6408   */\n    tag_208:\n        /* \"#utility.yul\":6368:6375   */\n      0x00\n        /* \"#utility.yul\":6397:6402   */\n      dup2\n        /* \"#utility.yul\":6386:6402   */\n      swap1\n      pop\n        /* \"#utility.yul\":6331:6408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6414:6536   */\n    tag_209:\n        /* \"#utility.yul\":6487:6511   */\n      tag_323\n        /* \"#utility.yul\":6505:6510   */\n      dup2\n        /* \"#utility.yul\":6487:6511   */\n      tag_208\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6480:6485   */\n      dup2\n        /* \"#utility.yul\":6477:6512   */\n      eq\n        /* \"#utility.yul\":6467:6530   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6526:6527   */\n      0x00\n        /* \"#utility.yul\":6523:6524   */\n      dup1\n        /* \"#utility.yul\":6516:6528   */\n      revert\n        /* \"#utility.yul\":6467:6530   */\n    tag_324:\n        /* \"#utility.yul\":6414:6536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6542:6681   */\n    tag_210:\n        /* \"#utility.yul\":6588:6593   */\n      0x00\n        /* \"#utility.yul\":6626:6632   */\n      dup2\n        /* \"#utility.yul\":6613:6633   */\n      calldataload\n        /* \"#utility.yul\":6604:6633   */\n      swap1\n      pop\n        /* \"#utility.yul\":6642:6675   */\n      tag_326\n        /* \"#utility.yul\":6669:6674   */\n      dup2\n        /* \"#utility.yul\":6642:6675   */\n      tag_209\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6542:6681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6687:6777   */\n    tag_211:\n        /* \"#utility.yul\":6722:6729   */\n      0x00\n        /* \"#utility.yul\":6765:6770   */\n      dup2\n        /* \"#utility.yul\":6762:6763   */\n      0x02\n        /* \"#utility.yul\":6751:6771   */\n      signextend\n        /* \"#utility.yul\":6740:6771   */\n      swap1\n      pop\n        /* \"#utility.yul\":6687:6777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6783:6901   */\n    tag_212:\n        /* \"#utility.yul\":6854:6876   */\n      tag_329\n        /* \"#utility.yul\":6870:6875   */\n      dup2\n        /* \"#utility.yul\":6854:6876   */\n      tag_211\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6847:6852   */\n      dup2\n        /* \"#utility.yul\":6844:6877   */\n      eq\n        /* \"#utility.yul\":6834:6895   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":6891:6892   */\n      0x00\n        /* \"#utility.yul\":6888:6889   */\n      dup1\n        /* \"#utility.yul\":6881:6893   */\n      revert\n        /* \"#utility.yul\":6834:6895   */\n    tag_330:\n        /* \"#utility.yul\":6783:6901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6907:7042   */\n    tag_213:\n        /* \"#utility.yul\":6951:6956   */\n      0x00\n        /* \"#utility.yul\":6989:6995   */\n      dup2\n        /* \"#utility.yul\":6976:6996   */\n      calldataload\n        /* \"#utility.yul\":6967:6996   */\n      swap1\n      pop\n        /* \"#utility.yul\":7005:7036   */\n      tag_332\n        /* \"#utility.yul\":7030:7035   */\n      dup2\n        /* \"#utility.yul\":7005:7036   */\n      tag_212\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6907:7042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:8241   */\n    tag_54:\n        /* \"#utility.yul\":7156:7162   */\n      0x00\n        /* \"#utility.yul\":7164:7170   */\n      dup1\n        /* \"#utility.yul\":7172:7178   */\n      0x00\n        /* \"#utility.yul\":7180:7186   */\n      dup1\n        /* \"#utility.yul\":7188:7194   */\n      0x00\n        /* \"#utility.yul\":7196:7202   */\n      dup1\n        /* \"#utility.yul\":7204:7210   */\n      0x00\n        /* \"#utility.yul\":7253:7256   */\n      0xe0\n        /* \"#utility.yul\":7241:7250   */\n      dup9\n        /* \"#utility.yul\":7232:7239   */\n      dup11\n        /* \"#utility.yul\":7228:7251   */\n      sub\n        /* \"#utility.yul\":7224:7257   */\n      slt\n        /* \"#utility.yul\":7221:7341   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7260:7339   */\n      tag_335\n      tag_182\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7221:7341   */\n    tag_334:\n        /* \"#utility.yul\":7380:7381   */\n      0x00\n        /* \"#utility.yul\":7405:7458   */\n      tag_336\n        /* \"#utility.yul\":7450:7457   */\n      dup11\n        /* \"#utility.yul\":7441:7447   */\n      dup3\n        /* \"#utility.yul\":7430:7439   */\n      dup12\n        /* \"#utility.yul\":7426:7448   */\n      add\n        /* \"#utility.yul\":7405:7458   */\n      tag_196\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7395:7458   */\n      swap8\n      pop\n        /* \"#utility.yul\":7351:7468   */\n      pop\n        /* \"#utility.yul\":7507:7509   */\n      0x20\n        /* \"#utility.yul\":7533:7586   */\n      tag_337\n        /* \"#utility.yul\":7578:7585   */\n      dup11\n        /* \"#utility.yul\":7569:7575   */\n      dup3\n        /* \"#utility.yul\":7558:7567   */\n      dup12\n        /* \"#utility.yul\":7554:7576   */\n      add\n        /* \"#utility.yul\":7533:7586   */\n      tag_196\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7523:7586   */\n      swap7\n      pop\n        /* \"#utility.yul\":7478:7596   */\n      pop\n        /* \"#utility.yul\":7635:7637   */\n      0x40\n        /* \"#utility.yul\":7661:7713   */\n      tag_338\n        /* \"#utility.yul\":7705:7712   */\n      dup11\n        /* \"#utility.yul\":7696:7702   */\n      dup3\n        /* \"#utility.yul\":7685:7694   */\n      dup12\n        /* \"#utility.yul\":7681:7703   */\n      add\n        /* \"#utility.yul\":7661:7713   */\n      tag_204\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7651:7713   */\n      swap6\n      pop\n        /* \"#utility.yul\":7606:7723   */\n      pop\n        /* \"#utility.yul\":7762:7764   */\n      0x60\n        /* \"#utility.yul\":7788:7841   */\n      tag_339\n        /* \"#utility.yul\":7833:7840   */\n      dup11\n        /* \"#utility.yul\":7824:7830   */\n      dup3\n        /* \"#utility.yul\":7813:7822   */\n      dup12\n        /* \"#utility.yul\":7809:7831   */\n      add\n        /* \"#utility.yul\":7788:7841   */\n      tag_210\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7778:7841   */\n      swap5\n      pop\n        /* \"#utility.yul\":7733:7851   */\n      pop\n        /* \"#utility.yul\":7890:7893   */\n      0x80\n        /* \"#utility.yul\":7917:7970   */\n      tag_340\n        /* \"#utility.yul\":7962:7969   */\n      dup11\n        /* \"#utility.yul\":7953:7959   */\n      dup3\n        /* \"#utility.yul\":7942:7951   */\n      dup12\n        /* \"#utility.yul\":7938:7960   */\n      add\n        /* \"#utility.yul\":7917:7970   */\n      tag_210\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7907:7970   */\n      swap4\n      pop\n        /* \"#utility.yul\":7861:7980   */\n      pop\n        /* \"#utility.yul\":8019:8022   */\n      0xa0\n        /* \"#utility.yul\":8046:8097   */\n      tag_341\n        /* \"#utility.yul\":8089:8096   */\n      dup11\n        /* \"#utility.yul\":8080:8086   */\n      dup3\n        /* \"#utility.yul\":8069:8078   */\n      dup12\n        /* \"#utility.yul\":8065:8087   */\n      add\n        /* \"#utility.yul\":8046:8097   */\n      tag_213\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8036:8097   */\n      swap3\n      pop\n        /* \"#utility.yul\":7990:8107   */\n      pop\n        /* \"#utility.yul\":8146:8149   */\n      0xc0\n        /* \"#utility.yul\":8173:8224   */\n      tag_342\n        /* \"#utility.yul\":8216:8223   */\n      dup11\n        /* \"#utility.yul\":8207:8213   */\n      dup3\n        /* \"#utility.yul\":8196:8205   */\n      dup12\n        /* \"#utility.yul\":8192:8214   */\n      add\n        /* \"#utility.yul\":8173:8224   */\n      tag_213\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8163:8224   */\n      swap2\n      pop\n        /* \"#utility.yul\":8117:8234   */\n      pop\n        /* \"#utility.yul\":7048:8241   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8247:8365   */\n    tag_214:\n        /* \"#utility.yul\":8334:8358   */\n      tag_344\n        /* \"#utility.yul\":8352:8357   */\n      dup2\n        /* \"#utility.yul\":8334:8358   */\n      tag_208\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8329:8332   */\n      dup3\n        /* \"#utility.yul\":8322:8359   */\n      mstore\n        /* \"#utility.yul\":8247:8365   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8489   */\n    tag_215:\n        /* \"#utility.yul\":8408:8415   */\n      0x00\n        /* \"#utility.yul\":8448:8482   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8441:8446   */\n      dup3\n        /* \"#utility.yul\":8437:8483   */\n      and\n        /* \"#utility.yul\":8426:8483   */\n      swap1\n      pop\n        /* \"#utility.yul\":8371:8489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8495:8613   */\n    tag_216:\n        /* \"#utility.yul\":8582:8606   */\n      tag_347\n        /* \"#utility.yul\":8600:8605   */\n      dup2\n        /* \"#utility.yul\":8582:8606   */\n      tag_215\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8577:8580   */\n      dup3\n        /* \"#utility.yul\":8570:8607   */\n      mstore\n        /* \"#utility.yul\":8495:8613   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8619:9172   */\n    tag_57:\n        /* \"#utility.yul\":8796:8800   */\n      0x00\n        /* \"#utility.yul\":8834:8837   */\n      0x80\n        /* \"#utility.yul\":8823:8832   */\n      dup3\n        /* \"#utility.yul\":8819:8838   */\n      add\n        /* \"#utility.yul\":8811:8838   */\n      swap1\n      pop\n        /* \"#utility.yul\":8848:8919   */\n      tag_349\n        /* \"#utility.yul\":8916:8917   */\n      0x00\n        /* \"#utility.yul\":8905:8914   */\n      dup4\n        /* \"#utility.yul\":8901:8918   */\n      add\n        /* \"#utility.yul\":8892:8898   */\n      dup8\n        /* \"#utility.yul\":8848:8919   */\n      tag_214\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8929:9001   */\n      tag_350\n        /* \"#utility.yul\":8997:8999   */\n      0x20\n        /* \"#utility.yul\":8986:8995   */\n      dup4\n        /* \"#utility.yul\":8982:9000   */\n      add\n        /* \"#utility.yul\":8973:8979   */\n      dup7\n        /* \"#utility.yul\":8929:9001   */\n      tag_216\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9011:9083   */\n      tag_351\n        /* \"#utility.yul\":9079:9081   */\n      0x40\n        /* \"#utility.yul\":9068:9077   */\n      dup4\n        /* \"#utility.yul\":9064:9082   */\n      add\n        /* \"#utility.yul\":9055:9061   */\n      dup6\n        /* \"#utility.yul\":9011:9083   */\n      tag_214\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9093:9165   */\n      tag_352\n        /* \"#utility.yul\":9161:9163   */\n      0x60\n        /* \"#utility.yul\":9150:9159   */\n      dup4\n        /* \"#utility.yul\":9146:9164   */\n      add\n        /* \"#utility.yul\":9137:9143   */\n      dup5\n        /* \"#utility.yul\":9093:9165   */\n      tag_214\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8619:9172   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9178:9329   */\n    tag_217:\n        /* \"#utility.yul\":9253:9262   */\n      0x00\n        /* \"#utility.yul\":9286:9323   */\n      tag_354\n        /* \"#utility.yul\":9317:9322   */\n      dup3\n        /* \"#utility.yul\":9286:9323   */\n      tag_199\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9273:9323   */\n      swap1\n      pop\n        /* \"#utility.yul\":9178:9329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9335:9516   */\n    tag_218:\n        /* \"#utility.yul\":9447:9509   */\n      tag_356\n        /* \"#utility.yul\":9503:9508   */\n      dup2\n        /* \"#utility.yul\":9447:9509   */\n      tag_217\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9442:9445   */\n      dup3\n        /* \"#utility.yul\":9435:9510   */\n      mstore\n        /* \"#utility.yul\":9335:9516   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9522:9794   */\n    tag_61:\n        /* \"#utility.yul\":9640:9644   */\n      0x00\n        /* \"#utility.yul\":9678:9680   */\n      0x20\n        /* \"#utility.yul\":9667:9676   */\n      dup3\n        /* \"#utility.yul\":9663:9681   */\n      add\n        /* \"#utility.yul\":9655:9681   */\n      swap1\n      pop\n        /* \"#utility.yul\":9691:9787   */\n      tag_358\n        /* \"#utility.yul\":9784:9785   */\n      0x00\n        /* \"#utility.yul\":9773:9782   */\n      dup4\n        /* \"#utility.yul\":9769:9786   */\n      add\n        /* \"#utility.yul\":9760:9766   */\n      dup5\n        /* \"#utility.yul\":9691:9787   */\n      tag_218\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9522:9794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9800:10565   */\n    tag_67:\n        /* \"#utility.yul\":9886:9892   */\n      0x00\n        /* \"#utility.yul\":9894:9900   */\n      dup1\n        /* \"#utility.yul\":9902:9908   */\n      0x00\n        /* \"#utility.yul\":9910:9916   */\n      dup1\n        /* \"#utility.yul\":9959:9962   */\n      0x80\n        /* \"#utility.yul\":9947:9956   */\n      dup6\n        /* \"#utility.yul\":9938:9945   */\n      dup8\n        /* \"#utility.yul\":9934:9957   */\n      sub\n        /* \"#utility.yul\":9930:9963   */\n      slt\n        /* \"#utility.yul\":9927:10047   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":9966:10045   */\n      tag_361\n      tag_182\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9927:10047   */\n    tag_360:\n        /* \"#utility.yul\":10086:10087   */\n      0x00\n        /* \"#utility.yul\":10111:10164   */\n      tag_362\n        /* \"#utility.yul\":10156:10163   */\n      dup8\n        /* \"#utility.yul\":10147:10153   */\n      dup3\n        /* \"#utility.yul\":10136:10145   */\n      dup9\n        /* \"#utility.yul\":10132:10154   */\n      add\n        /* \"#utility.yul\":10111:10164   */\n      tag_196\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10101:10164   */\n      swap5\n      pop\n        /* \"#utility.yul\":10057:10174   */\n      pop\n        /* \"#utility.yul\":10213:10215   */\n      0x20\n        /* \"#utility.yul\":10239:10292   */\n      tag_363\n        /* \"#utility.yul\":10284:10291   */\n      dup8\n        /* \"#utility.yul\":10275:10281   */\n      dup3\n        /* \"#utility.yul\":10264:10273   */\n      dup9\n        /* \"#utility.yul\":10260:10282   */\n      add\n        /* \"#utility.yul\":10239:10292   */\n      tag_196\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10229:10292   */\n      swap4\n      pop\n        /* \"#utility.yul\":10184:10302   */\n      pop\n        /* \"#utility.yul\":10341:10343   */\n      0x40\n        /* \"#utility.yul\":10367:10420   */\n      tag_364\n        /* \"#utility.yul\":10412:10419   */\n      dup8\n        /* \"#utility.yul\":10403:10409   */\n      dup3\n        /* \"#utility.yul\":10392:10401   */\n      dup9\n        /* \"#utility.yul\":10388:10410   */\n      add\n        /* \"#utility.yul\":10367:10420   */\n      tag_210\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10357:10420   */\n      swap3\n      pop\n        /* \"#utility.yul\":10312:10430   */\n      pop\n        /* \"#utility.yul\":10469:10471   */\n      0x60\n        /* \"#utility.yul\":10495:10548   */\n      tag_365\n        /* \"#utility.yul\":10540:10547   */\n      dup8\n        /* \"#utility.yul\":10531:10537   */\n      dup3\n        /* \"#utility.yul\":10520:10529   */\n      dup9\n        /* \"#utility.yul\":10516:10538   */\n      add\n        /* \"#utility.yul\":10495:10548   */\n      tag_210\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10485:10548   */\n      swap2\n      pop\n        /* \"#utility.yul\":10440:10558   */\n      pop\n        /* \"#utility.yul\":9800:10565   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10571:10686   */\n    tag_219:\n        /* \"#utility.yul\":10656:10679   */\n      tag_367\n        /* \"#utility.yul\":10673:10678   */\n      dup2\n        /* \"#utility.yul\":10656:10679   */\n      tag_202\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10651:10654   */\n      dup3\n        /* \"#utility.yul\":10644:10680   */\n      mstore\n        /* \"#utility.yul\":10571:10686   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10692:11130   */\n    tag_89:\n        /* \"#utility.yul\":10839:10843   */\n      0x00\n        /* \"#utility.yul\":10877:10879   */\n      0x60\n        /* \"#utility.yul\":10866:10875   */\n      dup3\n        /* \"#utility.yul\":10862:10880   */\n      add\n        /* \"#utility.yul\":10854:10880   */\n      swap1\n      pop\n        /* \"#utility.yul\":10890:10961   */\n      tag_369\n        /* \"#utility.yul\":10958:10959   */\n      0x00\n        /* \"#utility.yul\":10947:10956   */\n      dup4\n        /* \"#utility.yul\":10943:10960   */\n      add\n        /* \"#utility.yul\":10934:10940   */\n      dup7\n        /* \"#utility.yul\":10890:10961   */\n      tag_207\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10971:11043   */\n      tag_370\n        /* \"#utility.yul\":11039:11041   */\n      0x20\n        /* \"#utility.yul\":11028:11037   */\n      dup4\n        /* \"#utility.yul\":11024:11042   */\n      add\n        /* \"#utility.yul\":11015:11021   */\n      dup6\n        /* \"#utility.yul\":10971:11043   */\n      tag_207\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11053:11123   */\n      tag_371\n        /* \"#utility.yul\":11119:11121   */\n      0x40\n        /* \"#utility.yul\":11108:11117   */\n      dup4\n        /* \"#utility.yul\":11104:11122   */\n      add\n        /* \"#utility.yul\":11095:11101   */\n      dup5\n        /* \"#utility.yul\":11053:11123   */\n      tag_219\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10692:11130   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11136:11279   */\n    tag_220:\n        /* \"#utility.yul\":11193:11198   */\n      0x00\n        /* \"#utility.yul\":11224:11230   */\n      dup2\n        /* \"#utility.yul\":11218:11231   */\n      mload\n        /* \"#utility.yul\":11209:11231   */\n      swap1\n      pop\n        /* \"#utility.yul\":11240:11273   */\n      tag_373\n        /* \"#utility.yul\":11267:11272   */\n      dup2\n        /* \"#utility.yul\":11240:11273   */\n      tag_195\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11136:11279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11285:11636   */\n    tag_93:\n        /* \"#utility.yul\":11355:11361   */\n      0x00\n        /* \"#utility.yul\":11404:11406   */\n      0x20\n        /* \"#utility.yul\":11392:11401   */\n      dup3\n        /* \"#utility.yul\":11383:11390   */\n      dup5\n        /* \"#utility.yul\":11379:11402   */\n      sub\n        /* \"#utility.yul\":11375:11407   */\n      slt\n        /* \"#utility.yul\":11372:11491   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":11410:11489   */\n      tag_376\n      tag_182\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11372:11491   */\n    tag_375:\n        /* \"#utility.yul\":11530:11531   */\n      0x00\n        /* \"#utility.yul\":11555:11619   */\n      tag_377\n        /* \"#utility.yul\":11611:11618   */\n      dup5\n        /* \"#utility.yul\":11602:11608   */\n      dup3\n        /* \"#utility.yul\":11591:11600   */\n      dup6\n        /* \"#utility.yul\":11587:11609   */\n      add\n        /* \"#utility.yul\":11555:11619   */\n      tag_220\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11545:11619   */\n      swap2\n      pop\n        /* \"#utility.yul\":11501:11629   */\n      pop\n        /* \"#utility.yul\":11285:11636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11642:11811   */\n    tag_221:\n        /* \"#utility.yul\":11726:11737   */\n      0x00\n        /* \"#utility.yul\":11760:11766   */\n      dup3\n        /* \"#utility.yul\":11755:11758   */\n      dup3\n        /* \"#utility.yul\":11748:11767   */\n      mstore\n        /* \"#utility.yul\":11800:11804   */\n      0x20\n        /* \"#utility.yul\":11795:11798   */\n      dup3\n        /* \"#utility.yul\":11791:11805   */\n      add\n        /* \"#utility.yul\":11776:11805   */\n      swap1\n      pop\n        /* \"#utility.yul\":11642:11811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11817:11986   */\n    tag_222:\n        /* \"#utility.yul\":11957:11978   */\n      0x506f6f6c20616c72656164792065786973747300000000000000000000000000\n        /* \"#utility.yul\":11953:11954   */\n      0x00\n        /* \"#utility.yul\":11945:11951   */\n      dup3\n        /* \"#utility.yul\":11941:11955   */\n      add\n        /* \"#utility.yul\":11934:11979   */\n      mstore\n        /* \"#utility.yul\":11817:11986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11992:12358   */\n    tag_223:\n        /* \"#utility.yul\":12134:12137   */\n      0x00\n        /* \"#utility.yul\":12155:12222   */\n      tag_381\n        /* \"#utility.yul\":12219:12221   */\n      0x13\n        /* \"#utility.yul\":12214:12217   */\n      dup4\n        /* \"#utility.yul\":12155:12222   */\n      tag_221\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12148:12222   */\n      swap2\n      pop\n        /* \"#utility.yul\":12231:12324   */\n      tag_382\n        /* \"#utility.yul\":12320:12323   */\n      dup3\n        /* \"#utility.yul\":12231:12324   */\n      tag_222\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12349:12351   */\n      0x20\n        /* \"#utility.yul\":12344:12347   */\n      dup3\n        /* \"#utility.yul\":12340:12352   */\n      add\n        /* \"#utility.yul\":12333:12352   */\n      swap1\n      pop\n        /* \"#utility.yul\":11992:12358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12364:12783   */\n    tag_96:\n        /* \"#utility.yul\":12530:12534   */\n      0x00\n        /* \"#utility.yul\":12568:12570   */\n      0x20\n        /* \"#utility.yul\":12557:12566   */\n      dup3\n        /* \"#utility.yul\":12553:12571   */\n      add\n        /* \"#utility.yul\":12545:12571   */\n      swap1\n      pop\n        /* \"#utility.yul\":12617:12626   */\n      dup2\n        /* \"#utility.yul\":12611:12615   */\n      dup2\n        /* \"#utility.yul\":12607:12627   */\n      sub\n        /* \"#utility.yul\":12603:12604   */\n      0x00\n        /* \"#utility.yul\":12592:12601   */\n      dup4\n        /* \"#utility.yul\":12588:12605   */\n      add\n        /* \"#utility.yul\":12581:12628   */\n      mstore\n        /* \"#utility.yul\":12645:12776   */\n      tag_384\n        /* \"#utility.yul\":12771:12775   */\n      dup2\n        /* \"#utility.yul\":12645:12776   */\n      tag_223\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12637:12776   */\n      swap1\n      pop\n        /* \"#utility.yul\":12364:12783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12789:12907   */\n    tag_224:\n        /* \"#utility.yul\":12876:12900   */\n      tag_386\n        /* \"#utility.yul\":12894:12899   */\n      dup2\n        /* \"#utility.yul\":12876:12900   */\n      tag_193\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12871:12874   */\n      dup3\n        /* \"#utility.yul\":12864:12901   */\n      mstore\n        /* \"#utility.yul\":12789:12907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12913:13135   */\n    tag_102:\n        /* \"#utility.yul\":13006:13010   */\n      0x00\n        /* \"#utility.yul\":13044:13046   */\n      0x20\n        /* \"#utility.yul\":13033:13042   */\n      dup3\n        /* \"#utility.yul\":13029:13047   */\n      add\n        /* \"#utility.yul\":13021:13047   */\n      swap1\n      pop\n        /* \"#utility.yul\":13057:13128   */\n      tag_388\n        /* \"#utility.yul\":13125:13126   */\n      0x00\n        /* \"#utility.yul\":13114:13123   */\n      dup4\n        /* \"#utility.yul\":13110:13127   */\n      add\n        /* \"#utility.yul\":13101:13107   */\n      dup5\n        /* \"#utility.yul\":13057:13128   */\n      tag_224\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":12913:13135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13141:13284   */\n    tag_225:\n        /* \"#utility.yul\":13198:13203   */\n      0x00\n        /* \"#utility.yul\":13229:13235   */\n      dup2\n        /* \"#utility.yul\":13223:13236   */\n      mload\n        /* \"#utility.yul\":13214:13236   */\n      swap1\n      pop\n        /* \"#utility.yul\":13245:13278   */\n      tag_390\n        /* \"#utility.yul\":13272:13277   */\n      dup2\n        /* \"#utility.yul\":13245:13278   */\n      tag_209\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13141:13284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13290:13641   */\n    tag_112:\n        /* \"#utility.yul\":13360:13366   */\n      0x00\n        /* \"#utility.yul\":13409:13411   */\n      0x20\n        /* \"#utility.yul\":13397:13406   */\n      dup3\n        /* \"#utility.yul\":13388:13395   */\n      dup5\n        /* \"#utility.yul\":13384:13407   */\n      sub\n        /* \"#utility.yul\":13380:13412   */\n      slt\n        /* \"#utility.yul\":13377:13496   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":13415:13494   */\n      tag_393\n      tag_182\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":13377:13496   */\n    tag_392:\n        /* \"#utility.yul\":13535:13536   */\n      0x00\n        /* \"#utility.yul\":13560:13624   */\n      tag_394\n        /* \"#utility.yul\":13616:13623   */\n      dup5\n        /* \"#utility.yul\":13607:13613   */\n      dup3\n        /* \"#utility.yul\":13596:13605   */\n      dup6\n        /* \"#utility.yul\":13592:13614   */\n      add\n        /* \"#utility.yul\":13560:13624   */\n      tag_225\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13550:13624   */\n      swap2\n      pop\n        /* \"#utility.yul\":13506:13634   */\n      pop\n        /* \"#utility.yul\":13290:13641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13647:13816   */\n    tag_226:\n        /* \"#utility.yul\":13787:13808   */\n      0x496e73756666696369656e7420546f6b656e4100000000000000000000000000\n        /* \"#utility.yul\":13783:13784   */\n      0x00\n        /* \"#utility.yul\":13775:13781   */\n      dup3\n        /* \"#utility.yul\":13771:13785   */\n      add\n        /* \"#utility.yul\":13764:13809   */\n      mstore\n        /* \"#utility.yul\":13647:13816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13822:14188   */\n    tag_227:\n        /* \"#utility.yul\":13964:13967   */\n      0x00\n        /* \"#utility.yul\":13985:14052   */\n      tag_397\n        /* \"#utility.yul\":14049:14051   */\n      0x13\n        /* \"#utility.yul\":14044:14047   */\n      dup4\n        /* \"#utility.yul\":13985:14052   */\n      tag_221\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13978:14052   */\n      swap2\n      pop\n        /* \"#utility.yul\":14061:14154   */\n      tag_398\n        /* \"#utility.yul\":14150:14153   */\n      dup3\n        /* \"#utility.yul\":14061:14154   */\n      tag_226\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14179:14181   */\n      0x20\n        /* \"#utility.yul\":14174:14177   */\n      dup3\n        /* \"#utility.yul\":14170:14182   */\n      add\n        /* \"#utility.yul\":14163:14182   */\n      swap1\n      pop\n        /* \"#utility.yul\":13822:14188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14194:14613   */\n    tag_115:\n        /* \"#utility.yul\":14360:14364   */\n      0x00\n        /* \"#utility.yul\":14398:14400   */\n      0x20\n        /* \"#utility.yul\":14387:14396   */\n      dup3\n        /* \"#utility.yul\":14383:14401   */\n      add\n        /* \"#utility.yul\":14375:14401   */\n      swap1\n      pop\n        /* \"#utility.yul\":14447:14456   */\n      dup2\n        /* \"#utility.yul\":14441:14445   */\n      dup2\n        /* \"#utility.yul\":14437:14457   */\n      sub\n        /* \"#utility.yul\":14433:14434   */\n      0x00\n        /* \"#utility.yul\":14422:14431   */\n      dup4\n        /* \"#utility.yul\":14418:14435   */\n      add\n        /* \"#utility.yul\":14411:14458   */\n      mstore\n        /* \"#utility.yul\":14475:14606   */\n      tag_400\n        /* \"#utility.yul\":14601:14605   */\n      dup2\n        /* \"#utility.yul\":14475:14606   */\n      tag_227\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14467:14606   */\n      swap1\n      pop\n        /* \"#utility.yul\":14194:14613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14619:14788   */\n    tag_228:\n        /* \"#utility.yul\":14759:14780   */\n      0x496e73756666696369656e7420546f6b656e4200000000000000000000000000\n        /* \"#utility.yul\":14755:14756   */\n      0x00\n        /* \"#utility.yul\":14747:14753   */\n      dup3\n        /* \"#utility.yul\":14743:14757   */\n      add\n        /* \"#utility.yul\":14736:14781   */\n      mstore\n        /* \"#utility.yul\":14619:14788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14794:15160   */\n    tag_229:\n        /* \"#utility.yul\":14936:14939   */\n      0x00\n        /* \"#utility.yul\":14957:15024   */\n      tag_403\n        /* \"#utility.yul\":15021:15023   */\n      0x13\n        /* \"#utility.yul\":15016:15019   */\n      dup4\n        /* \"#utility.yul\":14957:15024   */\n      tag_221\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14950:15024   */\n      swap2\n      pop\n        /* \"#utility.yul\":15033:15126   */\n      tag_404\n        /* \"#utility.yul\":15122:15125   */\n      dup3\n        /* \"#utility.yul\":15033:15126   */\n      tag_228\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15151:15153   */\n      0x20\n        /* \"#utility.yul\":15146:15149   */\n      dup3\n        /* \"#utility.yul\":15142:15154   */\n      add\n        /* \"#utility.yul\":15135:15154   */\n      swap1\n      pop\n        /* \"#utility.yul\":14794:15160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15166:15585   */\n    tag_122:\n        /* \"#utility.yul\":15332:15336   */\n      0x00\n        /* \"#utility.yul\":15370:15372   */\n      0x20\n        /* \"#utility.yul\":15359:15368   */\n      dup3\n        /* \"#utility.yul\":15355:15373   */\n      add\n        /* \"#utility.yul\":15347:15373   */\n      swap1\n      pop\n        /* \"#utility.yul\":15419:15428   */\n      dup2\n        /* \"#utility.yul\":15413:15417   */\n      dup2\n        /* \"#utility.yul\":15409:15429   */\n      sub\n        /* \"#utility.yul\":15405:15406   */\n      0x00\n        /* \"#utility.yul\":15394:15403   */\n      dup4\n        /* \"#utility.yul\":15390:15407   */\n      add\n        /* \"#utility.yul\":15383:15430   */\n      mstore\n        /* \"#utility.yul\":15447:15578   */\n      tag_406\n        /* \"#utility.yul\":15573:15577   */\n      dup2\n        /* \"#utility.yul\":15447:15578   */\n      tag_229\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15439:15578   */\n      swap1\n      pop\n        /* \"#utility.yul\":15166:15585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15591:15771   */\n    tag_230:\n        /* \"#utility.yul\":15639:15716   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15636:15637   */\n      0x00\n        /* \"#utility.yul\":15629:15717   */\n      mstore\n        /* \"#utility.yul\":15736:15740   */\n      0x11\n        /* \"#utility.yul\":15733:15734   */\n      0x04\n        /* \"#utility.yul\":15726:15741   */\n      mstore\n        /* \"#utility.yul\":15760:15764   */\n      0x24\n        /* \"#utility.yul\":15757:15758   */\n      0x00\n        /* \"#utility.yul\":15750:15765   */\n      revert\n        /* \"#utility.yul\":15777:15968   */\n    tag_124:\n        /* \"#utility.yul\":15817:15820   */\n      0x00\n        /* \"#utility.yul\":15836:15856   */\n      tag_409\n        /* \"#utility.yul\":15854:15855   */\n      dup3\n        /* \"#utility.yul\":15836:15856   */\n      tag_208\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":15831:15856   */\n      swap2\n      pop\n        /* \"#utility.yul\":15870:15890   */\n      tag_410\n        /* \"#utility.yul\":15888:15889   */\n      dup4\n        /* \"#utility.yul\":15870:15890   */\n      tag_208\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15865:15890   */\n      swap3\n      pop\n        /* \"#utility.yul\":15913:15914   */\n      dup3\n        /* \"#utility.yul\":15910:15911   */\n      dup3\n        /* \"#utility.yul\":15906:15915   */\n      add\n        /* \"#utility.yul\":15899:15915   */\n      swap1\n      pop\n        /* \"#utility.yul\":15934:15937   */\n      dup1\n        /* \"#utility.yul\":15931:15932   */\n      dup3\n        /* \"#utility.yul\":15928:15938   */\n      gt\n        /* \"#utility.yul\":15925:15961   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":15941:15959   */\n      tag_412\n      tag_230\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15925:15961   */\n    tag_411:\n        /* \"#utility.yul\":15777:15968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15974:16082   */\n    tag_231:\n        /* \"#utility.yul\":16051:16075   */\n      tag_414\n        /* \"#utility.yul\":16069:16074   */\n      dup2\n        /* \"#utility.yul\":16051:16075   */\n      tag_194\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":16046:16049   */\n      dup3\n        /* \"#utility.yul\":16039:16076   */\n      mstore\n        /* \"#utility.yul\":15974:16082   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16088:16193   */\n    tag_232:\n        /* \"#utility.yul\":16163:16186   */\n      tag_416\n        /* \"#utility.yul\":16180:16185   */\n      dup2\n        /* \"#utility.yul\":16163:16186   */\n      tag_202\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16158:16161   */\n      dup3\n        /* \"#utility.yul\":16151:16187   */\n      mstore\n        /* \"#utility.yul\":16088:16193   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16199:16301   */\n    tag_233:\n        /* \"#utility.yul\":16272:16294   */\n      tag_418\n        /* \"#utility.yul\":16288:16293   */\n      dup2\n        /* \"#utility.yul\":16272:16294   */\n      tag_211\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16267:16270   */\n      dup3\n        /* \"#utility.yul\":16260:16295   */\n      mstore\n        /* \"#utility.yul\":16199:16301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16307:16415   */\n    tag_234:\n        /* \"#utility.yul\":16384:16408   */\n      tag_420\n        /* \"#utility.yul\":16402:16407   */\n      dup2\n        /* \"#utility.yul\":16384:16408   */\n      tag_208\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16379:16382   */\n      dup3\n        /* \"#utility.yul\":16372:16409   */\n      mstore\n        /* \"#utility.yul\":16307:16415   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16523:18660   */\n    tag_235:\n        /* \"#utility.yul\":16676:16682   */\n      0x0160\n        /* \"#utility.yul\":16671:16674   */\n      dup3\n        /* \"#utility.yul\":16667:16683   */\n      add\n        /* \"#utility.yul\":16767:16771   */\n      0x00\n        /* \"#utility.yul\":16760:16765   */\n      dup3\n        /* \"#utility.yul\":16756:16772   */\n      add\n        /* \"#utility.yul\":16750:16773   */\n      mload\n        /* \"#utility.yul\":16786:16849   */\n      tag_422\n        /* \"#utility.yul\":16843:16847   */\n      0x00\n        /* \"#utility.yul\":16838:16841   */\n      dup6\n        /* \"#utility.yul\":16834:16848   */\n      add\n        /* \"#utility.yul\":16820:16832   */\n      dup3\n        /* \"#utility.yul\":16786:16849   */\n      tag_231\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16693:16859   */\n      pop\n        /* \"#utility.yul\":16943:16947   */\n      0x20\n        /* \"#utility.yul\":16936:16941   */\n      dup3\n        /* \"#utility.yul\":16932:16948   */\n      add\n        /* \"#utility.yul\":16926:16949   */\n      mload\n        /* \"#utility.yul\":16962:17025   */\n      tag_423\n        /* \"#utility.yul\":17019:17023   */\n      0x20\n        /* \"#utility.yul\":17014:17017   */\n      dup6\n        /* \"#utility.yul\":17010:17024   */\n      add\n        /* \"#utility.yul\":16996:17008   */\n      dup3\n        /* \"#utility.yul\":16962:17025   */\n      tag_231\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":16869:17035   */\n      pop\n        /* \"#utility.yul\":17116:17120   */\n      0x40\n        /* \"#utility.yul\":17109:17114   */\n      dup3\n        /* \"#utility.yul\":17105:17121   */\n      add\n        /* \"#utility.yul\":17099:17122   */\n      mload\n        /* \"#utility.yul\":17135:17196   */\n      tag_424\n        /* \"#utility.yul\":17190:17194   */\n      0x40\n        /* \"#utility.yul\":17185:17188   */\n      dup6\n        /* \"#utility.yul\":17181:17195   */\n      add\n        /* \"#utility.yul\":17167:17179   */\n      dup3\n        /* \"#utility.yul\":17135:17196   */\n      tag_232\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":17045:17206   */\n      pop\n        /* \"#utility.yul\":17293:17297   */\n      0x60\n        /* \"#utility.yul\":17286:17291   */\n      dup3\n        /* \"#utility.yul\":17282:17298   */\n      add\n        /* \"#utility.yul\":17276:17299   */\n      mload\n        /* \"#utility.yul\":17312:17371   */\n      tag_425\n        /* \"#utility.yul\":17365:17369   */\n      0x60\n        /* \"#utility.yul\":17360:17363   */\n      dup6\n        /* \"#utility.yul\":17356:17370   */\n      add\n        /* \"#utility.yul\":17342:17354   */\n      dup3\n        /* \"#utility.yul\":17312:17371   */\n      tag_233\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":17216:17381   */\n      pop\n        /* \"#utility.yul\":17468:17472   */\n      0x80\n        /* \"#utility.yul\":17461:17466   */\n      dup3\n        /* \"#utility.yul\":17457:17473   */\n      add\n        /* \"#utility.yul\":17451:17474   */\n      mload\n        /* \"#utility.yul\":17487:17546   */\n      tag_426\n        /* \"#utility.yul\":17540:17544   */\n      0x80\n        /* \"#utility.yul\":17535:17538   */\n      dup6\n        /* \"#utility.yul\":17531:17545   */\n      add\n        /* \"#utility.yul\":17517:17529   */\n      dup3\n        /* \"#utility.yul\":17487:17546   */\n      tag_233\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":17391:17556   */\n      pop\n        /* \"#utility.yul\":17648:17652   */\n      0xa0\n        /* \"#utility.yul\":17641:17646   */\n      dup3\n        /* \"#utility.yul\":17637:17653   */\n      add\n        /* \"#utility.yul\":17631:17654   */\n      mload\n        /* \"#utility.yul\":17667:17730   */\n      tag_427\n        /* \"#utility.yul\":17724:17728   */\n      0xa0\n        /* \"#utility.yul\":17719:17722   */\n      dup6\n        /* \"#utility.yul\":17715:17729   */\n      add\n        /* \"#utility.yul\":17701:17713   */\n      dup3\n        /* \"#utility.yul\":17667:17730   */\n      tag_234\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":17566:17740   */\n      pop\n        /* \"#utility.yul\":17832:17836   */\n      0xc0\n        /* \"#utility.yul\":17825:17830   */\n      dup3\n        /* \"#utility.yul\":17821:17837   */\n      add\n        /* \"#utility.yul\":17815:17838   */\n      mload\n        /* \"#utility.yul\":17851:17914   */\n      tag_428\n        /* \"#utility.yul\":17908:17912   */\n      0xc0\n        /* \"#utility.yul\":17903:17906   */\n      dup6\n        /* \"#utility.yul\":17899:17913   */\n      add\n        /* \"#utility.yul\":17885:17897   */\n      dup3\n        /* \"#utility.yul\":17851:17914   */\n      tag_234\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":17750:17924   */\n      pop\n        /* \"#utility.yul\":18012:18016   */\n      0xe0\n        /* \"#utility.yul\":18005:18010   */\n      dup3\n        /* \"#utility.yul\":18001:18017   */\n      add\n        /* \"#utility.yul\":17995:18018   */\n      mload\n        /* \"#utility.yul\":18031:18094   */\n      tag_429\n        /* \"#utility.yul\":18088:18092   */\n      0xe0\n        /* \"#utility.yul\":18083:18086   */\n      dup6\n        /* \"#utility.yul\":18079:18093   */\n      add\n        /* \"#utility.yul\":18065:18077   */\n      dup3\n        /* \"#utility.yul\":18031:18094   */\n      tag_234\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":17934:18104   */\n      pop\n        /* \"#utility.yul\":18192:18198   */\n      0x0100\n        /* \"#utility.yul\":18185:18190   */\n      dup3\n        /* \"#utility.yul\":18181:18199   */\n      add\n        /* \"#utility.yul\":18175:18200   */\n      mload\n        /* \"#utility.yul\":18213:18278   */\n      tag_430\n        /* \"#utility.yul\":18270:18276   */\n      0x0100\n        /* \"#utility.yul\":18265:18268   */\n      dup6\n        /* \"#utility.yul\":18261:18277   */\n      add\n        /* \"#utility.yul\":18247:18259   */\n      dup3\n        /* \"#utility.yul\":18213:18278   */\n      tag_234\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":18114:18288   */\n      pop\n        /* \"#utility.yul\":18375:18381   */\n      0x0120\n        /* \"#utility.yul\":18368:18373   */\n      dup3\n        /* \"#utility.yul\":18364:18382   */\n      add\n        /* \"#utility.yul\":18358:18383   */\n      mload\n        /* \"#utility.yul\":18396:18461   */\n      tag_431\n        /* \"#utility.yul\":18453:18459   */\n      0x0120\n        /* \"#utility.yul\":18448:18451   */\n      dup6\n        /* \"#utility.yul\":18444:18460   */\n      add\n        /* \"#utility.yul\":18430:18442   */\n      dup3\n        /* \"#utility.yul\":18396:18461   */\n      tag_231\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":18298:18471   */\n      pop\n        /* \"#utility.yul\":18557:18563   */\n      0x0140\n        /* \"#utility.yul\":18550:18555   */\n      dup3\n        /* \"#utility.yul\":18546:18564   */\n      add\n        /* \"#utility.yul\":18540:18565   */\n      mload\n        /* \"#utility.yul\":18578:18643   */\n      tag_432\n        /* \"#utility.yul\":18635:18641   */\n      0x0140\n        /* \"#utility.yul\":18630:18633   */\n      dup6\n        /* \"#utility.yul\":18626:18642   */\n      add\n        /* \"#utility.yul\":18612:18624   */\n      dup3\n        /* \"#utility.yul\":18578:18643   */\n      tag_234\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":18481:18653   */\n      pop\n        /* \"#utility.yul\":16645:18660   */\n      pop\n        /* \"#utility.yul\":16523:18660   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18666:19001   */\n    tag_126:\n        /* \"#utility.yul\":18815:18819   */\n      0x00\n        /* \"#utility.yul\":18853:18856   */\n      0x0160\n        /* \"#utility.yul\":18842:18851   */\n      dup3\n        /* \"#utility.yul\":18838:18857   */\n      add\n        /* \"#utility.yul\":18830:18857   */\n      swap1\n      pop\n        /* \"#utility.yul\":18867:18994   */\n      tag_434\n        /* \"#utility.yul\":18991:18992   */\n      0x00\n        /* \"#utility.yul\":18980:18989   */\n      dup4\n        /* \"#utility.yul\":18976:18993   */\n      add\n        /* \"#utility.yul\":18967:18973   */\n      dup5\n        /* \"#utility.yul\":18867:18994   */\n      tag_235\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":18666:19001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19007:19129   */\n    tag_236:\n        /* \"#utility.yul\":19080:19104   */\n      tag_436\n        /* \"#utility.yul\":19098:19103   */\n      dup2\n        /* \"#utility.yul\":19080:19104   */\n      tag_215\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":19073:19078   */\n      dup2\n        /* \"#utility.yul\":19070:19105   */\n      eq\n        /* \"#utility.yul\":19060:19123   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":19119:19120   */\n      0x00\n        /* \"#utility.yul\":19116:19117   */\n      dup1\n        /* \"#utility.yul\":19109:19121   */\n      revert\n        /* \"#utility.yul\":19060:19123   */\n    tag_437:\n        /* \"#utility.yul\":19007:19129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19135:19278   */\n    tag_237:\n        /* \"#utility.yul\":19192:19197   */\n      0x00\n        /* \"#utility.yul\":19223:19229   */\n      dup2\n        /* \"#utility.yul\":19217:19230   */\n      mload\n        /* \"#utility.yul\":19208:19230   */\n      swap1\n      pop\n        /* \"#utility.yul\":19239:19272   */\n      tag_439\n        /* \"#utility.yul\":19266:19271   */\n      dup2\n        /* \"#utility.yul\":19239:19272   */\n      tag_236\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":19135:19278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19284:20104   */\n    tag_130:\n        /* \"#utility.yul\":19381:19387   */\n      0x00\n        /* \"#utility.yul\":19389:19395   */\n      dup1\n        /* \"#utility.yul\":19397:19403   */\n      0x00\n        /* \"#utility.yul\":19405:19411   */\n      dup1\n        /* \"#utility.yul\":19454:19457   */\n      0x80\n        /* \"#utility.yul\":19442:19451   */\n      dup6\n        /* \"#utility.yul\":19433:19440   */\n      dup8\n        /* \"#utility.yul\":19429:19452   */\n      sub\n        /* \"#utility.yul\":19425:19458   */\n      slt\n        /* \"#utility.yul\":19422:19542   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":19461:19540   */\n      tag_442\n      tag_182\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":19422:19542   */\n    tag_441:\n        /* \"#utility.yul\":19581:19582   */\n      0x00\n        /* \"#utility.yul\":19606:19670   */\n      tag_443\n        /* \"#utility.yul\":19662:19669   */\n      dup8\n        /* \"#utility.yul\":19653:19659   */\n      dup3\n        /* \"#utility.yul\":19642:19651   */\n      dup9\n        /* \"#utility.yul\":19638:19660   */\n      add\n        /* \"#utility.yul\":19606:19670   */\n      tag_225\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":19596:19670   */\n      swap5\n      pop\n        /* \"#utility.yul\":19552:19680   */\n      pop\n        /* \"#utility.yul\":19719:19721   */\n      0x20\n        /* \"#utility.yul\":19745:19809   */\n      tag_444\n        /* \"#utility.yul\":19801:19808   */\n      dup8\n        /* \"#utility.yul\":19792:19798   */\n      dup3\n        /* \"#utility.yul\":19781:19790   */\n      dup9\n        /* \"#utility.yul\":19777:19799   */\n      add\n        /* \"#utility.yul\":19745:19809   */\n      tag_237\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":19735:19809   */\n      swap4\n      pop\n        /* \"#utility.yul\":19690:19819   */\n      pop\n        /* \"#utility.yul\":19858:19860   */\n      0x40\n        /* \"#utility.yul\":19884:19948   */\n      tag_445\n        /* \"#utility.yul\":19940:19947   */\n      dup8\n        /* \"#utility.yul\":19931:19937   */\n      dup3\n        /* \"#utility.yul\":19920:19929   */\n      dup9\n        /* \"#utility.yul\":19916:19938   */\n      add\n        /* \"#utility.yul\":19884:19948   */\n      tag_225\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":19874:19948   */\n      swap3\n      pop\n        /* \"#utility.yul\":19829:19958   */\n      pop\n        /* \"#utility.yul\":19997:19999   */\n      0x60\n        /* \"#utility.yul\":20023:20087   */\n      tag_446\n        /* \"#utility.yul\":20079:20086   */\n      dup8\n        /* \"#utility.yul\":20070:20076   */\n      dup3\n        /* \"#utility.yul\":20059:20068   */\n      dup9\n        /* \"#utility.yul\":20055:20077   */\n      add\n        /* \"#utility.yul\":20023:20087   */\n      tag_225\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":20013:20087   */\n      swap2\n      pop\n        /* \"#utility.yul\":19968:20097   */\n      pop\n        /* \"#utility.yul\":19284:20104   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20110:20304   */\n    tag_133:\n        /* \"#utility.yul\":20150:20154   */\n      0x00\n        /* \"#utility.yul\":20170:20190   */\n      tag_448\n        /* \"#utility.yul\":20188:20189   */\n      dup3\n        /* \"#utility.yul\":20170:20190   */\n      tag_208\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":20165:20190   */\n      swap2\n      pop\n        /* \"#utility.yul\":20204:20224   */\n      tag_449\n        /* \"#utility.yul\":20222:20223   */\n      dup4\n        /* \"#utility.yul\":20204:20224   */\n      tag_208\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":20199:20224   */\n      swap3\n      pop\n        /* \"#utility.yul\":20248:20249   */\n      dup3\n        /* \"#utility.yul\":20245:20246   */\n      dup3\n        /* \"#utility.yul\":20241:20250   */\n      sub\n        /* \"#utility.yul\":20233:20250   */\n      swap1\n      pop\n        /* \"#utility.yul\":20272:20273   */\n      dup2\n        /* \"#utility.yul\":20266:20270   */\n      dup2\n        /* \"#utility.yul\":20263:20274   */\n      gt\n        /* \"#utility.yul\":20260:20297   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":20277:20295   */\n      tag_451\n      tag_230\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":20260:20297   */\n    tag_450:\n        /* \"#utility.yul\":20110:20304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20310:20642   */\n    tag_135:\n        /* \"#utility.yul\":20431:20435   */\n      0x00\n        /* \"#utility.yul\":20469:20471   */\n      0x40\n        /* \"#utility.yul\":20458:20467   */\n      dup3\n        /* \"#utility.yul\":20454:20472   */\n      add\n        /* \"#utility.yul\":20446:20472   */\n      swap1\n      pop\n        /* \"#utility.yul\":20482:20553   */\n      tag_453\n        /* \"#utility.yul\":20550:20551   */\n      0x00\n        /* \"#utility.yul\":20539:20548   */\n      dup4\n        /* \"#utility.yul\":20535:20552   */\n      add\n        /* \"#utility.yul\":20526:20532   */\n      dup6\n        /* \"#utility.yul\":20482:20553   */\n      tag_207\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":20563:20635   */\n      tag_454\n        /* \"#utility.yul\":20631:20633   */\n      0x20\n        /* \"#utility.yul\":20620:20629   */\n      dup4\n        /* \"#utility.yul\":20616:20634   */\n      add\n        /* \"#utility.yul\":20607:20613   */\n      dup5\n        /* \"#utility.yul\":20563:20635   */\n      tag_214\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":20310:20642   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20648:20764   */\n    tag_238:\n        /* \"#utility.yul\":20718:20739   */\n      tag_456\n        /* \"#utility.yul\":20733:20738   */\n      dup2\n        /* \"#utility.yul\":20718:20739   */\n      tag_187\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":20711:20716   */\n      dup2\n        /* \"#utility.yul\":20708:20740   */\n      eq\n        /* \"#utility.yul\":20698:20758   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":20754:20755   */\n      0x00\n        /* \"#utility.yul\":20751:20752   */\n      dup1\n        /* \"#utility.yul\":20744:20756   */\n      revert\n        /* \"#utility.yul\":20698:20758   */\n    tag_457:\n        /* \"#utility.yul\":20648:20764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20770:20907   */\n    tag_239:\n        /* \"#utility.yul\":20824:20829   */\n      0x00\n        /* \"#utility.yul\":20855:20861   */\n      dup2\n        /* \"#utility.yul\":20849:20862   */\n      mload\n        /* \"#utility.yul\":20840:20862   */\n      swap1\n      pop\n        /* \"#utility.yul\":20871:20901   */\n      tag_459\n        /* \"#utility.yul\":20895:20900   */\n      dup2\n        /* \"#utility.yul\":20871:20901   */\n      tag_238\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":20770:20907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20913:21258   */\n    tag_139:\n        /* \"#utility.yul\":20980:20986   */\n      0x00\n        /* \"#utility.yul\":21029:21031   */\n      0x20\n        /* \"#utility.yul\":21017:21026   */\n      dup3\n        /* \"#utility.yul\":21008:21015   */\n      dup5\n        /* \"#utility.yul\":21004:21027   */\n      sub\n        /* \"#utility.yul\":21000:21032   */\n      slt\n        /* \"#utility.yul\":20997:21116   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":21035:21114   */\n      tag_462\n      tag_182\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":20997:21116   */\n    tag_461:\n        /* \"#utility.yul\":21155:21156   */\n      0x00\n        /* \"#utility.yul\":21180:21241   */\n      tag_463\n        /* \"#utility.yul\":21233:21240   */\n      dup5\n        /* \"#utility.yul\":21224:21230   */\n      dup3\n        /* \"#utility.yul\":21213:21222   */\n      dup6\n        /* \"#utility.yul\":21209:21231   */\n      add\n        /* \"#utility.yul\":21180:21241   */\n      tag_239\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":21170:21241   */\n      swap2\n      pop\n        /* \"#utility.yul\":21126:21251   */\n      pop\n        /* \"#utility.yul\":20913:21258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21264:21596   */\n    tag_180:\n        /* \"#utility.yul\":21385:21389   */\n      0x00\n        /* \"#utility.yul\":21423:21425   */\n      0x40\n        /* \"#utility.yul\":21412:21421   */\n      dup3\n        /* \"#utility.yul\":21408:21426   */\n      add\n        /* \"#utility.yul\":21400:21426   */\n      swap1\n      pop\n        /* \"#utility.yul\":21436:21507   */\n      tag_465\n        /* \"#utility.yul\":21504:21505   */\n      0x00\n        /* \"#utility.yul\":21493:21502   */\n      dup4\n        /* \"#utility.yul\":21489:21506   */\n      add\n        /* \"#utility.yul\":21480:21486   */\n      dup6\n        /* \"#utility.yul\":21436:21507   */\n      tag_207\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":21517:21589   */\n      tag_466\n        /* \"#utility.yul\":21585:21587   */\n      0x20\n        /* \"#utility.yul\":21574:21583   */\n      dup4\n        /* \"#utility.yul\":21570:21588   */\n      add\n        /* \"#utility.yul\":21561:21567   */\n      dup5\n        /* \"#utility.yul\":21517:21589   */\n      tag_192\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":21264:21596   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202746b90d6488fee63cc53a1ddf1f3eff0c8214ec5407ec25de9921348485824f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1690": {
									"entryPoint": null,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:25",
										"nodeType": "YulBlock",
										"src": "0:1355:25",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:25",
													"nodeType": "YulBlock",
													"src": "47:35:25",
													"statements": [
														{
															"nativeSrc": "57:19:25",
															"nodeType": "YulAssignment",
															"src": "57:19:25",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:25",
																		"nodeType": "YulLiteral",
																		"src": "73:2:25",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:25"
																},
																"nativeSrc": "67:9:25",
																"nodeType": "YulFunctionCall",
																"src": "67:9:25"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:25"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:25",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:25",
														"nodeType": "YulTypedName",
														"src": "40:6:25",
														"type": ""
													}
												],
												"src": "7:75:25"
											},
											{
												"body": {
													"nativeSrc": "177:28:25",
													"nodeType": "YulBlock",
													"src": "177:28:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:25",
																		"nodeType": "YulLiteral",
																		"src": "194:1:25",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:25",
																		"nodeType": "YulLiteral",
																		"src": "197:1:25",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:25"
																},
																"nativeSrc": "187:12:25",
																"nodeType": "YulFunctionCall",
																"src": "187:12:25"
															},
															"nativeSrc": "187:12:25",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:25"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:25",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:25"
											},
											{
												"body": {
													"nativeSrc": "300:28:25",
													"nodeType": "YulBlock",
													"src": "300:28:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:25",
																		"nodeType": "YulLiteral",
																		"src": "317:1:25",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:25",
																		"nodeType": "YulLiteral",
																		"src": "320:1:25",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:25"
																},
																"nativeSrc": "310:12:25",
																"nodeType": "YulFunctionCall",
																"src": "310:12:25"
															},
															"nativeSrc": "310:12:25",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:25"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:25",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:25"
											},
											{
												"body": {
													"nativeSrc": "379:81:25",
													"nodeType": "YulBlock",
													"src": "379:81:25",
													"statements": [
														{
															"nativeSrc": "389:65:25",
															"nodeType": "YulAssignment",
															"src": "389:65:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:25",
																		"nodeType": "YulLiteral",
																		"src": "411:42:25",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:25"
																},
																"nativeSrc": "400:54:25",
																"nodeType": "YulFunctionCall",
																"src": "400:54:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:25",
														"nodeType": "YulTypedName",
														"src": "361:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:25",
														"nodeType": "YulTypedName",
														"src": "371:7:25",
														"type": ""
													}
												],
												"src": "334:126:25"
											},
											{
												"body": {
													"nativeSrc": "511:51:25",
													"nodeType": "YulBlock",
													"src": "511:51:25",
													"statements": [
														{
															"nativeSrc": "521:35:25",
															"nodeType": "YulAssignment",
															"src": "521:35:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:25"
																},
																"nativeSrc": "532:24:25",
																"nodeType": "YulFunctionCall",
																"src": "532:24:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:25",
														"nodeType": "YulTypedName",
														"src": "493:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:25",
														"nodeType": "YulTypedName",
														"src": "503:7:25",
														"type": ""
													}
												],
												"src": "466:96:25"
											},
											{
												"body": {
													"nativeSrc": "611:79:25",
													"nodeType": "YulBlock",
													"src": "611:79:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:25",
																"nodeType": "YulBlock",
																"src": "668:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:25",
																					"nodeType": "YulLiteral",
																					"src": "677:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:25",
																					"nodeType": "YulLiteral",
																					"src": "680:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:25"
																			},
																			"nativeSrc": "670:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:25"
																		},
																		"nativeSrc": "670:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:25"
																				},
																				"nativeSrc": "641:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:25"
																		},
																		"nativeSrc": "631:35:25",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:25"
																},
																"nativeSrc": "624:43:25",
																"nodeType": "YulFunctionCall",
																"src": "624:43:25"
															},
															"nativeSrc": "621:63:25",
															"nodeType": "YulIf",
															"src": "621:63:25"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:25",
														"nodeType": "YulTypedName",
														"src": "604:5:25",
														"type": ""
													}
												],
												"src": "568:122:25"
											},
											{
												"body": {
													"nativeSrc": "759:80:25",
													"nodeType": "YulBlock",
													"src": "759:80:25",
													"statements": [
														{
															"nativeSrc": "769:22:25",
															"nodeType": "YulAssignment",
															"src": "769:22:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:25"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:25"
																},
																"nativeSrc": "778:13:25",
																"nodeType": "YulFunctionCall",
																"src": "778:13:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:25"
																},
																"nativeSrc": "800:33:25",
																"nodeType": "YulFunctionCall",
																"src": "800:33:25"
															},
															"nativeSrc": "800:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:25"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:25",
														"nodeType": "YulTypedName",
														"src": "737:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:25",
														"nodeType": "YulTypedName",
														"src": "745:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:25",
														"nodeType": "YulTypedName",
														"src": "753:5:25",
														"type": ""
													}
												],
												"src": "696:143:25"
											},
											{
												"body": {
													"nativeSrc": "939:413:25",
													"nodeType": "YulBlock",
													"src": "939:413:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:25",
																"nodeType": "YulBlock",
																"src": "985:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:25"
																			},
																			"nativeSrc": "987:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:25"
																		},
																		"nativeSrc": "987:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:25"
																		},
																		"nativeSrc": "956:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:25",
																		"nodeType": "YulLiteral",
																		"src": "981:2:25",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:25"
																},
																"nativeSrc": "952:32:25",
																"nodeType": "YulFunctionCall",
																"src": "952:32:25"
															},
															"nativeSrc": "949:119:25",
															"nodeType": "YulIf",
															"src": "949:119:25"
														},
														{
															"nativeSrc": "1078:128:25",
															"nodeType": "YulBlock",
															"src": "1078:128:25",
															"statements": [
																{
																	"nativeSrc": "1093:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:25",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:25",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:25",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:25"
																				},
																				"nativeSrc": "1164:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:25"
																		},
																		"nativeSrc": "1132:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:25",
															"nodeType": "YulBlock",
															"src": "1216:129:25",
															"statements": [
																{
																	"nativeSrc": "1231:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:25",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:25",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:25",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:25",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:25"
																				},
																				"nativeSrc": "1303:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:25"
																		},
																		"nativeSrc": "1271:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:25",
														"nodeType": "YulTypedName",
														"src": "901:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:25",
														"nodeType": "YulTypedName",
														"src": "912:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:25",
														"nodeType": "YulTypedName",
														"src": "924:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:25",
														"nodeType": "YulTypedName",
														"src": "932:6:25",
														"type": ""
													}
												],
												"src": "845:507:25"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 25,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611a8b380380611a8b83398181016040528101906100319190610116565b8160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e5826100bc565b9050919050565b6100f5816100db565b81146100ff575f80fd5b50565b5f81519050610110816100ec565b92915050565b5f806040838503121561012c5761012b6100b8565b5b5f61013985828601610102565b925050602061014a85828601610102565b9150509250929050565b61192a806101615f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806391d148541161006f57806391d148541461019c578063a217fddf146101cc578063afbce84e146101ea578063c45a01551461021d578063d547741f1461023b578063ecf4daa714610257576100b2565b806301ffc9a7146100b6578063248a9ca3146100e65780632f2ff15d1461011657806336568abe14610132578063791b98bc1461014e5780638e909e511461016c575b5f80fd5b6100d060048036038101906100cb9190610ecc565b610273565b6040516100dd9190610f11565b60405180910390f35b61010060048036038101906100fb9190610f5d565b6102ec565b60405161010d9190610f97565b60405180910390f35b610130600480360381019061012b919061100a565b610308565b005b61014c6004803603810190610147919061100a565b61032a565b005b6101566103a5565b60405161016391906110a3565b60405180910390f35b6101866004803603810190610181919061111e565b6103ca565b6040516101939190611191565b60405180910390f35b6101b660048036038101906101b1919061100a565b6105e3565b6040516101c39190610f11565b60405180910390f35b6101d4610646565b6040516101e19190610f97565b60405180910390f35b61020460048036038101906101ff9190611213565b61064c565b60405161021494939291906112e9565b60405180910390f35b610225610a45565b604051610232919061134c565b60405180910390f35b6102556004803603810190610250919061100a565b610a6a565b005b610271600480360381019061026c9190611365565b610a8c565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102e557506102e482610bcc565b5b9050919050565b5f805f8381526020019081526020015f20600101549050919050565b610311826102ec565b61031a81610c35565b6103248383610c49565b50505050565b610332610d32565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610396576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a08282610d39565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8073ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631698ee828787876040518463ffffffff1660e01b8152600401610440939291906113d8565b602060405180830381865afa15801561045b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061047f9190611421565b73ffffffffffffffffffffffffffffffffffffffff16146104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc906114a6565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a16712958686866040518463ffffffff1660e01b8152600401610533939291906113d8565b6020604051808303815f875af115801561054f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105739190611421565b90508073ffffffffffffffffffffffffffffffffffffffff1663f637731d836040518263ffffffff1660e01b81526004016105ae91906114d3565b5f604051808303815f87803b1580156105c5575f80fd5b505af11580156105d7573d5f803e3d5ffd5b50505050949350505050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f805f80878b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161068a9190611191565b602060405180830381865afa1580156106a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c99190611500565b101561070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190611575565b60405180910390fd5b868a73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107449190611191565b602060405180830381865afa15801561075f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107839190611500565b10156107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb906115dd565b60405180910390fd5b5f6040518061016001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b62ffffff1681526020018860020b81526020018760020b81526020018a81526020018981526020015f81526020015f81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016078426108679190611628565b815250905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b81526004016108c69190611776565b6080604051808303815f875af11580156108e2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061090691906117ba565b80955081965082975083985050505050828911156109a6578b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33858c610947919061181e565b6040518363ffffffff1660e01b8152600401610964929190611851565b6020604051808303815f875af1158015610980573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109a491906118a2565b505b81881115610a36578a73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33848b6109d7919061181e565b6040518363ffffffff1660e01b81526004016109f4929190611851565b6020604051808303815f875af1158015610a10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3491906118a2565b505b50975097509750979350505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a73826102ec565b610a7c81610c35565b610a868383610d39565b50505050565b8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610ae8929190611851565b6020604051808303815f875af1158015610b04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2891906118a2565b508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610b85929190611851565b6020604051808303815f875af1158015610ba1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc591906118a2565b5050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c4681610c41610d32565b610e22565b50565b5f610c5483836105e3565b610d285760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610cc5610d32565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610d2c565b5f90505b92915050565b5f33905090565b5f610d4483836105e3565b15610e18575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610db5610d32565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e1c565b5f90505b92915050565b610e2c82826105e3565b610e6f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610e669291906118cd565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610eab81610e77565b8114610eb5575f80fd5b50565b5f81359050610ec681610ea2565b92915050565b5f60208284031215610ee157610ee0610e73565b5b5f610eee84828501610eb8565b91505092915050565b5f8115159050919050565b610f0b81610ef7565b82525050565b5f602082019050610f245f830184610f02565b92915050565b5f819050919050565b610f3c81610f2a565b8114610f46575f80fd5b50565b5f81359050610f5781610f33565b92915050565b5f60208284031215610f7257610f71610e73565b5b5f610f7f84828501610f49565b91505092915050565b610f9181610f2a565b82525050565b5f602082019050610faa5f830184610f88565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fd982610fb0565b9050919050565b610fe981610fcf565b8114610ff3575f80fd5b50565b5f8135905061100481610fe0565b92915050565b5f80604083850312156110205761101f610e73565b5b5f61102d85828601610f49565b925050602061103e85828601610ff6565b9150509250929050565b5f819050919050565b5f61106b61106661106184610fb0565b611048565b610fb0565b9050919050565b5f61107c82611051565b9050919050565b5f61108d82611072565b9050919050565b61109d81611083565b82525050565b5f6020820190506110b65f830184611094565b92915050565b5f62ffffff82169050919050565b6110d3816110bc565b81146110dd575f80fd5b50565b5f813590506110ee816110ca565b92915050565b6110fd81610fb0565b8114611107575f80fd5b50565b5f81359050611118816110f4565b92915050565b5f805f806080858703121561113657611135610e73565b5b5f61114387828801610ff6565b945050602061115487828801610ff6565b9350506040611165878288016110e0565b92505060606111768782880161110a565b91505092959194509250565b61118b81610fcf565b82525050565b5f6020820190506111a45f830184611182565b92915050565b5f819050919050565b6111bc816111aa565b81146111c6575f80fd5b50565b5f813590506111d7816111b3565b92915050565b5f8160020b9050919050565b6111f2816111dd565b81146111fc575f80fd5b50565b5f8135905061120d816111e9565b92915050565b5f805f805f805f60e0888a03121561122e5761122d610e73565b5b5f61123b8a828b01610ff6565b975050602061124c8a828b01610ff6565b965050604061125d8a828b016110e0565b955050606061126e8a828b016111c9565b945050608061127f8a828b016111c9565b93505060a06112908a828b016111ff565b92505060c06112a18a828b016111ff565b91505092959891949750929550565b6112b9816111aa565b82525050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6112e3816112bf565b82525050565b5f6080820190506112fc5f8301876112b0565b61130960208301866112da565b61131660408301856112b0565b61132360608301846112b0565b95945050505050565b5f61133682611072565b9050919050565b6113468161132c565b82525050565b5f60208201905061135f5f83018461133d565b92915050565b5f805f806080858703121561137d5761137c610e73565b5b5f61138a87828801610ff6565b945050602061139b87828801610ff6565b93505060406113ac878288016111c9565b92505060606113bd878288016111c9565b91505092959194509250565b6113d2816110bc565b82525050565b5f6060820190506113eb5f830186611182565b6113f86020830185611182565b61140560408301846113c9565b949350505050565b5f8151905061141b81610fe0565b92915050565b5f6020828403121561143657611435610e73565b5b5f6114438482850161140d565b91505092915050565b5f82825260208201905092915050565b7f506f6f6c20616c726561647920657869737473000000000000000000000000005f82015250565b5f61149060138361144c565b915061149b8261145c565b602082019050919050565b5f6020820190508181035f8301526114bd81611484565b9050919050565b6114cd81610fb0565b82525050565b5f6020820190506114e65f8301846114c4565b92915050565b5f815190506114fa816111b3565b92915050565b5f6020828403121561151557611514610e73565b5b5f611522848285016114ec565b91505092915050565b7f496e73756666696369656e7420546f6b656e41000000000000000000000000005f82015250565b5f61155f60138361144c565b915061156a8261152b565b602082019050919050565b5f6020820190508181035f83015261158c81611553565b9050919050565b7f496e73756666696369656e7420546f6b656e42000000000000000000000000005f82015250565b5f6115c760138361144c565b91506115d282611593565b602082019050919050565b5f6020820190508181035f8301526115f4816115bb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611632826111aa565b915061163d836111aa565b9250828201905080821115611655576116546115fb565b5b92915050565b61166481610fcf565b82525050565b611673816110bc565b82525050565b611682816111dd565b82525050565b611691816111aa565b82525050565b61016082015f8201516116ac5f85018261165b565b5060208201516116bf602085018261165b565b5060408201516116d2604085018261166a565b5060608201516116e56060850182611679565b5060808201516116f86080850182611679565b5060a082015161170b60a0850182611688565b5060c082015161171e60c0850182611688565b5060e082015161173160e0850182611688565b50610100820151611746610100850182611688565b5061012082015161175b61012085018261165b565b50610140820151611770610140850182611688565b50505050565b5f6101608201905061178a5f830184611697565b92915050565b611799816112bf565b81146117a3575f80fd5b50565b5f815190506117b481611790565b92915050565b5f805f80608085870312156117d2576117d1610e73565b5b5f6117df878288016114ec565b94505060206117f0878288016117a6565b9350506040611801878288016114ec565b9250506060611812878288016114ec565b91505092959194509250565b5f611828826111aa565b9150611833836111aa565b925082820390508181111561184b5761184a6115fb565b5b92915050565b5f6040820190506118645f830185611182565b61187160208301846112b0565b9392505050565b61188181610ef7565b811461188b575f80fd5b50565b5f8151905061189c81611878565b92915050565b5f602082840312156118b7576118b6610e73565b5b5f6118c48482850161188e565b91505092915050565b5f6040820190506118e05f830185611182565b6118ed6020830184610f88565b939250505056fea26469706673582212202746b90d6488fee63cc53a1ddf1f3eff0c8214ec5407ec25de9921348485824f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A8B CODESIZE SUB DUP1 PUSH2 0x1A8B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x116 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x154 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE5 DUP3 PUSH2 0xBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5 DUP2 PUSH2 0xDB JUMP JUMPDEST DUP2 EQ PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x110 DUP2 PUSH2 0xEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C JUMPI PUSH2 0x12B PUSH2 0xB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139 DUP6 DUP3 DUP7 ADD PUSH2 0x102 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A DUP6 DUP3 DUP7 ADD PUSH2 0x102 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x192A DUP1 PUSH2 0x161 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xAFBCE84E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xECF4DAA7 EQ PUSH2 0x257 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x791B98BC EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8E909E51 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2E5 JUMPI POP PUSH2 0x2E4 DUP3 PUSH2 0xBCC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x311 DUP3 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x324 DUP4 DUP4 PUSH2 0xC49 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x332 PUSH2 0xD32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A0 DUP3 DUP3 PUSH2 0xD39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1671295 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF637731D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x14D3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP8 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST LT ISZERO PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BB SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x78 TIMESTAMP PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP DUP4 SWAP9 POP POP POP POP POP DUP3 DUP10 GT ISZERO PUSH2 0x9A6 JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 DUP13 PUSH2 0x947 SWAP2 SWAP1 PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP JUMPDEST DUP2 DUP9 GT ISZERO PUSH2 0xA36 JUMPI DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP12 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F4 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP JUMPDEST POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA73 DUP3 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xA86 DUP4 DUP4 PUSH2 0xD39 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC5 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xC41 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xC54 DUP4 DUP4 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0xD28 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCC5 PUSH2 0xD32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD2C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xD44 DUP4 DUP4 PUSH2 0x5E3 JUMP JUMPDEST ISZERO PUSH2 0xE18 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDB5 PUSH2 0xD32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE1C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE2C DUP3 DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0xE6F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP3 SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAB DUP2 PUSH2 0xE77 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC6 DUP2 PUSH2 0xEA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEEE DUP5 DUP3 DUP6 ADD PUSH2 0xEB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0B DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF24 PUSH0 DUP4 ADD DUP5 PUSH2 0xF02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3C DUP2 PUSH2 0xF2A JUMP JUMPDEST DUP2 EQ PUSH2 0xF46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF57 DUP2 PUSH2 0xF33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF72 JUMPI PUSH2 0xF71 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF7F DUP5 DUP3 DUP6 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF91 DUP2 PUSH2 0xF2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAA PUSH0 DUP4 ADD DUP5 PUSH2 0xF88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD9 DUP3 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP2 EQ PUSH2 0xFF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1004 DUP2 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x102D DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x103E DUP6 DUP3 DUP7 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x106B PUSH2 0x1066 PUSH2 0x1061 DUP5 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x107C DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x108D DUP3 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109D DUP2 PUSH2 0x1083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D3 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP2 EQ PUSH2 0x10DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EE DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FD DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1118 DUP2 PUSH2 0x10F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1143 DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1154 DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1165 DUP8 DUP3 DUP9 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1176 DUP8 DUP3 DUP9 ADD PUSH2 0x110A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x118B DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BC DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP2 EQ PUSH2 0x11C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D7 DUP2 PUSH2 0x11B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F2 DUP2 PUSH2 0x11DD JUMP JUMPDEST DUP2 EQ PUSH2 0x11FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120D DUP2 PUSH2 0x11E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x123B DUP11 DUP3 DUP12 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x124C DUP11 DUP3 DUP12 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x125D DUP11 DUP3 DUP12 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x126E DUP11 DUP3 DUP12 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x127F DUP11 DUP3 DUP12 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1290 DUP11 DUP3 DUP12 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x12A1 DUP11 DUP3 DUP12 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x12B9 DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E3 DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH0 DUP4 ADD DUP8 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1309 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x1316 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1323 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1336 DUP3 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1346 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135F PUSH0 DUP4 ADD DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x137D JUMPI PUSH2 0x137C PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138A DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x139B DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x13AC DUP8 DUP3 DUP9 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x13BD DUP8 DUP3 DUP9 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13EB PUSH0 DUP4 ADD DUP7 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x13F8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x1405 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x141B DUP2 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH2 0x1435 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1443 DUP5 DUP3 DUP6 ADD PUSH2 0x140D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F6F6C20616C72656164792065786973747300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1490 PUSH1 0x13 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x149B DUP3 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BD DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x14FA DUP2 PUSH2 0x11B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1515 JUMPI PUSH2 0x1514 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1522 DUP5 DUP3 DUP6 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E4100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x155F PUSH1 0x13 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x156A DUP3 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158C DUP2 PUSH2 0x1553 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E4200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15C7 PUSH1 0x13 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x15D2 DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15F4 DUP2 PUSH2 0x15BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1632 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x163D DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1664 DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1673 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1682 DUP2 PUSH2 0x11DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1691 DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16AC PUSH0 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16BF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16D2 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x166A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x16E5 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x16F8 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x170B PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x171E PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1731 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x1746 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x175B PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x1770 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP5 PUSH2 0x1697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1799 DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP2 EQ PUSH2 0x17A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17B4 DUP2 PUSH2 0x1790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17D2 JUMPI PUSH2 0x17D1 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17DF DUP8 DUP3 DUP9 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x17F0 DUP8 DUP3 DUP9 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1801 DUP8 DUP3 DUP9 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1812 DUP8 DUP3 DUP9 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH2 0x1828 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x1833 DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1864 PUSH0 DUP4 ADD DUP6 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x1871 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x188B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x189C DUP2 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B7 JUMPI PUSH2 0x18B6 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C4 DUP5 DUP3 DUP6 ADD PUSH2 0x188E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x18ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 CHAINID 0xB9 0xD PUSH5 0x88FEE63CC5 GASPRICE SAR 0xDF 0x1F RETURNDATACOPY SELFDESTRUCT 0xC DUP3 EQ 0xEC SLOAD SMOD 0xEC 0x25 0xDE SWAP10 0x21 CALLVALUE DUP5 DUP6 DUP3 0x4F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "396:2538:24:-:0;;;549:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;683:16;637:15;;:63;;;;;;;;;;;;;;;;;;738:8;710:7;;:37;;;;;;;;;;;;;;;;;;549:205;;396:2538;;88:117:25;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;396:2538:24:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1606,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 3618,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3125,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 3145,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_645": {
									"entryPoint": 3378,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 3385,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@addLiquidity_1895": {
									"entryPoint": 1612,
									"id": 1895,
									"parameterSlots": 7,
									"returnSlots": 4
								},
								"@approveTokens_1725": {
									"entryPoint": 2700,
									"id": 1725,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@createPool_1771": {
									"entryPoint": 970,
									"id": 1771,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@factory_1670": {
									"entryPoint": 2629,
									"id": 1670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 748,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 776,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1507,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@positionManager_1667": {
									"entryPoint": 933,
									"id": 1667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 810,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2666,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_62": {
									"entryPoint": 627,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_686": {
									"entryPoint": 3020,
									"id": 686,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint24t_uint160": {
									"entryPoint": 4382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_int24t_int24": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INonfungiblePositionManager_$1496_to_t_address_fromStack": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV3Factory_$782_to_t_address_fromStack": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int24_to_t_int24": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_MintParams_$1406_memory_ptr_to_t_struct$_MintParams_$1406_memory_ptr_fromStack": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1496__to_t_address__fromStack_reversed": {
									"entryPoint": 4259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV3Factory_$782__to_t_address__fromStack_reversed": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MintParams_$1406_memory_ptr__to_t_struct$_MintParams_$1406_memory_ptr__fromStack_reversed": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INonfungiblePositionManager_$1496_to_t_address": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV3Factory_$782_to_t_address": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 4585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21599:25",
										"nodeType": "YulBlock",
										"src": "0:21599:25",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:25",
													"nodeType": "YulBlock",
													"src": "47:35:25",
													"statements": [
														{
															"nativeSrc": "57:19:25",
															"nodeType": "YulAssignment",
															"src": "57:19:25",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:25",
																		"nodeType": "YulLiteral",
																		"src": "73:2:25",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:25"
																},
																"nativeSrc": "67:9:25",
																"nodeType": "YulFunctionCall",
																"src": "67:9:25"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:25"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:25",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:25",
														"nodeType": "YulTypedName",
														"src": "40:6:25",
														"type": ""
													}
												],
												"src": "7:75:25"
											},
											{
												"body": {
													"nativeSrc": "177:28:25",
													"nodeType": "YulBlock",
													"src": "177:28:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:25",
																		"nodeType": "YulLiteral",
																		"src": "194:1:25",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:25",
																		"nodeType": "YulLiteral",
																		"src": "197:1:25",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:25"
																},
																"nativeSrc": "187:12:25",
																"nodeType": "YulFunctionCall",
																"src": "187:12:25"
															},
															"nativeSrc": "187:12:25",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:25"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:25",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:25"
											},
											{
												"body": {
													"nativeSrc": "300:28:25",
													"nodeType": "YulBlock",
													"src": "300:28:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:25",
																		"nodeType": "YulLiteral",
																		"src": "317:1:25",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:25",
																		"nodeType": "YulLiteral",
																		"src": "320:1:25",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:25"
																},
																"nativeSrc": "310:12:25",
																"nodeType": "YulFunctionCall",
																"src": "310:12:25"
															},
															"nativeSrc": "310:12:25",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:25"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:25",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:25"
											},
											{
												"body": {
													"nativeSrc": "378:105:25",
													"nodeType": "YulBlock",
													"src": "378:105:25",
													"statements": [
														{
															"nativeSrc": "388:89:25",
															"nodeType": "YulAssignment",
															"src": "388:89:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:25",
																		"nodeType": "YulLiteral",
																		"src": "410:66:25",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:25"
																},
																"nativeSrc": "399:78:25",
																"nodeType": "YulFunctionCall",
																"src": "399:78:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:25",
														"nodeType": "YulTypedName",
														"src": "360:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:25",
														"nodeType": "YulTypedName",
														"src": "370:7:25",
														"type": ""
													}
												],
												"src": "334:149:25"
											},
											{
												"body": {
													"nativeSrc": "531:78:25",
													"nodeType": "YulBlock",
													"src": "531:78:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:25",
																"nodeType": "YulBlock",
																"src": "587:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:25",
																					"nodeType": "YulLiteral",
																					"src": "596:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:25",
																					"nodeType": "YulLiteral",
																					"src": "599:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:25"
																			},
																			"nativeSrc": "589:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:25"
																		},
																		"nativeSrc": "589:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:25",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:25"
																				},
																				"nativeSrc": "561:23:25",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:25"
																		},
																		"nativeSrc": "551:34:25",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:25"
																},
																"nativeSrc": "544:42:25",
																"nodeType": "YulFunctionCall",
																"src": "544:42:25"
															},
															"nativeSrc": "541:62:25",
															"nodeType": "YulIf",
															"src": "541:62:25"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:25",
														"nodeType": "YulTypedName",
														"src": "524:5:25",
														"type": ""
													}
												],
												"src": "489:120:25"
											},
											{
												"body": {
													"nativeSrc": "666:86:25",
													"nodeType": "YulBlock",
													"src": "666:86:25",
													"statements": [
														{
															"nativeSrc": "676:29:25",
															"nodeType": "YulAssignment",
															"src": "676:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:25"
																},
																"nativeSrc": "685:20:25",
																"nodeType": "YulFunctionCall",
																"src": "685:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:25",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:25"
																},
																"nativeSrc": "714:32:25",
																"nodeType": "YulFunctionCall",
																"src": "714:32:25"
															},
															"nativeSrc": "714:32:25",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:25"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:25",
														"nodeType": "YulTypedName",
														"src": "644:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:25",
														"nodeType": "YulTypedName",
														"src": "652:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:25",
														"nodeType": "YulTypedName",
														"src": "660:5:25",
														"type": ""
													}
												],
												"src": "615:137:25"
											},
											{
												"body": {
													"nativeSrc": "823:262:25",
													"nodeType": "YulBlock",
													"src": "823:262:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:25",
																"nodeType": "YulBlock",
																"src": "869:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:25"
																			},
																			"nativeSrc": "871:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:25"
																		},
																		"nativeSrc": "871:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:25"
																		},
																		"nativeSrc": "840:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:25",
																		"nodeType": "YulLiteral",
																		"src": "865:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:25"
																},
																"nativeSrc": "836:32:25",
																"nodeType": "YulFunctionCall",
																"src": "836:32:25"
															},
															"nativeSrc": "833:119:25",
															"nodeType": "YulIf",
															"src": "833:119:25"
														},
														{
															"nativeSrc": "962:116:25",
															"nodeType": "YulBlock",
															"src": "962:116:25",
															"statements": [
																{
																	"nativeSrc": "977:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:25",
																		"nodeType": "YulLiteral",
																		"src": "991:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:25",
																			"nodeType": "YulTypedName",
																			"src": "981:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:25",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:25"
																				},
																				"nativeSrc": "1036:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:25",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:25"
																		},
																		"nativeSrc": "1016:52:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:25",
														"nodeType": "YulTypedName",
														"src": "793:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:25",
														"nodeType": "YulTypedName",
														"src": "804:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:25",
														"nodeType": "YulTypedName",
														"src": "816:6:25",
														"type": ""
													}
												],
												"src": "758:327:25"
											},
											{
												"body": {
													"nativeSrc": "1133:48:25",
													"nodeType": "YulBlock",
													"src": "1133:48:25",
													"statements": [
														{
															"nativeSrc": "1143:32:25",
															"nodeType": "YulAssignment",
															"src": "1143:32:25",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:25"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:25"
																		},
																		"nativeSrc": "1161:13:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:25"
																},
																"nativeSrc": "1154:21:25",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:25",
														"nodeType": "YulTypedName",
														"src": "1115:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:25",
														"nodeType": "YulTypedName",
														"src": "1125:7:25",
														"type": ""
													}
												],
												"src": "1091:90:25"
											},
											{
												"body": {
													"nativeSrc": "1246:50:25",
													"nodeType": "YulBlock",
													"src": "1246:50:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:25",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:25"
																		},
																		"nativeSrc": "1268:21:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:25"
																},
																"nativeSrc": "1256:34:25",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:25"
															},
															"nativeSrc": "1256:34:25",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:25"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:25",
														"nodeType": "YulTypedName",
														"src": "1234:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:25",
														"nodeType": "YulTypedName",
														"src": "1241:3:25",
														"type": ""
													}
												],
												"src": "1187:109:25"
											},
											{
												"body": {
													"nativeSrc": "1394:118:25",
													"nodeType": "YulBlock",
													"src": "1394:118:25",
													"statements": [
														{
															"nativeSrc": "1404:26:25",
															"nodeType": "YulAssignment",
															"src": "1404:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:25",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:25"
																},
																"nativeSrc": "1412:18:25",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:25",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:25"
																		},
																		"nativeSrc": "1487:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:25",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:25"
																},
																"nativeSrc": "1440:65:25",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:25"
															},
															"nativeSrc": "1440:65:25",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:25",
														"nodeType": "YulTypedName",
														"src": "1366:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:25",
														"nodeType": "YulTypedName",
														"src": "1378:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:25",
														"nodeType": "YulTypedName",
														"src": "1389:4:25",
														"type": ""
													}
												],
												"src": "1302:210:25"
											},
											{
												"body": {
													"nativeSrc": "1563:32:25",
													"nodeType": "YulBlock",
													"src": "1563:32:25",
													"statements": [
														{
															"nativeSrc": "1573:16:25",
															"nodeType": "YulAssignment",
															"src": "1573:16:25",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:25",
																"nodeType": "YulIdentifier",
																"src": "1584:5:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:25",
														"nodeType": "YulTypedName",
														"src": "1545:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:25",
														"nodeType": "YulTypedName",
														"src": "1555:7:25",
														"type": ""
													}
												],
												"src": "1518:77:25"
											},
											{
												"body": {
													"nativeSrc": "1644:79:25",
													"nodeType": "YulBlock",
													"src": "1644:79:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:25",
																"nodeType": "YulBlock",
																"src": "1701:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:25",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:25",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:25"
																			},
																			"nativeSrc": "1703:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:25"
																		},
																		"nativeSrc": "1703:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:25"
																				},
																				"nativeSrc": "1674:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:25"
																		},
																		"nativeSrc": "1664:35:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:25"
																},
																"nativeSrc": "1657:43:25",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:25"
															},
															"nativeSrc": "1654:63:25",
															"nodeType": "YulIf",
															"src": "1654:63:25"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:25",
														"nodeType": "YulTypedName",
														"src": "1637:5:25",
														"type": ""
													}
												],
												"src": "1601:122:25"
											},
											{
												"body": {
													"nativeSrc": "1781:87:25",
													"nodeType": "YulBlock",
													"src": "1781:87:25",
													"statements": [
														{
															"nativeSrc": "1791:29:25",
															"nodeType": "YulAssignment",
															"src": "1791:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:25"
																},
																"nativeSrc": "1800:20:25",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:25"
																},
																"nativeSrc": "1829:33:25",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:25"
															},
															"nativeSrc": "1829:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:25"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:25",
														"nodeType": "YulTypedName",
														"src": "1759:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:25",
														"nodeType": "YulTypedName",
														"src": "1767:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:25",
														"nodeType": "YulTypedName",
														"src": "1775:5:25",
														"type": ""
													}
												],
												"src": "1729:139:25"
											},
											{
												"body": {
													"nativeSrc": "1940:263:25",
													"nodeType": "YulBlock",
													"src": "1940:263:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:25",
																"nodeType": "YulBlock",
																"src": "1986:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:25"
																			},
																			"nativeSrc": "1988:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:25"
																		},
																		"nativeSrc": "1988:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:25"
																		},
																		"nativeSrc": "1957:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:25",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:25"
																},
																"nativeSrc": "1953:32:25",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:25"
															},
															"nativeSrc": "1950:119:25",
															"nodeType": "YulIf",
															"src": "1950:119:25"
														},
														{
															"nativeSrc": "2079:117:25",
															"nodeType": "YulBlock",
															"src": "2079:117:25",
															"statements": [
																{
																	"nativeSrc": "2094:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:25",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:25",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:25",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:25"
																				},
																				"nativeSrc": "2154:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:25"
																		},
																		"nativeSrc": "2133:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:25",
														"nodeType": "YulTypedName",
														"src": "1910:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:25",
														"nodeType": "YulTypedName",
														"src": "1921:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:25",
														"nodeType": "YulTypedName",
														"src": "1933:6:25",
														"type": ""
													}
												],
												"src": "1874:329:25"
											},
											{
												"body": {
													"nativeSrc": "2274:53:25",
													"nodeType": "YulBlock",
													"src": "2274:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:25"
																		},
																		"nativeSrc": "2296:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:25"
																},
																"nativeSrc": "2284:37:25",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:25"
															},
															"nativeSrc": "2284:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:25"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:25",
														"nodeType": "YulTypedName",
														"src": "2262:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:25",
														"nodeType": "YulTypedName",
														"src": "2269:3:25",
														"type": ""
													}
												],
												"src": "2209:118:25"
											},
											{
												"body": {
													"nativeSrc": "2431:124:25",
													"nodeType": "YulBlock",
													"src": "2431:124:25",
													"statements": [
														{
															"nativeSrc": "2441:26:25",
															"nodeType": "YulAssignment",
															"src": "2441:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:25",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:25"
																},
																"nativeSrc": "2449:18:25",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:25",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:25"
																		},
																		"nativeSrc": "2530:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:25"
																},
																"nativeSrc": "2477:71:25",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:25"
															},
															"nativeSrc": "2477:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:25",
														"nodeType": "YulTypedName",
														"src": "2403:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:25",
														"nodeType": "YulTypedName",
														"src": "2415:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:25",
														"nodeType": "YulTypedName",
														"src": "2426:4:25",
														"type": ""
													}
												],
												"src": "2333:222:25"
											},
											{
												"body": {
													"nativeSrc": "2606:81:25",
													"nodeType": "YulBlock",
													"src": "2606:81:25",
													"statements": [
														{
															"nativeSrc": "2616:65:25",
															"nodeType": "YulAssignment",
															"src": "2616:65:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:25",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:25",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:25"
																},
																"nativeSrc": "2627:54:25",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:25",
														"nodeType": "YulTypedName",
														"src": "2588:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:25",
														"nodeType": "YulTypedName",
														"src": "2598:7:25",
														"type": ""
													}
												],
												"src": "2561:126:25"
											},
											{
												"body": {
													"nativeSrc": "2738:51:25",
													"nodeType": "YulBlock",
													"src": "2738:51:25",
													"statements": [
														{
															"nativeSrc": "2748:35:25",
															"nodeType": "YulAssignment",
															"src": "2748:35:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:25"
																},
																"nativeSrc": "2759:24:25",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:25",
														"nodeType": "YulTypedName",
														"src": "2720:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:25",
														"nodeType": "YulTypedName",
														"src": "2730:7:25",
														"type": ""
													}
												],
												"src": "2693:96:25"
											},
											{
												"body": {
													"nativeSrc": "2838:79:25",
													"nodeType": "YulBlock",
													"src": "2838:79:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:25",
																"nodeType": "YulBlock",
																"src": "2895:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:25",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:25",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:25"
																			},
																			"nativeSrc": "2897:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:25"
																		},
																		"nativeSrc": "2897:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:25"
																				},
																				"nativeSrc": "2868:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:25"
																		},
																		"nativeSrc": "2858:35:25",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:25"
																},
																"nativeSrc": "2851:43:25",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:25"
															},
															"nativeSrc": "2848:63:25",
															"nodeType": "YulIf",
															"src": "2848:63:25"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:25",
														"nodeType": "YulTypedName",
														"src": "2831:5:25",
														"type": ""
													}
												],
												"src": "2795:122:25"
											},
											{
												"body": {
													"nativeSrc": "2975:87:25",
													"nodeType": "YulBlock",
													"src": "2975:87:25",
													"statements": [
														{
															"nativeSrc": "2985:29:25",
															"nodeType": "YulAssignment",
															"src": "2985:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:25"
																},
																"nativeSrc": "2994:20:25",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:25"
																},
																"nativeSrc": "3023:33:25",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:25"
															},
															"nativeSrc": "3023:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:25"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:25",
														"nodeType": "YulTypedName",
														"src": "2953:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:25",
														"nodeType": "YulTypedName",
														"src": "2961:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:25",
														"nodeType": "YulTypedName",
														"src": "2969:5:25",
														"type": ""
													}
												],
												"src": "2923:139:25"
											},
											{
												"body": {
													"nativeSrc": "3151:391:25",
													"nodeType": "YulBlock",
													"src": "3151:391:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:25",
																"nodeType": "YulBlock",
																"src": "3197:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:25"
																			},
																			"nativeSrc": "3199:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:25"
																		},
																		"nativeSrc": "3199:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:25"
																		},
																		"nativeSrc": "3168:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:25",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:25",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:25"
																},
																"nativeSrc": "3164:32:25",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:25"
															},
															"nativeSrc": "3161:119:25",
															"nodeType": "YulIf",
															"src": "3161:119:25"
														},
														{
															"nativeSrc": "3290:117:25",
															"nodeType": "YulBlock",
															"src": "3290:117:25",
															"statements": [
																{
																	"nativeSrc": "3305:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:25",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:25",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:25",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:25"
																				},
																				"nativeSrc": "3365:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:25"
																		},
																		"nativeSrc": "3344:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:25",
															"nodeType": "YulBlock",
															"src": "3417:118:25",
															"statements": [
																{
																	"nativeSrc": "3432:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:25",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:25",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:25",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:25",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:25"
																				},
																				"nativeSrc": "3493:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:25"
																		},
																		"nativeSrc": "3472:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:25",
														"nodeType": "YulTypedName",
														"src": "3113:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:25",
														"nodeType": "YulTypedName",
														"src": "3124:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:25",
														"nodeType": "YulTypedName",
														"src": "3136:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:25",
														"nodeType": "YulTypedName",
														"src": "3144:6:25",
														"type": ""
													}
												],
												"src": "3068:474:25"
											},
											{
												"body": {
													"nativeSrc": "3580:28:25",
													"nodeType": "YulBlock",
													"src": "3580:28:25",
													"statements": [
														{
															"nativeSrc": "3590:12:25",
															"nodeType": "YulAssignment",
															"src": "3590:12:25",
															"value": {
																"name": "value",
																"nativeSrc": "3597:5:25",
																"nodeType": "YulIdentifier",
																"src": "3597:5:25"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3590:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "3590:3:25"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3548:60:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3566:5:25",
														"nodeType": "YulTypedName",
														"src": "3566:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3576:3:25",
														"nodeType": "YulTypedName",
														"src": "3576:3:25",
														"type": ""
													}
												],
												"src": "3548:60:25"
											},
											{
												"body": {
													"nativeSrc": "3674:82:25",
													"nodeType": "YulBlock",
													"src": "3674:82:25",
													"statements": [
														{
															"nativeSrc": "3684:66:25",
															"nodeType": "YulAssignment",
															"src": "3684:66:25",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3742:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "3742:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3724:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "3724:17:25"
																				},
																				"nativeSrc": "3724:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "3724:24:25"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3715:8:25",
																			"nodeType": "YulIdentifier",
																			"src": "3715:8:25"
																		},
																		"nativeSrc": "3715:34:25",
																		"nodeType": "YulFunctionCall",
																		"src": "3715:34:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3697:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "3697:17:25"
																},
																"nativeSrc": "3697:53:25",
																"nodeType": "YulFunctionCall",
																"src": "3697:53:25"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3684:9:25",
																	"nodeType": "YulIdentifier",
																	"src": "3684:9:25"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3614:142:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3654:5:25",
														"nodeType": "YulTypedName",
														"src": "3654:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3664:9:25",
														"nodeType": "YulTypedName",
														"src": "3664:9:25",
														"type": ""
													}
												],
												"src": "3614:142:25"
											},
											{
												"body": {
													"nativeSrc": "3822:66:25",
													"nodeType": "YulBlock",
													"src": "3822:66:25",
													"statements": [
														{
															"nativeSrc": "3832:50:25",
															"nodeType": "YulAssignment",
															"src": "3832:50:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3876:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "3876:5:25"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3845:30:25",
																	"nodeType": "YulIdentifier",
																	"src": "3845:30:25"
																},
																"nativeSrc": "3845:37:25",
																"nodeType": "YulFunctionCall",
																"src": "3845:37:25"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3832:9:25",
																	"nodeType": "YulIdentifier",
																	"src": "3832:9:25"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3762:126:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3802:5:25",
														"nodeType": "YulTypedName",
														"src": "3802:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3812:9:25",
														"nodeType": "YulTypedName",
														"src": "3812:9:25",
														"type": ""
													}
												],
												"src": "3762:126:25"
											},
											{
												"body": {
													"nativeSrc": "3990:66:25",
													"nodeType": "YulBlock",
													"src": "3990:66:25",
													"statements": [
														{
															"nativeSrc": "4000:50:25",
															"nodeType": "YulAssignment",
															"src": "4000:50:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4044:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "4044:5:25"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4013:30:25",
																	"nodeType": "YulIdentifier",
																	"src": "4013:30:25"
																},
																"nativeSrc": "4013:37:25",
																"nodeType": "YulFunctionCall",
																"src": "4013:37:25"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4000:9:25",
																	"nodeType": "YulIdentifier",
																	"src": "4000:9:25"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INonfungiblePositionManager_$1496_to_t_address",
												"nativeSrc": "3894:162:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3970:5:25",
														"nodeType": "YulTypedName",
														"src": "3970:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3980:9:25",
														"nodeType": "YulTypedName",
														"src": "3980:9:25",
														"type": ""
													}
												],
												"src": "3894:162:25"
											},
											{
												"body": {
													"nativeSrc": "4163:102:25",
													"nodeType": "YulBlock",
													"src": "4163:102:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4180:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "4180:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4252:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "4252:5:25"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INonfungiblePositionManager_$1496_to_t_address",
																			"nativeSrc": "4185:66:25",
																			"nodeType": "YulIdentifier",
																			"src": "4185:66:25"
																		},
																		"nativeSrc": "4185:73:25",
																		"nodeType": "YulFunctionCall",
																		"src": "4185:73:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4173:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:25"
																},
																"nativeSrc": "4173:86:25",
																"nodeType": "YulFunctionCall",
																"src": "4173:86:25"
															},
															"nativeSrc": "4173:86:25",
															"nodeType": "YulExpressionStatement",
															"src": "4173:86:25"
														}
													]
												},
												"name": "abi_encode_t_contract$_INonfungiblePositionManager_$1496_to_t_address_fromStack",
												"nativeSrc": "4062:203:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4151:5:25",
														"nodeType": "YulTypedName",
														"src": "4151:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4158:3:25",
														"nodeType": "YulTypedName",
														"src": "4158:3:25",
														"type": ""
													}
												],
												"src": "4062:203:25"
											},
											{
												"body": {
													"nativeSrc": "4405:160:25",
													"nodeType": "YulBlock",
													"src": "4405:160:25",
													"statements": [
														{
															"nativeSrc": "4415:26:25",
															"nodeType": "YulAssignment",
															"src": "4415:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4427:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4438:2:25",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4423:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "4423:3:25"
																},
																"nativeSrc": "4423:18:25",
																"nodeType": "YulFunctionCall",
																"src": "4423:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4415:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "4415:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4531:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "4531:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4544:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4555:1:25",
																				"nodeType": "YulLiteral",
																				"src": "4555:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4540:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "4540:3:25"
																		},
																		"nativeSrc": "4540:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "4540:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INonfungiblePositionManager_$1496_to_t_address_fromStack",
																	"nativeSrc": "4451:79:25",
																	"nodeType": "YulIdentifier",
																	"src": "4451:79:25"
																},
																"nativeSrc": "4451:107:25",
																"nodeType": "YulFunctionCall",
																"src": "4451:107:25"
															},
															"nativeSrc": "4451:107:25",
															"nodeType": "YulExpressionStatement",
															"src": "4451:107:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1496__to_t_address__fromStack_reversed",
												"nativeSrc": "4271:294:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4377:9:25",
														"nodeType": "YulTypedName",
														"src": "4377:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4389:6:25",
														"nodeType": "YulTypedName",
														"src": "4389:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4400:4:25",
														"nodeType": "YulTypedName",
														"src": "4400:4:25",
														"type": ""
													}
												],
												"src": "4271:294:25"
											},
											{
												"body": {
													"nativeSrc": "4615:47:25",
													"nodeType": "YulBlock",
													"src": "4615:47:25",
													"statements": [
														{
															"nativeSrc": "4625:31:25",
															"nodeType": "YulAssignment",
															"src": "4625:31:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4640:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "4640:5:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4647:8:25",
																		"nodeType": "YulLiteral",
																		"src": "4647:8:25",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4636:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:25"
																},
																"nativeSrc": "4636:20:25",
																"nodeType": "YulFunctionCall",
																"src": "4636:20:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4625:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "4625:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "4571:91:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4597:5:25",
														"nodeType": "YulTypedName",
														"src": "4597:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4607:7:25",
														"nodeType": "YulTypedName",
														"src": "4607:7:25",
														"type": ""
													}
												],
												"src": "4571:91:25"
											},
											{
												"body": {
													"nativeSrc": "4710:78:25",
													"nodeType": "YulBlock",
													"src": "4710:78:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "4766:16:25",
																"nodeType": "YulBlock",
																"src": "4766:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4775:1:25",
																					"nodeType": "YulLiteral",
																					"src": "4775:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4778:1:25",
																					"nodeType": "YulLiteral",
																					"src": "4778:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4768:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "4768:6:25"
																			},
																			"nativeSrc": "4768:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "4768:12:25"
																		},
																		"nativeSrc": "4768:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "4768:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4733:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "4733:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4757:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "4757:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "4740:16:25",
																					"nodeType": "YulIdentifier",
																					"src": "4740:16:25"
																				},
																				"nativeSrc": "4740:23:25",
																				"nodeType": "YulFunctionCall",
																				"src": "4740:23:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4730:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "4730:2:25"
																		},
																		"nativeSrc": "4730:34:25",
																		"nodeType": "YulFunctionCall",
																		"src": "4730:34:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4723:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:25"
																},
																"nativeSrc": "4723:42:25",
																"nodeType": "YulFunctionCall",
																"src": "4723:42:25"
															},
															"nativeSrc": "4720:62:25",
															"nodeType": "YulIf",
															"src": "4720:62:25"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "4668:120:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4703:5:25",
														"nodeType": "YulTypedName",
														"src": "4703:5:25",
														"type": ""
													}
												],
												"src": "4668:120:25"
											},
											{
												"body": {
													"nativeSrc": "4845:86:25",
													"nodeType": "YulBlock",
													"src": "4845:86:25",
													"statements": [
														{
															"nativeSrc": "4855:29:25",
															"nodeType": "YulAssignment",
															"src": "4855:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4877:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "4877:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4864:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "4864:12:25"
																},
																"nativeSrc": "4864:20:25",
																"nodeType": "YulFunctionCall",
																"src": "4864:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4855:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "4855:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4919:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "4919:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "4893:25:25",
																	"nodeType": "YulIdentifier",
																	"src": "4893:25:25"
																},
																"nativeSrc": "4893:32:25",
																"nodeType": "YulFunctionCall",
																"src": "4893:32:25"
															},
															"nativeSrc": "4893:32:25",
															"nodeType": "YulExpressionStatement",
															"src": "4893:32:25"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "4794:137:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4823:6:25",
														"nodeType": "YulTypedName",
														"src": "4823:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4831:3:25",
														"nodeType": "YulTypedName",
														"src": "4831:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4839:5:25",
														"nodeType": "YulTypedName",
														"src": "4839:5:25",
														"type": ""
													}
												],
												"src": "4794:137:25"
											},
											{
												"body": {
													"nativeSrc": "4980:79:25",
													"nodeType": "YulBlock",
													"src": "4980:79:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "5037:16:25",
																"nodeType": "YulBlock",
																"src": "5037:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5046:1:25",
																					"nodeType": "YulLiteral",
																					"src": "5046:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5049:1:25",
																					"nodeType": "YulLiteral",
																					"src": "5049:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5039:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "5039:6:25"
																			},
																			"nativeSrc": "5039:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "5039:12:25"
																		},
																		"nativeSrc": "5039:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "5039:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5003:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "5003:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5028:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "5028:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5010:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "5010:17:25"
																				},
																				"nativeSrc": "5010:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "5010:24:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5000:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "5000:2:25"
																		},
																		"nativeSrc": "5000:35:25",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:35:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4993:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:25"
																},
																"nativeSrc": "4993:43:25",
																"nodeType": "YulFunctionCall",
																"src": "4993:43:25"
															},
															"nativeSrc": "4990:63:25",
															"nodeType": "YulIf",
															"src": "4990:63:25"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "4937:122:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4973:5:25",
														"nodeType": "YulTypedName",
														"src": "4973:5:25",
														"type": ""
													}
												],
												"src": "4937:122:25"
											},
											{
												"body": {
													"nativeSrc": "5117:87:25",
													"nodeType": "YulBlock",
													"src": "5117:87:25",
													"statements": [
														{
															"nativeSrc": "5127:29:25",
															"nodeType": "YulAssignment",
															"src": "5127:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5149:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "5149:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5136:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "5136:12:25"
																},
																"nativeSrc": "5136:20:25",
																"nodeType": "YulFunctionCall",
																"src": "5136:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5127:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "5127:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5192:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "5192:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "5165:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "5165:26:25"
																},
																"nativeSrc": "5165:33:25",
																"nodeType": "YulFunctionCall",
																"src": "5165:33:25"
															},
															"nativeSrc": "5165:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "5165:33:25"
														}
													]
												},
												"name": "abi_decode_t_uint160",
												"nativeSrc": "5065:139:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5095:6:25",
														"nodeType": "YulTypedName",
														"src": "5095:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5103:3:25",
														"nodeType": "YulTypedName",
														"src": "5103:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5111:5:25",
														"nodeType": "YulTypedName",
														"src": "5111:5:25",
														"type": ""
													}
												],
												"src": "5065:139:25"
											},
											{
												"body": {
													"nativeSrc": "5326:647:25",
													"nodeType": "YulBlock",
													"src": "5326:647:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "5373:83:25",
																"nodeType": "YulBlock",
																"src": "5373:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5375:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "5375:77:25"
																			},
																			"nativeSrc": "5375:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "5375:79:25"
																		},
																		"nativeSrc": "5375:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "5375:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5347:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "5347:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5356:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "5356:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5343:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:25"
																		},
																		"nativeSrc": "5343:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "5343:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5368:3:25",
																		"nodeType": "YulLiteral",
																		"src": "5368:3:25",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5339:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "5339:3:25"
																},
																"nativeSrc": "5339:33:25",
																"nodeType": "YulFunctionCall",
																"src": "5339:33:25"
															},
															"nativeSrc": "5336:120:25",
															"nodeType": "YulIf",
															"src": "5336:120:25"
														},
														{
															"nativeSrc": "5466:117:25",
															"nodeType": "YulBlock",
															"src": "5466:117:25",
															"statements": [
																{
																	"nativeSrc": "5481:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5481:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5495:1:25",
																		"nodeType": "YulLiteral",
																		"src": "5495:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5485:6:25",
																			"nodeType": "YulTypedName",
																			"src": "5485:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5510:63:25",
																	"nodeType": "YulAssignment",
																	"src": "5510:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5545:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "5545:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5556:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "5556:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5541:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "5541:3:25"
																				},
																				"nativeSrc": "5541:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "5541:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5565:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "5565:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5520:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "5520:20:25"
																		},
																		"nativeSrc": "5520:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "5520:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5510:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "5510:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5593:118:25",
															"nodeType": "YulBlock",
															"src": "5593:118:25",
															"statements": [
																{
																	"nativeSrc": "5608:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5608:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5622:2:25",
																		"nodeType": "YulLiteral",
																		"src": "5622:2:25",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5612:6:25",
																			"nodeType": "YulTypedName",
																			"src": "5612:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5638:63:25",
																	"nodeType": "YulAssignment",
																	"src": "5638:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5673:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "5673:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5684:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "5684:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5669:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "5669:3:25"
																				},
																				"nativeSrc": "5669:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "5669:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5693:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "5693:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5648:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "5648:20:25"
																		},
																		"nativeSrc": "5648:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "5648:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5638:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "5638:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5721:117:25",
															"nodeType": "YulBlock",
															"src": "5721:117:25",
															"statements": [
																{
																	"nativeSrc": "5736:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5736:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5750:2:25",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:25",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5740:6:25",
																			"nodeType": "YulTypedName",
																			"src": "5740:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5766:62:25",
																	"nodeType": "YulAssignment",
																	"src": "5766:62:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5800:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "5800:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5811:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "5811:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5796:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "5796:3:25"
																				},
																				"nativeSrc": "5796:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "5796:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5820:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "5820:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "5776:19:25",
																			"nodeType": "YulIdentifier",
																			"src": "5776:19:25"
																		},
																		"nativeSrc": "5776:52:25",
																		"nodeType": "YulFunctionCall",
																		"src": "5776:52:25"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5766:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "5766:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5848:118:25",
															"nodeType": "YulBlock",
															"src": "5848:118:25",
															"statements": [
																{
																	"nativeSrc": "5863:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5863:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5877:2:25",
																		"nodeType": "YulLiteral",
																		"src": "5877:2:25",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5867:6:25",
																			"nodeType": "YulTypedName",
																			"src": "5867:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5893:63:25",
																	"nodeType": "YulAssignment",
																	"src": "5893:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5928:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "5928:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5939:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "5939:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5924:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "5924:3:25"
																				},
																				"nativeSrc": "5924:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "5924:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5948:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "5948:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160",
																			"nativeSrc": "5903:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "5903:20:25"
																		},
																		"nativeSrc": "5903:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5893:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "5893:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_uint160",
												"nativeSrc": "5210:763:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5272:9:25",
														"nodeType": "YulTypedName",
														"src": "5272:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5283:7:25",
														"nodeType": "YulTypedName",
														"src": "5283:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5295:6:25",
														"nodeType": "YulTypedName",
														"src": "5295:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5303:6:25",
														"nodeType": "YulTypedName",
														"src": "5303:6:25",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5311:6:25",
														"nodeType": "YulTypedName",
														"src": "5311:6:25",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5319:6:25",
														"nodeType": "YulTypedName",
														"src": "5319:6:25",
														"type": ""
													}
												],
												"src": "5210:763:25"
											},
											{
												"body": {
													"nativeSrc": "6044:53:25",
													"nodeType": "YulBlock",
													"src": "6044:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6061:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "6061:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6084:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "6084:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6066:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "6066:17:25"
																		},
																		"nativeSrc": "6066:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "6066:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6054:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "6054:6:25"
																},
																"nativeSrc": "6054:37:25",
																"nodeType": "YulFunctionCall",
																"src": "6054:37:25"
															},
															"nativeSrc": "6054:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "6054:37:25"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5979:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6032:5:25",
														"nodeType": "YulTypedName",
														"src": "6032:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6039:3:25",
														"nodeType": "YulTypedName",
														"src": "6039:3:25",
														"type": ""
													}
												],
												"src": "5979:118:25"
											},
											{
												"body": {
													"nativeSrc": "6201:124:25",
													"nodeType": "YulBlock",
													"src": "6201:124:25",
													"statements": [
														{
															"nativeSrc": "6211:26:25",
															"nodeType": "YulAssignment",
															"src": "6211:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6223:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "6223:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:2:25",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6219:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "6219:3:25"
																},
																"nativeSrc": "6219:18:25",
																"nodeType": "YulFunctionCall",
																"src": "6219:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6211:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "6211:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6291:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "6291:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6304:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "6304:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6315:1:25",
																				"nodeType": "YulLiteral",
																				"src": "6315:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6300:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "6300:3:25"
																		},
																		"nativeSrc": "6300:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "6300:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6247:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "6247:43:25"
																},
																"nativeSrc": "6247:71:25",
																"nodeType": "YulFunctionCall",
																"src": "6247:71:25"
															},
															"nativeSrc": "6247:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "6247:71:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6103:222:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6173:9:25",
														"nodeType": "YulTypedName",
														"src": "6173:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6185:6:25",
														"nodeType": "YulTypedName",
														"src": "6185:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6196:4:25",
														"nodeType": "YulTypedName",
														"src": "6196:4:25",
														"type": ""
													}
												],
												"src": "6103:222:25"
											},
											{
												"body": {
													"nativeSrc": "6376:32:25",
													"nodeType": "YulBlock",
													"src": "6376:32:25",
													"statements": [
														{
															"nativeSrc": "6386:16:25",
															"nodeType": "YulAssignment",
															"src": "6386:16:25",
															"value": {
																"name": "value",
																"nativeSrc": "6397:5:25",
																"nodeType": "YulIdentifier",
																"src": "6397:5:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6386:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "6386:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "6331:77:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6358:5:25",
														"nodeType": "YulTypedName",
														"src": "6358:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6368:7:25",
														"nodeType": "YulTypedName",
														"src": "6368:7:25",
														"type": ""
													}
												],
												"src": "6331:77:25"
											},
											{
												"body": {
													"nativeSrc": "6457:79:25",
													"nodeType": "YulBlock",
													"src": "6457:79:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "6514:16:25",
																"nodeType": "YulBlock",
																"src": "6514:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6523:1:25",
																					"nodeType": "YulLiteral",
																					"src": "6523:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6526:1:25",
																					"nodeType": "YulLiteral",
																					"src": "6526:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6516:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "6516:6:25"
																			},
																			"nativeSrc": "6516:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "6516:12:25"
																		},
																		"nativeSrc": "6516:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "6516:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6480:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "6480:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6505:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "6505:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6487:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "6487:17:25"
																				},
																				"nativeSrc": "6487:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "6487:24:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6477:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "6477:2:25"
																		},
																		"nativeSrc": "6477:35:25",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:35:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6470:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "6470:6:25"
																},
																"nativeSrc": "6470:43:25",
																"nodeType": "YulFunctionCall",
																"src": "6470:43:25"
															},
															"nativeSrc": "6467:63:25",
															"nodeType": "YulIf",
															"src": "6467:63:25"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "6414:122:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6450:5:25",
														"nodeType": "YulTypedName",
														"src": "6450:5:25",
														"type": ""
													}
												],
												"src": "6414:122:25"
											},
											{
												"body": {
													"nativeSrc": "6594:87:25",
													"nodeType": "YulBlock",
													"src": "6594:87:25",
													"statements": [
														{
															"nativeSrc": "6604:29:25",
															"nodeType": "YulAssignment",
															"src": "6604:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6626:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "6626:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6613:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "6613:12:25"
																},
																"nativeSrc": "6613:20:25",
																"nodeType": "YulFunctionCall",
																"src": "6613:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6604:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "6604:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6669:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "6669:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6642:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "6642:26:25"
																},
																"nativeSrc": "6642:33:25",
																"nodeType": "YulFunctionCall",
																"src": "6642:33:25"
															},
															"nativeSrc": "6642:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "6642:33:25"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "6542:139:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6572:6:25",
														"nodeType": "YulTypedName",
														"src": "6572:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6580:3:25",
														"nodeType": "YulTypedName",
														"src": "6580:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6588:5:25",
														"nodeType": "YulTypedName",
														"src": "6588:5:25",
														"type": ""
													}
												],
												"src": "6542:139:25"
											},
											{
												"body": {
													"nativeSrc": "6730:47:25",
													"nodeType": "YulBlock",
													"src": "6730:47:25",
													"statements": [
														{
															"nativeSrc": "6740:31:25",
															"nodeType": "YulAssignment",
															"src": "6740:31:25",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6762:1:25",
																		"nodeType": "YulLiteral",
																		"src": "6762:1:25",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6765:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "6765:5:25"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "6751:10:25",
																	"nodeType": "YulIdentifier",
																	"src": "6751:10:25"
																},
																"nativeSrc": "6751:20:25",
																"nodeType": "YulFunctionCall",
																"src": "6751:20:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6740:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "6740:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "6687:90:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6712:5:25",
														"nodeType": "YulTypedName",
														"src": "6712:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6722:7:25",
														"nodeType": "YulTypedName",
														"src": "6722:7:25",
														"type": ""
													}
												],
												"src": "6687:90:25"
											},
											{
												"body": {
													"nativeSrc": "6824:77:25",
													"nodeType": "YulBlock",
													"src": "6824:77:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "6879:16:25",
																"nodeType": "YulBlock",
																"src": "6879:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6888:1:25",
																					"nodeType": "YulLiteral",
																					"src": "6888:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6891:1:25",
																					"nodeType": "YulLiteral",
																					"src": "6891:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6881:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "6881:6:25"
																			},
																			"nativeSrc": "6881:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "6881:12:25"
																		},
																		"nativeSrc": "6881:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "6881:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6847:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "6847:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6870:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "6870:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "6854:15:25",
																					"nodeType": "YulIdentifier",
																					"src": "6854:15:25"
																				},
																				"nativeSrc": "6854:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "6854:22:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6844:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "6844:2:25"
																		},
																		"nativeSrc": "6844:33:25",
																		"nodeType": "YulFunctionCall",
																		"src": "6844:33:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6837:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "6837:6:25"
																},
																"nativeSrc": "6837:41:25",
																"nodeType": "YulFunctionCall",
																"src": "6837:41:25"
															},
															"nativeSrc": "6834:61:25",
															"nodeType": "YulIf",
															"src": "6834:61:25"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "6783:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6817:5:25",
														"nodeType": "YulTypedName",
														"src": "6817:5:25",
														"type": ""
													}
												],
												"src": "6783:118:25"
											},
											{
												"body": {
													"nativeSrc": "6957:85:25",
													"nodeType": "YulBlock",
													"src": "6957:85:25",
													"statements": [
														{
															"nativeSrc": "6967:29:25",
															"nodeType": "YulAssignment",
															"src": "6967:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6989:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "6989:6:25"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6976:12:25",
																	"nodeType": "YulIdentifier",
																	"src": "6976:12:25"
																},
																"nativeSrc": "6976:20:25",
																"nodeType": "YulFunctionCall",
																"src": "6976:20:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6967:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "6967:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7030:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "7030:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "7005:24:25",
																	"nodeType": "YulIdentifier",
																	"src": "7005:24:25"
																},
																"nativeSrc": "7005:31:25",
																"nodeType": "YulFunctionCall",
																"src": "7005:31:25"
															},
															"nativeSrc": "7005:31:25",
															"nodeType": "YulExpressionStatement",
															"src": "7005:31:25"
														}
													]
												},
												"name": "abi_decode_t_int24",
												"nativeSrc": "6907:135:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6935:6:25",
														"nodeType": "YulTypedName",
														"src": "6935:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6943:3:25",
														"nodeType": "YulTypedName",
														"src": "6943:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6951:5:25",
														"nodeType": "YulTypedName",
														"src": "6951:5:25",
														"type": ""
													}
												],
												"src": "6907:135:25"
											},
											{
												"body": {
													"nativeSrc": "7211:1030:25",
													"nodeType": "YulBlock",
													"src": "7211:1030:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "7258:83:25",
																"nodeType": "YulBlock",
																"src": "7258:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7260:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "7260:77:25"
																			},
																			"nativeSrc": "7260:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "7260:79:25"
																		},
																		"nativeSrc": "7260:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "7260:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7232:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "7232:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7241:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7228:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "7228:3:25"
																		},
																		"nativeSrc": "7228:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "7228:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7253:3:25",
																		"nodeType": "YulLiteral",
																		"src": "7253:3:25",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7224:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "7224:3:25"
																},
																"nativeSrc": "7224:33:25",
																"nodeType": "YulFunctionCall",
																"src": "7224:33:25"
															},
															"nativeSrc": "7221:120:25",
															"nodeType": "YulIf",
															"src": "7221:120:25"
														},
														{
															"nativeSrc": "7351:117:25",
															"nodeType": "YulBlock",
															"src": "7351:117:25",
															"statements": [
																{
																	"nativeSrc": "7366:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7366:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7380:1:25",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7370:6:25",
																			"nodeType": "YulTypedName",
																			"src": "7370:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7395:63:25",
																	"nodeType": "YulAssignment",
																	"src": "7395:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7430:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "7430:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7441:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "7441:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7426:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "7426:3:25"
																				},
																				"nativeSrc": "7426:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "7426:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7450:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "7450:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7405:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "7405:20:25"
																		},
																		"nativeSrc": "7405:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "7405:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7395:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "7395:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7478:118:25",
															"nodeType": "YulBlock",
															"src": "7478:118:25",
															"statements": [
																{
																	"nativeSrc": "7493:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7493:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7507:2:25",
																		"nodeType": "YulLiteral",
																		"src": "7507:2:25",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7497:6:25",
																			"nodeType": "YulTypedName",
																			"src": "7497:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7523:63:25",
																	"nodeType": "YulAssignment",
																	"src": "7523:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7558:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "7558:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7569:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "7569:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7554:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "7554:3:25"
																				},
																				"nativeSrc": "7554:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "7554:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7578:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "7578:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7533:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "7533:20:25"
																		},
																		"nativeSrc": "7533:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "7533:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7523:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "7523:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7606:117:25",
															"nodeType": "YulBlock",
															"src": "7606:117:25",
															"statements": [
																{
																	"nativeSrc": "7621:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7621:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7635:2:25",
																		"nodeType": "YulLiteral",
																		"src": "7635:2:25",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7625:6:25",
																			"nodeType": "YulTypedName",
																			"src": "7625:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7651:62:25",
																	"nodeType": "YulAssignment",
																	"src": "7651:62:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7685:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "7685:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7696:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "7696:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7681:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "7681:3:25"
																				},
																				"nativeSrc": "7681:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "7681:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7705:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "7705:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "7661:19:25",
																			"nodeType": "YulIdentifier",
																			"src": "7661:19:25"
																		},
																		"nativeSrc": "7661:52:25",
																		"nodeType": "YulFunctionCall",
																		"src": "7661:52:25"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7651:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "7651:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7733:118:25",
															"nodeType": "YulBlock",
															"src": "7733:118:25",
															"statements": [
																{
																	"nativeSrc": "7748:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7748:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7762:2:25",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:25",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7752:6:25",
																			"nodeType": "YulTypedName",
																			"src": "7752:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7778:63:25",
																	"nodeType": "YulAssignment",
																	"src": "7778:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7813:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "7813:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7824:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "7824:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7809:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "7809:3:25"
																				},
																				"nativeSrc": "7809:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "7809:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7833:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "7833:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7788:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "7788:20:25"
																		},
																		"nativeSrc": "7788:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7778:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "7778:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7861:119:25",
															"nodeType": "YulBlock",
															"src": "7861:119:25",
															"statements": [
																{
																	"nativeSrc": "7876:17:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7876:17:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7890:3:25",
																		"nodeType": "YulLiteral",
																		"src": "7890:3:25",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7880:6:25",
																			"nodeType": "YulTypedName",
																			"src": "7880:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7907:63:25",
																	"nodeType": "YulAssignment",
																	"src": "7907:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7942:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "7942:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7953:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "7953:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7938:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "7938:3:25"
																				},
																				"nativeSrc": "7938:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "7938:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7962:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "7962:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7917:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "7917:20:25"
																		},
																		"nativeSrc": "7917:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "7917:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7907:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "7907:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7990:117:25",
															"nodeType": "YulBlock",
															"src": "7990:117:25",
															"statements": [
																{
																	"nativeSrc": "8005:17:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8005:17:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8019:3:25",
																		"nodeType": "YulLiteral",
																		"src": "8019:3:25",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8009:6:25",
																			"nodeType": "YulTypedName",
																			"src": "8009:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8036:61:25",
																	"nodeType": "YulAssignment",
																	"src": "8036:61:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8069:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "8069:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8080:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "8080:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8065:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "8065:3:25"
																				},
																				"nativeSrc": "8065:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "8065:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8089:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "8089:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "8046:18:25",
																			"nodeType": "YulIdentifier",
																			"src": "8046:18:25"
																		},
																		"nativeSrc": "8046:51:25",
																		"nodeType": "YulFunctionCall",
																		"src": "8046:51:25"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "8036:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "8036:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8117:117:25",
															"nodeType": "YulBlock",
															"src": "8117:117:25",
															"statements": [
																{
																	"nativeSrc": "8132:17:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8132:17:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8146:3:25",
																		"nodeType": "YulLiteral",
																		"src": "8146:3:25",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8136:6:25",
																			"nodeType": "YulTypedName",
																			"src": "8136:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8163:61:25",
																	"nodeType": "YulAssignment",
																	"src": "8163:61:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8196:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "8196:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8207:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "8207:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8192:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "8192:3:25"
																				},
																				"nativeSrc": "8192:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "8192:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8216:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "8216:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "8173:18:25",
																			"nodeType": "YulIdentifier",
																			"src": "8173:18:25"
																		},
																		"nativeSrc": "8173:51:25",
																		"nodeType": "YulFunctionCall",
																		"src": "8173:51:25"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "8163:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "8163:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_int24t_int24",
												"nativeSrc": "7048:1193:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7133:9:25",
														"nodeType": "YulTypedName",
														"src": "7133:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7144:7:25",
														"nodeType": "YulTypedName",
														"src": "7144:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7156:6:25",
														"nodeType": "YulTypedName",
														"src": "7156:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7164:6:25",
														"nodeType": "YulTypedName",
														"src": "7164:6:25",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7172:6:25",
														"nodeType": "YulTypedName",
														"src": "7172:6:25",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7180:6:25",
														"nodeType": "YulTypedName",
														"src": "7180:6:25",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7188:6:25",
														"nodeType": "YulTypedName",
														"src": "7188:6:25",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7196:6:25",
														"nodeType": "YulTypedName",
														"src": "7196:6:25",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7204:6:25",
														"nodeType": "YulTypedName",
														"src": "7204:6:25",
														"type": ""
													}
												],
												"src": "7048:1193:25"
											},
											{
												"body": {
													"nativeSrc": "8312:53:25",
													"nodeType": "YulBlock",
													"src": "8312:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8329:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "8329:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8352:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "8352:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8334:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "8334:17:25"
																		},
																		"nativeSrc": "8334:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "8334:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8322:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "8322:6:25"
																},
																"nativeSrc": "8322:37:25",
																"nodeType": "YulFunctionCall",
																"src": "8322:37:25"
															},
															"nativeSrc": "8322:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "8322:37:25"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8247:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8300:5:25",
														"nodeType": "YulTypedName",
														"src": "8300:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8307:3:25",
														"nodeType": "YulTypedName",
														"src": "8307:3:25",
														"type": ""
													}
												],
												"src": "8247:118:25"
											},
											{
												"body": {
													"nativeSrc": "8416:73:25",
													"nodeType": "YulBlock",
													"src": "8416:73:25",
													"statements": [
														{
															"nativeSrc": "8426:57:25",
															"nodeType": "YulAssignment",
															"src": "8426:57:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8441:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "8441:5:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8448:34:25",
																		"nodeType": "YulLiteral",
																		"src": "8448:34:25",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8437:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "8437:3:25"
																},
																"nativeSrc": "8437:46:25",
																"nodeType": "YulFunctionCall",
																"src": "8437:46:25"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8426:7:25",
																	"nodeType": "YulIdentifier",
																	"src": "8426:7:25"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "8371:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8398:5:25",
														"nodeType": "YulTypedName",
														"src": "8398:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8408:7:25",
														"nodeType": "YulTypedName",
														"src": "8408:7:25",
														"type": ""
													}
												],
												"src": "8371:118:25"
											},
											{
												"body": {
													"nativeSrc": "8560:53:25",
													"nodeType": "YulBlock",
													"src": "8560:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8577:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "8577:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8600:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "8600:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "8582:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "8582:17:25"
																		},
																		"nativeSrc": "8582:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8570:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:25"
																},
																"nativeSrc": "8570:37:25",
																"nodeType": "YulFunctionCall",
																"src": "8570:37:25"
															},
															"nativeSrc": "8570:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "8570:37:25"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "8495:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8548:5:25",
														"nodeType": "YulTypedName",
														"src": "8548:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8555:3:25",
														"nodeType": "YulTypedName",
														"src": "8555:3:25",
														"type": ""
													}
												],
												"src": "8495:118:25"
											},
											{
												"body": {
													"nativeSrc": "8801:371:25",
													"nodeType": "YulBlock",
													"src": "8801:371:25",
													"statements": [
														{
															"nativeSrc": "8811:27:25",
															"nodeType": "YulAssignment",
															"src": "8811:27:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8823:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "8823:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8834:3:25",
																		"nodeType": "YulLiteral",
																		"src": "8834:3:25",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8819:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "8819:3:25"
																},
																"nativeSrc": "8819:19:25",
																"nodeType": "YulFunctionCall",
																"src": "8819:19:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8811:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "8811:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8892:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "8892:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8905:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "8905:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8916:1:25",
																				"nodeType": "YulLiteral",
																				"src": "8916:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8901:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "8901:3:25"
																		},
																		"nativeSrc": "8901:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "8901:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8848:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "8848:43:25"
																},
																"nativeSrc": "8848:71:25",
																"nodeType": "YulFunctionCall",
																"src": "8848:71:25"
															},
															"nativeSrc": "8848:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "8848:71:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8973:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "8973:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8986:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "8986:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8997:2:25",
																				"nodeType": "YulLiteral",
																				"src": "8997:2:25",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8982:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "8982:3:25"
																		},
																		"nativeSrc": "8982:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "8982:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "8929:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "8929:43:25"
																},
																"nativeSrc": "8929:72:25",
																"nodeType": "YulFunctionCall",
																"src": "8929:72:25"
															},
															"nativeSrc": "8929:72:25",
															"nodeType": "YulExpressionStatement",
															"src": "8929:72:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9055:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "9055:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9068:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "9068:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9079:2:25",
																				"nodeType": "YulLiteral",
																				"src": "9079:2:25",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9064:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:25"
																		},
																		"nativeSrc": "9064:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "9064:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9011:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "9011:43:25"
																},
																"nativeSrc": "9011:72:25",
																"nodeType": "YulFunctionCall",
																"src": "9011:72:25"
															},
															"nativeSrc": "9011:72:25",
															"nodeType": "YulExpressionStatement",
															"src": "9011:72:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9137:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "9137:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9150:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "9150:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9161:2:25",
																				"nodeType": "YulLiteral",
																				"src": "9161:2:25",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9146:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:25"
																		},
																		"nativeSrc": "9146:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9093:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "9093:43:25"
																},
																"nativeSrc": "9093:72:25",
																"nodeType": "YulFunctionCall",
																"src": "9093:72:25"
															},
															"nativeSrc": "9093:72:25",
															"nodeType": "YulExpressionStatement",
															"src": "9093:72:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8619:553:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8749:9:25",
														"nodeType": "YulTypedName",
														"src": "8749:9:25",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8761:6:25",
														"nodeType": "YulTypedName",
														"src": "8761:6:25",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8769:6:25",
														"nodeType": "YulTypedName",
														"src": "8769:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8777:6:25",
														"nodeType": "YulTypedName",
														"src": "8777:6:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8785:6:25",
														"nodeType": "YulTypedName",
														"src": "8785:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8796:4:25",
														"nodeType": "YulTypedName",
														"src": "8796:4:25",
														"type": ""
													}
												],
												"src": "8619:553:25"
											},
											{
												"body": {
													"nativeSrc": "9263:66:25",
													"nodeType": "YulBlock",
													"src": "9263:66:25",
													"statements": [
														{
															"nativeSrc": "9273:50:25",
															"nodeType": "YulAssignment",
															"src": "9273:50:25",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9317:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "9317:5:25"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9286:30:25",
																	"nodeType": "YulIdentifier",
																	"src": "9286:30:25"
																},
																"nativeSrc": "9286:37:25",
																"nodeType": "YulFunctionCall",
																"src": "9286:37:25"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9273:9:25",
																	"nodeType": "YulIdentifier",
																	"src": "9273:9:25"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV3Factory_$782_to_t_address",
												"nativeSrc": "9178:151:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9243:5:25",
														"nodeType": "YulTypedName",
														"src": "9243:5:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9253:9:25",
														"nodeType": "YulTypedName",
														"src": "9253:9:25",
														"type": ""
													}
												],
												"src": "9178:151:25"
											},
											{
												"body": {
													"nativeSrc": "9425:91:25",
													"nodeType": "YulBlock",
													"src": "9425:91:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9442:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "9442:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9503:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "9503:5:25"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV3Factory_$782_to_t_address",
																			"nativeSrc": "9447:55:25",
																			"nodeType": "YulIdentifier",
																			"src": "9447:55:25"
																		},
																		"nativeSrc": "9447:62:25",
																		"nodeType": "YulFunctionCall",
																		"src": "9447:62:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9435:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "9435:6:25"
																},
																"nativeSrc": "9435:75:25",
																"nodeType": "YulFunctionCall",
																"src": "9435:75:25"
															},
															"nativeSrc": "9435:75:25",
															"nodeType": "YulExpressionStatement",
															"src": "9435:75:25"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV3Factory_$782_to_t_address_fromStack",
												"nativeSrc": "9335:181:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9413:5:25",
														"nodeType": "YulTypedName",
														"src": "9413:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9420:3:25",
														"nodeType": "YulTypedName",
														"src": "9420:3:25",
														"type": ""
													}
												],
												"src": "9335:181:25"
											},
											{
												"body": {
													"nativeSrc": "9645:149:25",
													"nodeType": "YulBlock",
													"src": "9645:149:25",
													"statements": [
														{
															"nativeSrc": "9655:26:25",
															"nodeType": "YulAssignment",
															"src": "9655:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9667:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "9667:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9678:2:25",
																		"nodeType": "YulLiteral",
																		"src": "9678:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9663:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "9663:3:25"
																},
																"nativeSrc": "9663:18:25",
																"nodeType": "YulFunctionCall",
																"src": "9663:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9655:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "9655:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9760:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "9760:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9773:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "9773:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9784:1:25",
																				"nodeType": "YulLiteral",
																				"src": "9784:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9769:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "9769:3:25"
																		},
																		"nativeSrc": "9769:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "9769:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV3Factory_$782_to_t_address_fromStack",
																	"nativeSrc": "9691:68:25",
																	"nodeType": "YulIdentifier",
																	"src": "9691:68:25"
																},
																"nativeSrc": "9691:96:25",
																"nodeType": "YulFunctionCall",
																"src": "9691:96:25"
															},
															"nativeSrc": "9691:96:25",
															"nodeType": "YulExpressionStatement",
															"src": "9691:96:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV3Factory_$782__to_t_address__fromStack_reversed",
												"nativeSrc": "9522:272:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9617:9:25",
														"nodeType": "YulTypedName",
														"src": "9617:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9629:6:25",
														"nodeType": "YulTypedName",
														"src": "9629:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9640:4:25",
														"nodeType": "YulTypedName",
														"src": "9640:4:25",
														"type": ""
													}
												],
												"src": "9522:272:25"
											},
											{
												"body": {
													"nativeSrc": "9917:648:25",
													"nodeType": "YulBlock",
													"src": "9917:648:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "9964:83:25",
																"nodeType": "YulBlock",
																"src": "9964:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9966:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "9966:77:25"
																			},
																			"nativeSrc": "9966:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "9966:79:25"
																		},
																		"nativeSrc": "9966:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "9966:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9938:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "9938:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9947:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9934:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "9934:3:25"
																		},
																		"nativeSrc": "9934:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "9934:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9959:3:25",
																		"nodeType": "YulLiteral",
																		"src": "9959:3:25",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9930:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "9930:3:25"
																},
																"nativeSrc": "9930:33:25",
																"nodeType": "YulFunctionCall",
																"src": "9930:33:25"
															},
															"nativeSrc": "9927:120:25",
															"nodeType": "YulIf",
															"src": "9927:120:25"
														},
														{
															"nativeSrc": "10057:117:25",
															"nodeType": "YulBlock",
															"src": "10057:117:25",
															"statements": [
																{
																	"nativeSrc": "10072:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10072:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10086:1:25",
																		"nodeType": "YulLiteral",
																		"src": "10086:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10076:6:25",
																			"nodeType": "YulTypedName",
																			"src": "10076:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10101:63:25",
																	"nodeType": "YulAssignment",
																	"src": "10101:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10136:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "10136:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10147:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "10147:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10132:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "10132:3:25"
																				},
																				"nativeSrc": "10132:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "10132:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10156:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "10156:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10111:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "10111:20:25"
																		},
																		"nativeSrc": "10111:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "10111:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10101:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "10101:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10184:118:25",
															"nodeType": "YulBlock",
															"src": "10184:118:25",
															"statements": [
																{
																	"nativeSrc": "10199:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10199:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10213:2:25",
																		"nodeType": "YulLiteral",
																		"src": "10213:2:25",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10203:6:25",
																			"nodeType": "YulTypedName",
																			"src": "10203:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10229:63:25",
																	"nodeType": "YulAssignment",
																	"src": "10229:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10264:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "10264:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10275:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "10275:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10260:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "10260:3:25"
																				},
																				"nativeSrc": "10260:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "10260:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10284:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "10284:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10239:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "10239:20:25"
																		},
																		"nativeSrc": "10239:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "10239:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10229:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "10229:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10312:118:25",
															"nodeType": "YulBlock",
															"src": "10312:118:25",
															"statements": [
																{
																	"nativeSrc": "10327:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10327:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10341:2:25",
																		"nodeType": "YulLiteral",
																		"src": "10341:2:25",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10331:6:25",
																			"nodeType": "YulTypedName",
																			"src": "10331:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10357:63:25",
																	"nodeType": "YulAssignment",
																	"src": "10357:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10392:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "10392:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10403:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "10403:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10388:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "10388:3:25"
																				},
																				"nativeSrc": "10388:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "10388:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10412:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "10412:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10367:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "10367:20:25"
																		},
																		"nativeSrc": "10367:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "10367:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10357:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "10357:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10440:118:25",
															"nodeType": "YulBlock",
															"src": "10440:118:25",
															"statements": [
																{
																	"nativeSrc": "10455:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10455:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10469:2:25",
																		"nodeType": "YulLiteral",
																		"src": "10469:2:25",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10459:6:25",
																			"nodeType": "YulTypedName",
																			"src": "10459:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10485:63:25",
																	"nodeType": "YulAssignment",
																	"src": "10485:63:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10520:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "10520:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10531:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "10531:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10516:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "10516:3:25"
																				},
																				"nativeSrc": "10516:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "10516:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10540:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "10540:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10495:20:25",
																			"nodeType": "YulIdentifier",
																			"src": "10495:20:25"
																		},
																		"nativeSrc": "10495:53:25",
																		"nodeType": "YulFunctionCall",
																		"src": "10495:53:25"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10485:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "10485:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nativeSrc": "9800:765:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9863:9:25",
														"nodeType": "YulTypedName",
														"src": "9863:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9874:7:25",
														"nodeType": "YulTypedName",
														"src": "9874:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9886:6:25",
														"nodeType": "YulTypedName",
														"src": "9886:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9894:6:25",
														"nodeType": "YulTypedName",
														"src": "9894:6:25",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9902:6:25",
														"nodeType": "YulTypedName",
														"src": "9902:6:25",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9910:6:25",
														"nodeType": "YulTypedName",
														"src": "9910:6:25",
														"type": ""
													}
												],
												"src": "9800:765:25"
											},
											{
												"body": {
													"nativeSrc": "10634:52:25",
													"nodeType": "YulBlock",
													"src": "10634:52:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10651:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "10651:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10673:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "10673:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "10656:16:25",
																			"nodeType": "YulIdentifier",
																			"src": "10656:16:25"
																		},
																		"nativeSrc": "10656:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "10656:23:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10644:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "10644:6:25"
																},
																"nativeSrc": "10644:36:25",
																"nodeType": "YulFunctionCall",
																"src": "10644:36:25"
															},
															"nativeSrc": "10644:36:25",
															"nodeType": "YulExpressionStatement",
															"src": "10644:36:25"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "10571:115:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10622:5:25",
														"nodeType": "YulTypedName",
														"src": "10622:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10629:3:25",
														"nodeType": "YulTypedName",
														"src": "10629:3:25",
														"type": ""
													}
												],
												"src": "10571:115:25"
											},
											{
												"body": {
													"nativeSrc": "10844:286:25",
													"nodeType": "YulBlock",
													"src": "10844:286:25",
													"statements": [
														{
															"nativeSrc": "10854:26:25",
															"nodeType": "YulAssignment",
															"src": "10854:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10866:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "10866:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10877:2:25",
																		"nodeType": "YulLiteral",
																		"src": "10877:2:25",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10862:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "10862:3:25"
																},
																"nativeSrc": "10862:18:25",
																"nodeType": "YulFunctionCall",
																"src": "10862:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10854:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "10854:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10934:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "10934:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10947:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "10947:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10958:1:25",
																				"nodeType": "YulLiteral",
																				"src": "10958:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10943:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "10943:3:25"
																		},
																		"nativeSrc": "10943:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "10943:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10890:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "10890:43:25"
																},
																"nativeSrc": "10890:71:25",
																"nodeType": "YulFunctionCall",
																"src": "10890:71:25"
															},
															"nativeSrc": "10890:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "10890:71:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11015:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "11015:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11028:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "11028:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11039:2:25",
																				"nodeType": "YulLiteral",
																				"src": "11039:2:25",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11024:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:25"
																		},
																		"nativeSrc": "11024:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "11024:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10971:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "10971:43:25"
																},
																"nativeSrc": "10971:72:25",
																"nodeType": "YulFunctionCall",
																"src": "10971:72:25"
															},
															"nativeSrc": "10971:72:25",
															"nodeType": "YulExpressionStatement",
															"src": "10971:72:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11095:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "11095:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11108:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "11108:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11119:2:25",
																				"nodeType": "YulLiteral",
																				"src": "11119:2:25",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11104:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "11104:3:25"
																		},
																		"nativeSrc": "11104:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "11104:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "11053:41:25",
																	"nodeType": "YulIdentifier",
																	"src": "11053:41:25"
																},
																"nativeSrc": "11053:70:25",
																"nodeType": "YulFunctionCall",
																"src": "11053:70:25"
															},
															"nativeSrc": "11053:70:25",
															"nodeType": "YulExpressionStatement",
															"src": "11053:70:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nativeSrc": "10692:438:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10800:9:25",
														"nodeType": "YulTypedName",
														"src": "10800:9:25",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10812:6:25",
														"nodeType": "YulTypedName",
														"src": "10812:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10820:6:25",
														"nodeType": "YulTypedName",
														"src": "10820:6:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10828:6:25",
														"nodeType": "YulTypedName",
														"src": "10828:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10839:4:25",
														"nodeType": "YulTypedName",
														"src": "10839:4:25",
														"type": ""
													}
												],
												"src": "10692:438:25"
											},
											{
												"body": {
													"nativeSrc": "11199:80:25",
													"nodeType": "YulBlock",
													"src": "11199:80:25",
													"statements": [
														{
															"nativeSrc": "11209:22:25",
															"nodeType": "YulAssignment",
															"src": "11209:22:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11224:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "11224:6:25"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11218:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "11218:5:25"
																},
																"nativeSrc": "11218:13:25",
																"nodeType": "YulFunctionCall",
																"src": "11218:13:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11209:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "11209:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11267:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "11267:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "11240:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "11240:26:25"
																},
																"nativeSrc": "11240:33:25",
																"nodeType": "YulFunctionCall",
																"src": "11240:33:25"
															},
															"nativeSrc": "11240:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "11240:33:25"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "11136:143:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11177:6:25",
														"nodeType": "YulTypedName",
														"src": "11177:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11185:3:25",
														"nodeType": "YulTypedName",
														"src": "11185:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11193:5:25",
														"nodeType": "YulTypedName",
														"src": "11193:5:25",
														"type": ""
													}
												],
												"src": "11136:143:25"
											},
											{
												"body": {
													"nativeSrc": "11362:274:25",
													"nodeType": "YulBlock",
													"src": "11362:274:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "11408:83:25",
																"nodeType": "YulBlock",
																"src": "11408:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11410:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "11410:77:25"
																			},
																			"nativeSrc": "11410:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "11410:79:25"
																		},
																		"nativeSrc": "11410:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "11410:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11383:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "11383:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11392:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "11392:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11379:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "11379:3:25"
																		},
																		"nativeSrc": "11379:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "11379:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11404:2:25",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11375:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "11375:3:25"
																},
																"nativeSrc": "11375:32:25",
																"nodeType": "YulFunctionCall",
																"src": "11375:32:25"
															},
															"nativeSrc": "11372:119:25",
															"nodeType": "YulIf",
															"src": "11372:119:25"
														},
														{
															"nativeSrc": "11501:128:25",
															"nodeType": "YulBlock",
															"src": "11501:128:25",
															"statements": [
																{
																	"nativeSrc": "11516:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11516:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11530:1:25",
																		"nodeType": "YulLiteral",
																		"src": "11530:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11520:6:25",
																			"nodeType": "YulTypedName",
																			"src": "11520:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11545:74:25",
																	"nodeType": "YulAssignment",
																	"src": "11545:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11591:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "11591:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11602:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "11602:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11587:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "11587:3:25"
																				},
																				"nativeSrc": "11587:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "11587:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11611:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "11611:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "11555:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "11555:31:25"
																		},
																		"nativeSrc": "11555:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "11555:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11545:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "11545:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "11285:351:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11332:9:25",
														"nodeType": "YulTypedName",
														"src": "11332:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11343:7:25",
														"nodeType": "YulTypedName",
														"src": "11343:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11355:6:25",
														"nodeType": "YulTypedName",
														"src": "11355:6:25",
														"type": ""
													}
												],
												"src": "11285:351:25"
											},
											{
												"body": {
													"nativeSrc": "11738:73:25",
													"nodeType": "YulBlock",
													"src": "11738:73:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11755:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "11755:3:25"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11760:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "11760:6:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11748:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:25"
																},
																"nativeSrc": "11748:19:25",
																"nodeType": "YulFunctionCall",
																"src": "11748:19:25"
															},
															"nativeSrc": "11748:19:25",
															"nodeType": "YulExpressionStatement",
															"src": "11748:19:25"
														},
														{
															"nativeSrc": "11776:29:25",
															"nodeType": "YulAssignment",
															"src": "11776:29:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11795:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "11795:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11800:4:25",
																		"nodeType": "YulLiteral",
																		"src": "11800:4:25",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11791:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "11791:3:25"
																},
																"nativeSrc": "11791:14:25",
																"nodeType": "YulFunctionCall",
																"src": "11791:14:25"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11776:11:25",
																	"nodeType": "YulIdentifier",
																	"src": "11776:11:25"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11642:169:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11710:3:25",
														"nodeType": "YulTypedName",
														"src": "11710:3:25",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11715:6:25",
														"nodeType": "YulTypedName",
														"src": "11715:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11726:11:25",
														"nodeType": "YulTypedName",
														"src": "11726:11:25",
														"type": ""
													}
												],
												"src": "11642:169:25"
											},
											{
												"body": {
													"nativeSrc": "11923:63:25",
													"nodeType": "YulBlock",
													"src": "11923:63:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11945:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "11945:6:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11953:1:25",
																				"nodeType": "YulLiteral",
																				"src": "11953:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11941:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "11941:3:25"
																		},
																		"nativeSrc": "11941:14:25",
																		"nodeType": "YulFunctionCall",
																		"src": "11941:14:25"
																	},
																	{
																		"hexValue": "506f6f6c20616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "11957:21:25",
																		"nodeType": "YulLiteral",
																		"src": "11957:21:25",
																		"type": "",
																		"value": "Pool already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11934:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "11934:6:25"
																},
																"nativeSrc": "11934:45:25",
																"nodeType": "YulFunctionCall",
																"src": "11934:45:25"
															},
															"nativeSrc": "11934:45:25",
															"nodeType": "YulExpressionStatement",
															"src": "11934:45:25"
														}
													]
												},
												"name": "store_literal_in_memory_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95",
												"nativeSrc": "11817:169:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11915:6:25",
														"nodeType": "YulTypedName",
														"src": "11915:6:25",
														"type": ""
													}
												],
												"src": "11817:169:25"
											},
											{
												"body": {
													"nativeSrc": "12138:220:25",
													"nodeType": "YulBlock",
													"src": "12138:220:25",
													"statements": [
														{
															"nativeSrc": "12148:74:25",
															"nodeType": "YulAssignment",
															"src": "12148:74:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12214:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "12214:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12219:2:25",
																		"nodeType": "YulLiteral",
																		"src": "12219:2:25",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12155:58:25",
																	"nodeType": "YulIdentifier",
																	"src": "12155:58:25"
																},
																"nativeSrc": "12155:67:25",
																"nodeType": "YulFunctionCall",
																"src": "12155:67:25"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12148:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "12148:3:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12320:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "12320:3:25"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95",
																	"nativeSrc": "12231:88:25",
																	"nodeType": "YulIdentifier",
																	"src": "12231:88:25"
																},
																"nativeSrc": "12231:93:25",
																"nodeType": "YulFunctionCall",
																"src": "12231:93:25"
															},
															"nativeSrc": "12231:93:25",
															"nodeType": "YulExpressionStatement",
															"src": "12231:93:25"
														},
														{
															"nativeSrc": "12333:19:25",
															"nodeType": "YulAssignment",
															"src": "12333:19:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12344:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "12344:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12349:2:25",
																		"nodeType": "YulLiteral",
																		"src": "12349:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12340:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "12340:3:25"
																},
																"nativeSrc": "12340:12:25",
																"nodeType": "YulFunctionCall",
																"src": "12340:12:25"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12333:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "12333:3:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11992:366:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12126:3:25",
														"nodeType": "YulTypedName",
														"src": "12126:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12134:3:25",
														"nodeType": "YulTypedName",
														"src": "12134:3:25",
														"type": ""
													}
												],
												"src": "11992:366:25"
											},
											{
												"body": {
													"nativeSrc": "12535:248:25",
													"nodeType": "YulBlock",
													"src": "12535:248:25",
													"statements": [
														{
															"nativeSrc": "12545:26:25",
															"nodeType": "YulAssignment",
															"src": "12545:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12557:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "12557:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12568:2:25",
																		"nodeType": "YulLiteral",
																		"src": "12568:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12553:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "12553:3:25"
																},
																"nativeSrc": "12553:18:25",
																"nodeType": "YulFunctionCall",
																"src": "12553:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12545:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "12545:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12592:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "12592:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12603:1:25",
																				"nodeType": "YulLiteral",
																				"src": "12603:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12588:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "12588:3:25"
																		},
																		"nativeSrc": "12588:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "12588:17:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12611:4:25",
																				"nodeType": "YulIdentifier",
																				"src": "12611:4:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12617:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "12617:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12607:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "12607:3:25"
																		},
																		"nativeSrc": "12607:20:25",
																		"nodeType": "YulFunctionCall",
																		"src": "12607:20:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12581:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "12581:6:25"
																},
																"nativeSrc": "12581:47:25",
																"nodeType": "YulFunctionCall",
																"src": "12581:47:25"
															},
															"nativeSrc": "12581:47:25",
															"nodeType": "YulExpressionStatement",
															"src": "12581:47:25"
														},
														{
															"nativeSrc": "12637:139:25",
															"nodeType": "YulAssignment",
															"src": "12637:139:25",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12771:4:25",
																		"nodeType": "YulIdentifier",
																		"src": "12771:4:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12645:124:25",
																	"nodeType": "YulIdentifier",
																	"src": "12645:124:25"
																},
																"nativeSrc": "12645:131:25",
																"nodeType": "YulFunctionCall",
																"src": "12645:131:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12637:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "12637:4:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12364:419:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12515:9:25",
														"nodeType": "YulTypedName",
														"src": "12515:9:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12530:4:25",
														"nodeType": "YulTypedName",
														"src": "12530:4:25",
														"type": ""
													}
												],
												"src": "12364:419:25"
											},
											{
												"body": {
													"nativeSrc": "12854:53:25",
													"nodeType": "YulBlock",
													"src": "12854:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12871:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "12871:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12894:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "12894:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "12876:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "12876:17:25"
																		},
																		"nativeSrc": "12876:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "12876:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12864:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "12864:6:25"
																},
																"nativeSrc": "12864:37:25",
																"nodeType": "YulFunctionCall",
																"src": "12864:37:25"
															},
															"nativeSrc": "12864:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "12864:37:25"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "12789:118:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12842:5:25",
														"nodeType": "YulTypedName",
														"src": "12842:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12849:3:25",
														"nodeType": "YulTypedName",
														"src": "12849:3:25",
														"type": ""
													}
												],
												"src": "12789:118:25"
											},
											{
												"body": {
													"nativeSrc": "13011:124:25",
													"nodeType": "YulBlock",
													"src": "13011:124:25",
													"statements": [
														{
															"nativeSrc": "13021:26:25",
															"nodeType": "YulAssignment",
															"src": "13021:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13033:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "13033:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13044:2:25",
																		"nodeType": "YulLiteral",
																		"src": "13044:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13029:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "13029:3:25"
																},
																"nativeSrc": "13029:18:25",
																"nodeType": "YulFunctionCall",
																"src": "13029:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13021:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "13021:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13101:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "13101:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13114:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "13114:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13125:1:25",
																				"nodeType": "YulLiteral",
																				"src": "13125:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13110:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "13110:3:25"
																		},
																		"nativeSrc": "13110:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "13110:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "13057:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "13057:43:25"
																},
																"nativeSrc": "13057:71:25",
																"nodeType": "YulFunctionCall",
																"src": "13057:71:25"
															},
															"nativeSrc": "13057:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "13057:71:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed",
												"nativeSrc": "12913:222:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12983:9:25",
														"nodeType": "YulTypedName",
														"src": "12983:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12995:6:25",
														"nodeType": "YulTypedName",
														"src": "12995:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13006:4:25",
														"nodeType": "YulTypedName",
														"src": "13006:4:25",
														"type": ""
													}
												],
												"src": "12913:222:25"
											},
											{
												"body": {
													"nativeSrc": "13204:80:25",
													"nodeType": "YulBlock",
													"src": "13204:80:25",
													"statements": [
														{
															"nativeSrc": "13214:22:25",
															"nodeType": "YulAssignment",
															"src": "13214:22:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13229:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "13229:6:25"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13223:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "13223:5:25"
																},
																"nativeSrc": "13223:13:25",
																"nodeType": "YulFunctionCall",
																"src": "13223:13:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13214:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "13214:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13272:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "13272:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13245:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "13245:26:25"
																},
																"nativeSrc": "13245:33:25",
																"nodeType": "YulFunctionCall",
																"src": "13245:33:25"
															},
															"nativeSrc": "13245:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "13245:33:25"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13141:143:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13182:6:25",
														"nodeType": "YulTypedName",
														"src": "13182:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13190:3:25",
														"nodeType": "YulTypedName",
														"src": "13190:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13198:5:25",
														"nodeType": "YulTypedName",
														"src": "13198:5:25",
														"type": ""
													}
												],
												"src": "13141:143:25"
											},
											{
												"body": {
													"nativeSrc": "13367:274:25",
													"nodeType": "YulBlock",
													"src": "13367:274:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "13413:83:25",
																"nodeType": "YulBlock",
																"src": "13413:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13415:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "13415:77:25"
																			},
																			"nativeSrc": "13415:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "13415:79:25"
																		},
																		"nativeSrc": "13415:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "13415:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13388:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "13388:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13397:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "13397:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13384:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "13384:3:25"
																		},
																		"nativeSrc": "13384:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "13384:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13409:2:25",
																		"nodeType": "YulLiteral",
																		"src": "13409:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13380:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "13380:3:25"
																},
																"nativeSrc": "13380:32:25",
																"nodeType": "YulFunctionCall",
																"src": "13380:32:25"
															},
															"nativeSrc": "13377:119:25",
															"nodeType": "YulIf",
															"src": "13377:119:25"
														},
														{
															"nativeSrc": "13506:128:25",
															"nodeType": "YulBlock",
															"src": "13506:128:25",
															"statements": [
																{
																	"nativeSrc": "13521:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13521:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13535:1:25",
																		"nodeType": "YulLiteral",
																		"src": "13535:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13525:6:25",
																			"nodeType": "YulTypedName",
																			"src": "13525:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13550:74:25",
																	"nodeType": "YulAssignment",
																	"src": "13550:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13596:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "13596:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13607:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "13607:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13592:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "13592:3:25"
																				},
																				"nativeSrc": "13592:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "13592:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13616:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "13616:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13560:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "13560:31:25"
																		},
																		"nativeSrc": "13560:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "13560:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13550:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "13550:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13290:351:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13337:9:25",
														"nodeType": "YulTypedName",
														"src": "13337:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13348:7:25",
														"nodeType": "YulTypedName",
														"src": "13348:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13360:6:25",
														"nodeType": "YulTypedName",
														"src": "13360:6:25",
														"type": ""
													}
												],
												"src": "13290:351:25"
											},
											{
												"body": {
													"nativeSrc": "13753:63:25",
													"nodeType": "YulBlock",
													"src": "13753:63:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13775:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "13775:6:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13783:1:25",
																				"nodeType": "YulLiteral",
																				"src": "13783:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13771:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "13771:3:25"
																		},
																		"nativeSrc": "13771:14:25",
																		"nodeType": "YulFunctionCall",
																		"src": "13771:14:25"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f6b656e41",
																		"kind": "string",
																		"nativeSrc": "13787:21:25",
																		"nodeType": "YulLiteral",
																		"src": "13787:21:25",
																		"type": "",
																		"value": "Insufficient TokenA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13764:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "13764:6:25"
																},
																"nativeSrc": "13764:45:25",
																"nodeType": "YulFunctionCall",
																"src": "13764:45:25"
															},
															"nativeSrc": "13764:45:25",
															"nodeType": "YulExpressionStatement",
															"src": "13764:45:25"
														}
													]
												},
												"name": "store_literal_in_memory_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688",
												"nativeSrc": "13647:169:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13745:6:25",
														"nodeType": "YulTypedName",
														"src": "13745:6:25",
														"type": ""
													}
												],
												"src": "13647:169:25"
											},
											{
												"body": {
													"nativeSrc": "13968:220:25",
													"nodeType": "YulBlock",
													"src": "13968:220:25",
													"statements": [
														{
															"nativeSrc": "13978:74:25",
															"nodeType": "YulAssignment",
															"src": "13978:74:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14044:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "14044:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14049:2:25",
																		"nodeType": "YulLiteral",
																		"src": "14049:2:25",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13985:58:25",
																	"nodeType": "YulIdentifier",
																	"src": "13985:58:25"
																},
																"nativeSrc": "13985:67:25",
																"nodeType": "YulFunctionCall",
																"src": "13985:67:25"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13978:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "13978:3:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14150:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "14150:3:25"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688",
																	"nativeSrc": "14061:88:25",
																	"nodeType": "YulIdentifier",
																	"src": "14061:88:25"
																},
																"nativeSrc": "14061:93:25",
																"nodeType": "YulFunctionCall",
																"src": "14061:93:25"
															},
															"nativeSrc": "14061:93:25",
															"nodeType": "YulExpressionStatement",
															"src": "14061:93:25"
														},
														{
															"nativeSrc": "14163:19:25",
															"nodeType": "YulAssignment",
															"src": "14163:19:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14174:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "14174:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14179:2:25",
																		"nodeType": "YulLiteral",
																		"src": "14179:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14170:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "14170:3:25"
																},
																"nativeSrc": "14170:12:25",
																"nodeType": "YulFunctionCall",
																"src": "14170:12:25"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14163:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "14163:3:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13822:366:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13956:3:25",
														"nodeType": "YulTypedName",
														"src": "13956:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13964:3:25",
														"nodeType": "YulTypedName",
														"src": "13964:3:25",
														"type": ""
													}
												],
												"src": "13822:366:25"
											},
											{
												"body": {
													"nativeSrc": "14365:248:25",
													"nodeType": "YulBlock",
													"src": "14365:248:25",
													"statements": [
														{
															"nativeSrc": "14375:26:25",
															"nodeType": "YulAssignment",
															"src": "14375:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14387:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "14387:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14398:2:25",
																		"nodeType": "YulLiteral",
																		"src": "14398:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14383:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:25"
																},
																"nativeSrc": "14383:18:25",
																"nodeType": "YulFunctionCall",
																"src": "14383:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14375:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "14375:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14422:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "14422:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14433:1:25",
																				"nodeType": "YulLiteral",
																				"src": "14433:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14418:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "14418:3:25"
																		},
																		"nativeSrc": "14418:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "14418:17:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14441:4:25",
																				"nodeType": "YulIdentifier",
																				"src": "14441:4:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14447:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "14447:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14437:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "14437:3:25"
																		},
																		"nativeSrc": "14437:20:25",
																		"nodeType": "YulFunctionCall",
																		"src": "14437:20:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14411:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "14411:6:25"
																},
																"nativeSrc": "14411:47:25",
																"nodeType": "YulFunctionCall",
																"src": "14411:47:25"
															},
															"nativeSrc": "14411:47:25",
															"nodeType": "YulExpressionStatement",
															"src": "14411:47:25"
														},
														{
															"nativeSrc": "14467:139:25",
															"nodeType": "YulAssignment",
															"src": "14467:139:25",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14601:4:25",
																		"nodeType": "YulIdentifier",
																		"src": "14601:4:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14475:124:25",
																	"nodeType": "YulIdentifier",
																	"src": "14475:124:25"
																},
																"nativeSrc": "14475:131:25",
																"nodeType": "YulFunctionCall",
																"src": "14475:131:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14467:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "14467:4:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14194:419:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14345:9:25",
														"nodeType": "YulTypedName",
														"src": "14345:9:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14360:4:25",
														"nodeType": "YulTypedName",
														"src": "14360:4:25",
														"type": ""
													}
												],
												"src": "14194:419:25"
											},
											{
												"body": {
													"nativeSrc": "14725:63:25",
													"nodeType": "YulBlock",
													"src": "14725:63:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14747:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "14747:6:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14755:1:25",
																				"nodeType": "YulLiteral",
																				"src": "14755:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14743:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "14743:3:25"
																		},
																		"nativeSrc": "14743:14:25",
																		"nodeType": "YulFunctionCall",
																		"src": "14743:14:25"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f6b656e42",
																		"kind": "string",
																		"nativeSrc": "14759:21:25",
																		"nodeType": "YulLiteral",
																		"src": "14759:21:25",
																		"type": "",
																		"value": "Insufficient TokenB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14736:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "14736:6:25"
																},
																"nativeSrc": "14736:45:25",
																"nodeType": "YulFunctionCall",
																"src": "14736:45:25"
															},
															"nativeSrc": "14736:45:25",
															"nodeType": "YulExpressionStatement",
															"src": "14736:45:25"
														}
													]
												},
												"name": "store_literal_in_memory_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f",
												"nativeSrc": "14619:169:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14717:6:25",
														"nodeType": "YulTypedName",
														"src": "14717:6:25",
														"type": ""
													}
												],
												"src": "14619:169:25"
											},
											{
												"body": {
													"nativeSrc": "14940:220:25",
													"nodeType": "YulBlock",
													"src": "14940:220:25",
													"statements": [
														{
															"nativeSrc": "14950:74:25",
															"nodeType": "YulAssignment",
															"src": "14950:74:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15016:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "15016:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15021:2:25",
																		"nodeType": "YulLiteral",
																		"src": "15021:2:25",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14957:58:25",
																	"nodeType": "YulIdentifier",
																	"src": "14957:58:25"
																},
																"nativeSrc": "14957:67:25",
																"nodeType": "YulFunctionCall",
																"src": "14957:67:25"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14950:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "14950:3:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15122:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "15122:3:25"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f",
																	"nativeSrc": "15033:88:25",
																	"nodeType": "YulIdentifier",
																	"src": "15033:88:25"
																},
																"nativeSrc": "15033:93:25",
																"nodeType": "YulFunctionCall",
																"src": "15033:93:25"
															},
															"nativeSrc": "15033:93:25",
															"nodeType": "YulExpressionStatement",
															"src": "15033:93:25"
														},
														{
															"nativeSrc": "15135:19:25",
															"nodeType": "YulAssignment",
															"src": "15135:19:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15146:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "15146:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15151:2:25",
																		"nodeType": "YulLiteral",
																		"src": "15151:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15142:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "15142:3:25"
																},
																"nativeSrc": "15142:12:25",
																"nodeType": "YulFunctionCall",
																"src": "15142:12:25"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15135:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "15135:3:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14794:366:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14928:3:25",
														"nodeType": "YulTypedName",
														"src": "14928:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14936:3:25",
														"nodeType": "YulTypedName",
														"src": "14936:3:25",
														"type": ""
													}
												],
												"src": "14794:366:25"
											},
											{
												"body": {
													"nativeSrc": "15337:248:25",
													"nodeType": "YulBlock",
													"src": "15337:248:25",
													"statements": [
														{
															"nativeSrc": "15347:26:25",
															"nodeType": "YulAssignment",
															"src": "15347:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15359:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "15359:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15370:2:25",
																		"nodeType": "YulLiteral",
																		"src": "15370:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15355:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "15355:3:25"
																},
																"nativeSrc": "15355:18:25",
																"nodeType": "YulFunctionCall",
																"src": "15355:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15347:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "15347:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15394:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "15394:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15405:1:25",
																				"nodeType": "YulLiteral",
																				"src": "15405:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15390:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "15390:3:25"
																		},
																		"nativeSrc": "15390:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "15390:17:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15413:4:25",
																				"nodeType": "YulIdentifier",
																				"src": "15413:4:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15419:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "15419:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15409:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "15409:3:25"
																		},
																		"nativeSrc": "15409:20:25",
																		"nodeType": "YulFunctionCall",
																		"src": "15409:20:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15383:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "15383:6:25"
																},
																"nativeSrc": "15383:47:25",
																"nodeType": "YulFunctionCall",
																"src": "15383:47:25"
															},
															"nativeSrc": "15383:47:25",
															"nodeType": "YulExpressionStatement",
															"src": "15383:47:25"
														},
														{
															"nativeSrc": "15439:139:25",
															"nodeType": "YulAssignment",
															"src": "15439:139:25",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15573:4:25",
																		"nodeType": "YulIdentifier",
																		"src": "15573:4:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15447:124:25",
																	"nodeType": "YulIdentifier",
																	"src": "15447:124:25"
																},
																"nativeSrc": "15447:131:25",
																"nodeType": "YulFunctionCall",
																"src": "15447:131:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15439:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "15439:4:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15166:419:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15317:9:25",
														"nodeType": "YulTypedName",
														"src": "15317:9:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15332:4:25",
														"nodeType": "YulTypedName",
														"src": "15332:4:25",
														"type": ""
													}
												],
												"src": "15166:419:25"
											},
											{
												"body": {
													"nativeSrc": "15619:152:25",
													"nodeType": "YulBlock",
													"src": "15619:152:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15636:1:25",
																		"nodeType": "YulLiteral",
																		"src": "15636:1:25",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15639:77:25",
																		"nodeType": "YulLiteral",
																		"src": "15639:77:25",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15629:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:25"
																},
																"nativeSrc": "15629:88:25",
																"nodeType": "YulFunctionCall",
																"src": "15629:88:25"
															},
															"nativeSrc": "15629:88:25",
															"nodeType": "YulExpressionStatement",
															"src": "15629:88:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15733:1:25",
																		"nodeType": "YulLiteral",
																		"src": "15733:1:25",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15736:4:25",
																		"nodeType": "YulLiteral",
																		"src": "15736:4:25",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15726:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "15726:6:25"
																},
																"nativeSrc": "15726:15:25",
																"nodeType": "YulFunctionCall",
																"src": "15726:15:25"
															},
															"nativeSrc": "15726:15:25",
															"nodeType": "YulExpressionStatement",
															"src": "15726:15:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15757:1:25",
																		"nodeType": "YulLiteral",
																		"src": "15757:1:25",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15760:4:25",
																		"nodeType": "YulLiteral",
																		"src": "15760:4:25",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15750:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "15750:6:25"
																},
																"nativeSrc": "15750:15:25",
																"nodeType": "YulFunctionCall",
																"src": "15750:15:25"
															},
															"nativeSrc": "15750:15:25",
															"nodeType": "YulExpressionStatement",
															"src": "15750:15:25"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15591:180:25",
												"nodeType": "YulFunctionDefinition",
												"src": "15591:180:25"
											},
											{
												"body": {
													"nativeSrc": "15821:147:25",
													"nodeType": "YulBlock",
													"src": "15821:147:25",
													"statements": [
														{
															"nativeSrc": "15831:25:25",
															"nodeType": "YulAssignment",
															"src": "15831:25:25",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15854:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "15854:1:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15836:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "15836:17:25"
																},
																"nativeSrc": "15836:20:25",
																"nodeType": "YulFunctionCall",
																"src": "15836:20:25"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15831:1:25",
																	"nodeType": "YulIdentifier",
																	"src": "15831:1:25"
																}
															]
														},
														{
															"nativeSrc": "15865:25:25",
															"nodeType": "YulAssignment",
															"src": "15865:25:25",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15888:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "15888:1:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15870:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "15870:17:25"
																},
																"nativeSrc": "15870:20:25",
																"nodeType": "YulFunctionCall",
																"src": "15870:20:25"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15865:1:25",
																	"nodeType": "YulIdentifier",
																	"src": "15865:1:25"
																}
															]
														},
														{
															"nativeSrc": "15899:16:25",
															"nodeType": "YulAssignment",
															"src": "15899:16:25",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15910:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "15910:1:25"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15913:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "15913:1:25"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15906:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "15906:3:25"
																},
																"nativeSrc": "15906:9:25",
																"nodeType": "YulFunctionCall",
																"src": "15906:9:25"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15899:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "15899:3:25"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15939:22:25",
																"nodeType": "YulBlock",
																"src": "15939:22:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15941:16:25",
																				"nodeType": "YulIdentifier",
																				"src": "15941:16:25"
																			},
																			"nativeSrc": "15941:18:25",
																			"nodeType": "YulFunctionCall",
																			"src": "15941:18:25"
																		},
																		"nativeSrc": "15941:18:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "15941:18:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15931:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "15931:1:25"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15934:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "15934:3:25"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15928:2:25",
																	"nodeType": "YulIdentifier",
																	"src": "15928:2:25"
																},
																"nativeSrc": "15928:10:25",
																"nodeType": "YulFunctionCall",
																"src": "15928:10:25"
															},
															"nativeSrc": "15925:36:25",
															"nodeType": "YulIf",
															"src": "15925:36:25"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15777:191:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15808:1:25",
														"nodeType": "YulTypedName",
														"src": "15808:1:25",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15811:1:25",
														"nodeType": "YulTypedName",
														"src": "15811:1:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15817:3:25",
														"nodeType": "YulTypedName",
														"src": "15817:3:25",
														"type": ""
													}
												],
												"src": "15777:191:25"
											},
											{
												"body": {
													"nativeSrc": "16029:53:25",
													"nodeType": "YulBlock",
													"src": "16029:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16046:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "16046:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16069:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "16069:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "16051:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "16051:17:25"
																		},
																		"nativeSrc": "16051:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16051:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16039:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "16039:6:25"
																},
																"nativeSrc": "16039:37:25",
																"nodeType": "YulFunctionCall",
																"src": "16039:37:25"
															},
															"nativeSrc": "16039:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "16039:37:25"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "15974:108:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16017:5:25",
														"nodeType": "YulTypedName",
														"src": "16017:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16024:3:25",
														"nodeType": "YulTypedName",
														"src": "16024:3:25",
														"type": ""
													}
												],
												"src": "15974:108:25"
											},
											{
												"body": {
													"nativeSrc": "16141:52:25",
													"nodeType": "YulBlock",
													"src": "16141:52:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16158:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "16158:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16180:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "16180:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "16163:16:25",
																			"nodeType": "YulIdentifier",
																			"src": "16163:16:25"
																		},
																		"nativeSrc": "16163:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16163:23:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16151:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "16151:6:25"
																},
																"nativeSrc": "16151:36:25",
																"nodeType": "YulFunctionCall",
																"src": "16151:36:25"
															},
															"nativeSrc": "16151:36:25",
															"nodeType": "YulExpressionStatement",
															"src": "16151:36:25"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "16088:105:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16129:5:25",
														"nodeType": "YulTypedName",
														"src": "16129:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16136:3:25",
														"nodeType": "YulTypedName",
														"src": "16136:3:25",
														"type": ""
													}
												],
												"src": "16088:105:25"
											},
											{
												"body": {
													"nativeSrc": "16250:51:25",
													"nodeType": "YulBlock",
													"src": "16250:51:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16267:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "16267:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16288:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "16288:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "16272:15:25",
																			"nodeType": "YulIdentifier",
																			"src": "16272:15:25"
																		},
																		"nativeSrc": "16272:22:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16272:22:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16260:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "16260:6:25"
																},
																"nativeSrc": "16260:35:25",
																"nodeType": "YulFunctionCall",
																"src": "16260:35:25"
															},
															"nativeSrc": "16260:35:25",
															"nodeType": "YulExpressionStatement",
															"src": "16260:35:25"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24",
												"nativeSrc": "16199:102:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16238:5:25",
														"nodeType": "YulTypedName",
														"src": "16238:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16245:3:25",
														"nodeType": "YulTypedName",
														"src": "16245:3:25",
														"type": ""
													}
												],
												"src": "16199:102:25"
											},
											{
												"body": {
													"nativeSrc": "16362:53:25",
													"nodeType": "YulBlock",
													"src": "16362:53:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16379:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "16379:3:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16402:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "16402:5:25"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "16384:17:25",
																			"nodeType": "YulIdentifier",
																			"src": "16384:17:25"
																		},
																		"nativeSrc": "16384:24:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16384:24:25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16372:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "16372:6:25"
																},
																"nativeSrc": "16372:37:25",
																"nodeType": "YulFunctionCall",
																"src": "16372:37:25"
															},
															"nativeSrc": "16372:37:25",
															"nodeType": "YulExpressionStatement",
															"src": "16372:37:25"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "16307:108:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16350:5:25",
														"nodeType": "YulTypedName",
														"src": "16350:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16357:3:25",
														"nodeType": "YulTypedName",
														"src": "16357:3:25",
														"type": ""
													}
												],
												"src": "16307:108:25"
											},
											{
												"body": {
													"nativeSrc": "16645:2015:25",
													"nodeType": "YulBlock",
													"src": "16645:2015:25",
													"statements": [
														{
															"nativeSrc": "16655:28:25",
															"nodeType": "YulVariableDeclaration",
															"src": "16655:28:25",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16671:3:25",
																		"nodeType": "YulIdentifier",
																		"src": "16671:3:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16676:6:25",
																		"nodeType": "YulLiteral",
																		"src": "16676:6:25",
																		"type": "",
																		"value": "0x0160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16667:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "16667:3:25"
																},
																"nativeSrc": "16667:16:25",
																"nodeType": "YulFunctionCall",
																"src": "16667:16:25"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "16659:4:25",
																	"nodeType": "YulTypedName",
																	"src": "16659:4:25",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16693:166:25",
															"nodeType": "YulBlock",
															"src": "16693:166:25",
															"statements": [
																{
																	"nativeSrc": "16730:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16730:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16760:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "16760:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16767:4:25",
																						"nodeType": "YulLiteral",
																						"src": "16767:4:25",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16756:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "16756:3:25"
																				},
																				"nativeSrc": "16756:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "16756:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16750:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "16750:5:25"
																		},
																		"nativeSrc": "16750:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16750:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16734:12:25",
																			"nodeType": "YulTypedName",
																			"src": "16734:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16820:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "16820:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16838:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "16838:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16843:4:25",
																						"nodeType": "YulLiteral",
																						"src": "16843:4:25",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16834:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "16834:3:25"
																				},
																				"nativeSrc": "16834:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "16834:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "16786:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "16786:33:25"
																		},
																		"nativeSrc": "16786:63:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16786:63:25"
																	},
																	"nativeSrc": "16786:63:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "16786:63:25"
																}
															]
														},
														{
															"nativeSrc": "16869:166:25",
															"nodeType": "YulBlock",
															"src": "16869:166:25",
															"statements": [
																{
																	"nativeSrc": "16906:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16906:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16936:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "16936:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16943:4:25",
																						"nodeType": "YulLiteral",
																						"src": "16943:4:25",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16932:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "16932:3:25"
																				},
																				"nativeSrc": "16932:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "16932:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16926:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "16926:5:25"
																		},
																		"nativeSrc": "16926:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16926:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16910:12:25",
																			"nodeType": "YulTypedName",
																			"src": "16910:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16996:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "16996:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17014:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "17014:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17019:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17019:4:25",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17010:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17010:3:25"
																				},
																				"nativeSrc": "17010:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17010:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "16962:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "16962:33:25"
																		},
																		"nativeSrc": "16962:63:25",
																		"nodeType": "YulFunctionCall",
																		"src": "16962:63:25"
																	},
																	"nativeSrc": "16962:63:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "16962:63:25"
																}
															]
														},
														{
															"nativeSrc": "17045:161:25",
															"nodeType": "YulBlock",
															"src": "17045:161:25",
															"statements": [
																{
																	"nativeSrc": "17079:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17079:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17109:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "17109:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17116:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17116:4:25",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17105:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17105:3:25"
																				},
																				"nativeSrc": "17105:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17105:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17099:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "17099:5:25"
																		},
																		"nativeSrc": "17099:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17099:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17083:12:25",
																			"nodeType": "YulTypedName",
																			"src": "17083:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "17167:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "17167:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17185:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "17185:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17190:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17190:4:25",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17181:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17181:3:25"
																				},
																				"nativeSrc": "17181:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17181:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "17135:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "17135:31:25"
																		},
																		"nativeSrc": "17135:61:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17135:61:25"
																	},
																	"nativeSrc": "17135:61:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "17135:61:25"
																}
															]
														},
														{
															"nativeSrc": "17216:165:25",
															"nodeType": "YulBlock",
															"src": "17216:165:25",
															"statements": [
																{
																	"nativeSrc": "17256:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17256:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17286:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "17286:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17293:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17293:4:25",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17282:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17282:3:25"
																				},
																				"nativeSrc": "17282:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17282:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17276:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "17276:5:25"
																		},
																		"nativeSrc": "17276:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17276:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17260:12:25",
																			"nodeType": "YulTypedName",
																			"src": "17260:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "17342:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "17342:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17360:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "17360:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17365:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17365:4:25",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17356:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17356:3:25"
																				},
																				"nativeSrc": "17356:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17356:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_int24_to_t_int24",
																			"nativeSrc": "17312:29:25",
																			"nodeType": "YulIdentifier",
																			"src": "17312:29:25"
																		},
																		"nativeSrc": "17312:59:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17312:59:25"
																	},
																	"nativeSrc": "17312:59:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "17312:59:25"
																}
															]
														},
														{
															"nativeSrc": "17391:165:25",
															"nodeType": "YulBlock",
															"src": "17391:165:25",
															"statements": [
																{
																	"nativeSrc": "17431:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17431:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17461:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "17461:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17468:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17468:4:25",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17457:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17457:3:25"
																				},
																				"nativeSrc": "17457:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17457:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17451:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "17451:5:25"
																		},
																		"nativeSrc": "17451:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17451:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17435:12:25",
																			"nodeType": "YulTypedName",
																			"src": "17435:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "17517:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "17517:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17535:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "17535:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17540:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17540:4:25",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17531:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17531:3:25"
																				},
																				"nativeSrc": "17531:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17531:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_int24_to_t_int24",
																			"nativeSrc": "17487:29:25",
																			"nodeType": "YulIdentifier",
																			"src": "17487:29:25"
																		},
																		"nativeSrc": "17487:59:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17487:59:25"
																	},
																	"nativeSrc": "17487:59:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "17487:59:25"
																}
															]
														},
														{
															"nativeSrc": "17566:174:25",
															"nodeType": "YulBlock",
															"src": "17566:174:25",
															"statements": [
																{
																	"nativeSrc": "17611:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17611:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17641:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "17641:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17648:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17648:4:25",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17637:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17637:3:25"
																				},
																				"nativeSrc": "17637:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17637:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17631:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "17631:5:25"
																		},
																		"nativeSrc": "17631:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17631:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17615:12:25",
																			"nodeType": "YulTypedName",
																			"src": "17615:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "17701:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "17701:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17719:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "17719:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17724:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17724:4:25",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17715:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17715:3:25"
																				},
																				"nativeSrc": "17715:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17715:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "17667:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "17667:33:25"
																		},
																		"nativeSrc": "17667:63:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17667:63:25"
																	},
																	"nativeSrc": "17667:63:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "17667:63:25"
																}
															]
														},
														{
															"nativeSrc": "17750:174:25",
															"nodeType": "YulBlock",
															"src": "17750:174:25",
															"statements": [
																{
																	"nativeSrc": "17795:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17795:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17825:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "17825:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17832:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17832:4:25",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17821:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17821:3:25"
																				},
																				"nativeSrc": "17821:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17821:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17815:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "17815:5:25"
																		},
																		"nativeSrc": "17815:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17815:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17799:12:25",
																			"nodeType": "YulTypedName",
																			"src": "17799:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "17885:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "17885:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17903:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "17903:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17908:4:25",
																						"nodeType": "YulLiteral",
																						"src": "17908:4:25",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17899:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "17899:3:25"
																				},
																				"nativeSrc": "17899:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "17899:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "17851:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "17851:33:25"
																		},
																		"nativeSrc": "17851:63:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17851:63:25"
																	},
																	"nativeSrc": "17851:63:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "17851:63:25"
																}
															]
														},
														{
															"nativeSrc": "17934:170:25",
															"nodeType": "YulBlock",
															"src": "17934:170:25",
															"statements": [
																{
																	"nativeSrc": "17975:43:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17975:43:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18005:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "18005:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18012:4:25",
																						"nodeType": "YulLiteral",
																						"src": "18012:4:25",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18001:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18001:3:25"
																				},
																				"nativeSrc": "18001:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18001:16:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17995:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "17995:5:25"
																		},
																		"nativeSrc": "17995:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "17995:23:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17979:12:25",
																			"nodeType": "YulTypedName",
																			"src": "17979:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "18065:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "18065:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "18083:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "18083:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18088:4:25",
																						"nodeType": "YulLiteral",
																						"src": "18088:4:25",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18079:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18079:3:25"
																				},
																				"nativeSrc": "18079:14:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18079:14:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "18031:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "18031:33:25"
																		},
																		"nativeSrc": "18031:63:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18031:63:25"
																	},
																	"nativeSrc": "18031:63:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "18031:63:25"
																}
															]
														},
														{
															"nativeSrc": "18114:174:25",
															"nodeType": "YulBlock",
															"src": "18114:174:25",
															"statements": [
																{
																	"nativeSrc": "18155:45:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18155:45:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18185:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "18185:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18192:6:25",
																						"nodeType": "YulLiteral",
																						"src": "18192:6:25",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18181:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18181:3:25"
																				},
																				"nativeSrc": "18181:18:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18181:18:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18175:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "18175:5:25"
																		},
																		"nativeSrc": "18175:25:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18175:25:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "18159:12:25",
																			"nodeType": "YulTypedName",
																			"src": "18159:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "18247:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "18247:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "18265:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "18265:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18270:6:25",
																						"nodeType": "YulLiteral",
																						"src": "18270:6:25",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18261:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18261:3:25"
																				},
																				"nativeSrc": "18261:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18261:16:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "18213:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "18213:33:25"
																		},
																		"nativeSrc": "18213:65:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18213:65:25"
																	},
																	"nativeSrc": "18213:65:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "18213:65:25"
																}
															]
														},
														{
															"nativeSrc": "18298:173:25",
															"nodeType": "YulBlock",
															"src": "18298:173:25",
															"statements": [
																{
																	"nativeSrc": "18338:45:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18338:45:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18368:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "18368:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18375:6:25",
																						"nodeType": "YulLiteral",
																						"src": "18375:6:25",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18364:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18364:3:25"
																				},
																				"nativeSrc": "18364:18:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18364:18:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18358:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "18358:5:25"
																		},
																		"nativeSrc": "18358:25:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18358:25:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "18342:12:25",
																			"nodeType": "YulTypedName",
																			"src": "18342:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "18430:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "18430:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "18448:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "18448:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18453:6:25",
																						"nodeType": "YulLiteral",
																						"src": "18453:6:25",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18444:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18444:3:25"
																				},
																				"nativeSrc": "18444:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18444:16:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "18396:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "18396:33:25"
																		},
																		"nativeSrc": "18396:65:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18396:65:25"
																	},
																	"nativeSrc": "18396:65:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "18396:65:25"
																}
															]
														},
														{
															"nativeSrc": "18481:172:25",
															"nodeType": "YulBlock",
															"src": "18481:172:25",
															"statements": [
																{
																	"nativeSrc": "18520:45:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18520:45:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18550:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "18550:5:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18557:6:25",
																						"nodeType": "YulLiteral",
																						"src": "18557:6:25",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18546:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18546:3:25"
																				},
																				"nativeSrc": "18546:18:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18546:18:25"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18540:5:25",
																			"nodeType": "YulIdentifier",
																			"src": "18540:5:25"
																		},
																		"nativeSrc": "18540:25:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18540:25:25"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "18524:12:25",
																			"nodeType": "YulTypedName",
																			"src": "18524:12:25",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "18612:12:25",
																				"nodeType": "YulIdentifier",
																				"src": "18612:12:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "18630:3:25",
																						"nodeType": "YulIdentifier",
																						"src": "18630:3:25"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18635:6:25",
																						"nodeType": "YulLiteral",
																						"src": "18635:6:25",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18626:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "18626:3:25"
																				},
																				"nativeSrc": "18626:16:25",
																				"nodeType": "YulFunctionCall",
																				"src": "18626:16:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "18578:33:25",
																			"nodeType": "YulIdentifier",
																			"src": "18578:33:25"
																		},
																		"nativeSrc": "18578:65:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18578:65:25"
																	},
																	"nativeSrc": "18578:65:25",
																	"nodeType": "YulExpressionStatement",
																	"src": "18578:65:25"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_MintParams_$1406_memory_ptr_to_t_struct$_MintParams_$1406_memory_ptr_fromStack",
												"nativeSrc": "16523:2137:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16632:5:25",
														"nodeType": "YulTypedName",
														"src": "16632:5:25",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16639:3:25",
														"nodeType": "YulTypedName",
														"src": "16639:3:25",
														"type": ""
													}
												],
												"src": "16523:2137:25"
											},
											{
												"body": {
													"nativeSrc": "18820:181:25",
													"nodeType": "YulBlock",
													"src": "18820:181:25",
													"statements": [
														{
															"nativeSrc": "18830:27:25",
															"nodeType": "YulAssignment",
															"src": "18830:27:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18842:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "18842:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18853:3:25",
																		"nodeType": "YulLiteral",
																		"src": "18853:3:25",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18838:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "18838:3:25"
																},
																"nativeSrc": "18838:19:25",
																"nodeType": "YulFunctionCall",
																"src": "18838:19:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18830:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "18830:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18967:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "18967:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18980:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "18980:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18991:1:25",
																				"nodeType": "YulLiteral",
																				"src": "18991:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18976:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "18976:3:25"
																		},
																		"nativeSrc": "18976:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "18976:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_MintParams_$1406_memory_ptr_to_t_struct$_MintParams_$1406_memory_ptr_fromStack",
																	"nativeSrc": "18867:99:25",
																	"nodeType": "YulIdentifier",
																	"src": "18867:99:25"
																},
																"nativeSrc": "18867:127:25",
																"nodeType": "YulFunctionCall",
																"src": "18867:127:25"
															},
															"nativeSrc": "18867:127:25",
															"nodeType": "YulExpressionStatement",
															"src": "18867:127:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1406_memory_ptr__to_t_struct$_MintParams_$1406_memory_ptr__fromStack_reversed",
												"nativeSrc": "18666:335:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18792:9:25",
														"nodeType": "YulTypedName",
														"src": "18792:9:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18804:6:25",
														"nodeType": "YulTypedName",
														"src": "18804:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18815:4:25",
														"nodeType": "YulTypedName",
														"src": "18815:4:25",
														"type": ""
													}
												],
												"src": "18666:335:25"
											},
											{
												"body": {
													"nativeSrc": "19050:79:25",
													"nodeType": "YulBlock",
													"src": "19050:79:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "19107:16:25",
																"nodeType": "YulBlock",
																"src": "19107:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19116:1:25",
																					"nodeType": "YulLiteral",
																					"src": "19116:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19119:1:25",
																					"nodeType": "YulLiteral",
																					"src": "19119:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19109:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "19109:6:25"
																			},
																			"nativeSrc": "19109:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "19109:12:25"
																		},
																		"nativeSrc": "19109:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "19109:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19073:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "19073:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19098:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "19098:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "19080:17:25",
																					"nodeType": "YulIdentifier",
																					"src": "19080:17:25"
																				},
																				"nativeSrc": "19080:24:25",
																				"nodeType": "YulFunctionCall",
																				"src": "19080:24:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19070:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "19070:2:25"
																		},
																		"nativeSrc": "19070:35:25",
																		"nodeType": "YulFunctionCall",
																		"src": "19070:35:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19063:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "19063:6:25"
																},
																"nativeSrc": "19063:43:25",
																"nodeType": "YulFunctionCall",
																"src": "19063:43:25"
															},
															"nativeSrc": "19060:63:25",
															"nodeType": "YulIf",
															"src": "19060:63:25"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "19007:122:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19043:5:25",
														"nodeType": "YulTypedName",
														"src": "19043:5:25",
														"type": ""
													}
												],
												"src": "19007:122:25"
											},
											{
												"body": {
													"nativeSrc": "19198:80:25",
													"nodeType": "YulBlock",
													"src": "19198:80:25",
													"statements": [
														{
															"nativeSrc": "19208:22:25",
															"nodeType": "YulAssignment",
															"src": "19208:22:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19223:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "19223:6:25"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19217:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "19217:5:25"
																},
																"nativeSrc": "19217:13:25",
																"nodeType": "YulFunctionCall",
																"src": "19217:13:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19208:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "19208:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19266:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "19266:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "19239:26:25",
																	"nodeType": "YulIdentifier",
																	"src": "19239:26:25"
																},
																"nativeSrc": "19239:33:25",
																"nodeType": "YulFunctionCall",
																"src": "19239:33:25"
															},
															"nativeSrc": "19239:33:25",
															"nodeType": "YulExpressionStatement",
															"src": "19239:33:25"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nativeSrc": "19135:143:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19176:6:25",
														"nodeType": "YulTypedName",
														"src": "19176:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19184:3:25",
														"nodeType": "YulTypedName",
														"src": "19184:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19192:5:25",
														"nodeType": "YulTypedName",
														"src": "19192:5:25",
														"type": ""
													}
												],
												"src": "19135:143:25"
											},
											{
												"body": {
													"nativeSrc": "19412:692:25",
													"nodeType": "YulBlock",
													"src": "19412:692:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "19459:83:25",
																"nodeType": "YulBlock",
																"src": "19459:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19461:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "19461:77:25"
																			},
																			"nativeSrc": "19461:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "19461:79:25"
																		},
																		"nativeSrc": "19461:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "19461:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19433:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "19433:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19442:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "19442:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19429:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "19429:3:25"
																		},
																		"nativeSrc": "19429:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "19429:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19454:3:25",
																		"nodeType": "YulLiteral",
																		"src": "19454:3:25",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19425:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "19425:3:25"
																},
																"nativeSrc": "19425:33:25",
																"nodeType": "YulFunctionCall",
																"src": "19425:33:25"
															},
															"nativeSrc": "19422:120:25",
															"nodeType": "YulIf",
															"src": "19422:120:25"
														},
														{
															"nativeSrc": "19552:128:25",
															"nodeType": "YulBlock",
															"src": "19552:128:25",
															"statements": [
																{
																	"nativeSrc": "19567:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19567:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19581:1:25",
																		"nodeType": "YulLiteral",
																		"src": "19581:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19571:6:25",
																			"nodeType": "YulTypedName",
																			"src": "19571:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19596:74:25",
																	"nodeType": "YulAssignment",
																	"src": "19596:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19642:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "19642:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19653:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "19653:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19638:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "19638:3:25"
																				},
																				"nativeSrc": "19638:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "19638:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19662:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "19662:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19606:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "19606:31:25"
																		},
																		"nativeSrc": "19606:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "19606:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19596:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "19596:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19690:129:25",
															"nodeType": "YulBlock",
															"src": "19690:129:25",
															"statements": [
																{
																	"nativeSrc": "19705:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19705:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19719:2:25",
																		"nodeType": "YulLiteral",
																		"src": "19719:2:25",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19709:6:25",
																			"nodeType": "YulTypedName",
																			"src": "19709:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19735:74:25",
																	"nodeType": "YulAssignment",
																	"src": "19735:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19781:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "19781:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19792:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "19792:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19777:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "19777:3:25"
																				},
																				"nativeSrc": "19777:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "19777:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19801:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "19801:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nativeSrc": "19745:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "19745:31:25"
																		},
																		"nativeSrc": "19745:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "19745:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19735:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "19735:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19829:129:25",
															"nodeType": "YulBlock",
															"src": "19829:129:25",
															"statements": [
																{
																	"nativeSrc": "19844:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19844:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19858:2:25",
																		"nodeType": "YulLiteral",
																		"src": "19858:2:25",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19848:6:25",
																			"nodeType": "YulTypedName",
																			"src": "19848:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19874:74:25",
																	"nodeType": "YulAssignment",
																	"src": "19874:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19920:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "19920:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19931:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "19931:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19916:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "19916:3:25"
																				},
																				"nativeSrc": "19916:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "19916:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19940:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "19940:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19884:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "19884:31:25"
																		},
																		"nativeSrc": "19884:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "19884:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "19874:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "19874:6:25"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19968:129:25",
															"nodeType": "YulBlock",
															"src": "19968:129:25",
															"statements": [
																{
																	"nativeSrc": "19983:16:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19983:16:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19997:2:25",
																		"nodeType": "YulLiteral",
																		"src": "19997:2:25",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19987:6:25",
																			"nodeType": "YulTypedName",
																			"src": "19987:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20013:74:25",
																	"nodeType": "YulAssignment",
																	"src": "20013:74:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20059:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "20059:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20070:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "20070:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20055:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "20055:3:25"
																				},
																				"nativeSrc": "20055:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "20055:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20079:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "20079:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "20023:31:25",
																			"nodeType": "YulIdentifier",
																			"src": "20023:31:25"
																		},
																		"nativeSrc": "20023:64:25",
																		"nodeType": "YulFunctionCall",
																		"src": "20023:64:25"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "20013:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "20013:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory",
												"nativeSrc": "19284:820:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19358:9:25",
														"nodeType": "YulTypedName",
														"src": "19358:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19369:7:25",
														"nodeType": "YulTypedName",
														"src": "19369:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19381:6:25",
														"nodeType": "YulTypedName",
														"src": "19381:6:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19389:6:25",
														"nodeType": "YulTypedName",
														"src": "19389:6:25",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19397:6:25",
														"nodeType": "YulTypedName",
														"src": "19397:6:25",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19405:6:25",
														"nodeType": "YulTypedName",
														"src": "19405:6:25",
														"type": ""
													}
												],
												"src": "19284:820:25"
											},
											{
												"body": {
													"nativeSrc": "20155:149:25",
													"nodeType": "YulBlock",
													"src": "20155:149:25",
													"statements": [
														{
															"nativeSrc": "20165:25:25",
															"nodeType": "YulAssignment",
															"src": "20165:25:25",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20188:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "20188:1:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20170:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "20170:17:25"
																},
																"nativeSrc": "20170:20:25",
																"nodeType": "YulFunctionCall",
																"src": "20170:20:25"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20165:1:25",
																	"nodeType": "YulIdentifier",
																	"src": "20165:1:25"
																}
															]
														},
														{
															"nativeSrc": "20199:25:25",
															"nodeType": "YulAssignment",
															"src": "20199:25:25",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20222:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "20222:1:25"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20204:17:25",
																	"nodeType": "YulIdentifier",
																	"src": "20204:17:25"
																},
																"nativeSrc": "20204:20:25",
																"nodeType": "YulFunctionCall",
																"src": "20204:20:25"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20199:1:25",
																	"nodeType": "YulIdentifier",
																	"src": "20199:1:25"
																}
															]
														},
														{
															"nativeSrc": "20233:17:25",
															"nodeType": "YulAssignment",
															"src": "20233:17:25",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20245:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "20245:1:25"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20248:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "20248:1:25"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20241:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "20241:3:25"
																},
																"nativeSrc": "20241:9:25",
																"nodeType": "YulFunctionCall",
																"src": "20241:9:25"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20233:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "20233:4:25"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20275:22:25",
																"nodeType": "YulBlock",
																"src": "20275:22:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20277:16:25",
																				"nodeType": "YulIdentifier",
																				"src": "20277:16:25"
																			},
																			"nativeSrc": "20277:18:25",
																			"nodeType": "YulFunctionCall",
																			"src": "20277:18:25"
																		},
																		"nativeSrc": "20277:18:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "20277:18:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "20266:4:25",
																		"nodeType": "YulIdentifier",
																		"src": "20266:4:25"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "20272:1:25",
																		"nodeType": "YulIdentifier",
																		"src": "20272:1:25"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20263:2:25",
																	"nodeType": "YulIdentifier",
																	"src": "20263:2:25"
																},
																"nativeSrc": "20263:11:25",
																"nodeType": "YulFunctionCall",
																"src": "20263:11:25"
															},
															"nativeSrc": "20260:37:25",
															"nodeType": "YulIf",
															"src": "20260:37:25"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "20110:194:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20141:1:25",
														"nodeType": "YulTypedName",
														"src": "20141:1:25",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20144:1:25",
														"nodeType": "YulTypedName",
														"src": "20144:1:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20150:4:25",
														"nodeType": "YulTypedName",
														"src": "20150:4:25",
														"type": ""
													}
												],
												"src": "20110:194:25"
											},
											{
												"body": {
													"nativeSrc": "20436:206:25",
													"nodeType": "YulBlock",
													"src": "20436:206:25",
													"statements": [
														{
															"nativeSrc": "20446:26:25",
															"nodeType": "YulAssignment",
															"src": "20446:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20458:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "20458:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20469:2:25",
																		"nodeType": "YulLiteral",
																		"src": "20469:2:25",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20454:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "20454:3:25"
																},
																"nativeSrc": "20454:18:25",
																"nodeType": "YulFunctionCall",
																"src": "20454:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20446:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "20446:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20526:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "20526:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20539:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "20539:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20550:1:25",
																				"nodeType": "YulLiteral",
																				"src": "20550:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20535:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "20535:3:25"
																		},
																		"nativeSrc": "20535:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "20535:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20482:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "20482:43:25"
																},
																"nativeSrc": "20482:71:25",
																"nodeType": "YulFunctionCall",
																"src": "20482:71:25"
															},
															"nativeSrc": "20482:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "20482:71:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20607:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "20607:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20620:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "20620:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20631:2:25",
																				"nodeType": "YulLiteral",
																				"src": "20631:2:25",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20616:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "20616:3:25"
																		},
																		"nativeSrc": "20616:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "20616:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20563:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "20563:43:25"
																},
																"nativeSrc": "20563:72:25",
																"nodeType": "YulFunctionCall",
																"src": "20563:72:25"
															},
															"nativeSrc": "20563:72:25",
															"nodeType": "YulExpressionStatement",
															"src": "20563:72:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20310:332:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20400:9:25",
														"nodeType": "YulTypedName",
														"src": "20400:9:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20412:6:25",
														"nodeType": "YulTypedName",
														"src": "20412:6:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20420:6:25",
														"nodeType": "YulTypedName",
														"src": "20420:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20431:4:25",
														"nodeType": "YulTypedName",
														"src": "20431:4:25",
														"type": ""
													}
												],
												"src": "20310:332:25"
											},
											{
												"body": {
													"nativeSrc": "20688:76:25",
													"nodeType": "YulBlock",
													"src": "20688:76:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "20742:16:25",
																"nodeType": "YulBlock",
																"src": "20742:16:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20751:1:25",
																					"nodeType": "YulLiteral",
																					"src": "20751:1:25",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20754:1:25",
																					"nodeType": "YulLiteral",
																					"src": "20754:1:25",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20744:6:25",
																				"nodeType": "YulIdentifier",
																				"src": "20744:6:25"
																			},
																			"nativeSrc": "20744:12:25",
																			"nodeType": "YulFunctionCall",
																			"src": "20744:12:25"
																		},
																		"nativeSrc": "20744:12:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "20744:12:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20711:5:25",
																				"nodeType": "YulIdentifier",
																				"src": "20711:5:25"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20733:5:25",
																						"nodeType": "YulIdentifier",
																						"src": "20733:5:25"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "20718:14:25",
																					"nodeType": "YulIdentifier",
																					"src": "20718:14:25"
																				},
																				"nativeSrc": "20718:21:25",
																				"nodeType": "YulFunctionCall",
																				"src": "20718:21:25"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20708:2:25",
																			"nodeType": "YulIdentifier",
																			"src": "20708:2:25"
																		},
																		"nativeSrc": "20708:32:25",
																		"nodeType": "YulFunctionCall",
																		"src": "20708:32:25"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20701:6:25",
																	"nodeType": "YulIdentifier",
																	"src": "20701:6:25"
																},
																"nativeSrc": "20701:40:25",
																"nodeType": "YulFunctionCall",
																"src": "20701:40:25"
															},
															"nativeSrc": "20698:60:25",
															"nodeType": "YulIf",
															"src": "20698:60:25"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20648:116:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20681:5:25",
														"nodeType": "YulTypedName",
														"src": "20681:5:25",
														"type": ""
													}
												],
												"src": "20648:116:25"
											},
											{
												"body": {
													"nativeSrc": "20830:77:25",
													"nodeType": "YulBlock",
													"src": "20830:77:25",
													"statements": [
														{
															"nativeSrc": "20840:22:25",
															"nodeType": "YulAssignment",
															"src": "20840:22:25",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20855:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "20855:6:25"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20849:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "20849:5:25"
																},
																"nativeSrc": "20849:13:25",
																"nodeType": "YulFunctionCall",
																"src": "20849:13:25"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20840:5:25",
																	"nodeType": "YulIdentifier",
																	"src": "20840:5:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20895:5:25",
																		"nodeType": "YulIdentifier",
																		"src": "20895:5:25"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20871:23:25",
																	"nodeType": "YulIdentifier",
																	"src": "20871:23:25"
																},
																"nativeSrc": "20871:30:25",
																"nodeType": "YulFunctionCall",
																"src": "20871:30:25"
															},
															"nativeSrc": "20871:30:25",
															"nodeType": "YulExpressionStatement",
															"src": "20871:30:25"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20770:137:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20808:6:25",
														"nodeType": "YulTypedName",
														"src": "20808:6:25",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20816:3:25",
														"nodeType": "YulTypedName",
														"src": "20816:3:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20824:5:25",
														"nodeType": "YulTypedName",
														"src": "20824:5:25",
														"type": ""
													}
												],
												"src": "20770:137:25"
											},
											{
												"body": {
													"nativeSrc": "20987:271:25",
													"nodeType": "YulBlock",
													"src": "20987:271:25",
													"statements": [
														{
															"body": {
																"nativeSrc": "21033:83:25",
																"nodeType": "YulBlock",
																"src": "21033:83:25",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21035:77:25",
																				"nodeType": "YulIdentifier",
																				"src": "21035:77:25"
																			},
																			"nativeSrc": "21035:79:25",
																			"nodeType": "YulFunctionCall",
																			"src": "21035:79:25"
																		},
																		"nativeSrc": "21035:79:25",
																		"nodeType": "YulExpressionStatement",
																		"src": "21035:79:25"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21008:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "21008:7:25"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21017:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "21017:9:25"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21004:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "21004:3:25"
																		},
																		"nativeSrc": "21004:23:25",
																		"nodeType": "YulFunctionCall",
																		"src": "21004:23:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21029:2:25",
																		"nodeType": "YulLiteral",
																		"src": "21029:2:25",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21000:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "21000:3:25"
																},
																"nativeSrc": "21000:32:25",
																"nodeType": "YulFunctionCall",
																"src": "21000:32:25"
															},
															"nativeSrc": "20997:119:25",
															"nodeType": "YulIf",
															"src": "20997:119:25"
														},
														{
															"nativeSrc": "21126:125:25",
															"nodeType": "YulBlock",
															"src": "21126:125:25",
															"statements": [
																{
																	"nativeSrc": "21141:15:25",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21141:15:25",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21155:1:25",
																		"nodeType": "YulLiteral",
																		"src": "21155:1:25",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21145:6:25",
																			"nodeType": "YulTypedName",
																			"src": "21145:6:25",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21170:71:25",
																	"nodeType": "YulAssignment",
																	"src": "21170:71:25",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21213:9:25",
																						"nodeType": "YulIdentifier",
																						"src": "21213:9:25"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21224:6:25",
																						"nodeType": "YulIdentifier",
																						"src": "21224:6:25"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21209:3:25",
																					"nodeType": "YulIdentifier",
																					"src": "21209:3:25"
																				},
																				"nativeSrc": "21209:22:25",
																				"nodeType": "YulFunctionCall",
																				"src": "21209:22:25"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21233:7:25",
																				"nodeType": "YulIdentifier",
																				"src": "21233:7:25"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "21180:28:25",
																			"nodeType": "YulIdentifier",
																			"src": "21180:28:25"
																		},
																		"nativeSrc": "21180:61:25",
																		"nodeType": "YulFunctionCall",
																		"src": "21180:61:25"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21170:6:25",
																			"nodeType": "YulIdentifier",
																			"src": "21170:6:25"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20913:345:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20957:9:25",
														"nodeType": "YulTypedName",
														"src": "20957:9:25",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20968:7:25",
														"nodeType": "YulTypedName",
														"src": "20968:7:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20980:6:25",
														"nodeType": "YulTypedName",
														"src": "20980:6:25",
														"type": ""
													}
												],
												"src": "20913:345:25"
											},
											{
												"body": {
													"nativeSrc": "21390:206:25",
													"nodeType": "YulBlock",
													"src": "21390:206:25",
													"statements": [
														{
															"nativeSrc": "21400:26:25",
															"nodeType": "YulAssignment",
															"src": "21400:26:25",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21412:9:25",
																		"nodeType": "YulIdentifier",
																		"src": "21412:9:25"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21423:2:25",
																		"nodeType": "YulLiteral",
																		"src": "21423:2:25",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21408:3:25",
																	"nodeType": "YulIdentifier",
																	"src": "21408:3:25"
																},
																"nativeSrc": "21408:18:25",
																"nodeType": "YulFunctionCall",
																"src": "21408:18:25"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21400:4:25",
																	"nodeType": "YulIdentifier",
																	"src": "21400:4:25"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21480:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "21480:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21493:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "21493:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21504:1:25",
																				"nodeType": "YulLiteral",
																				"src": "21504:1:25",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21489:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "21489:3:25"
																		},
																		"nativeSrc": "21489:17:25",
																		"nodeType": "YulFunctionCall",
																		"src": "21489:17:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21436:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "21436:43:25"
																},
																"nativeSrc": "21436:71:25",
																"nodeType": "YulFunctionCall",
																"src": "21436:71:25"
															},
															"nativeSrc": "21436:71:25",
															"nodeType": "YulExpressionStatement",
															"src": "21436:71:25"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21561:6:25",
																		"nodeType": "YulIdentifier",
																		"src": "21561:6:25"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21574:9:25",
																				"nodeType": "YulIdentifier",
																				"src": "21574:9:25"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21585:2:25",
																				"nodeType": "YulLiteral",
																				"src": "21585:2:25",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21570:3:25",
																			"nodeType": "YulIdentifier",
																			"src": "21570:3:25"
																		},
																		"nativeSrc": "21570:18:25",
																		"nodeType": "YulFunctionCall",
																		"src": "21570:18:25"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "21517:43:25",
																	"nodeType": "YulIdentifier",
																	"src": "21517:43:25"
																},
																"nativeSrc": "21517:72:25",
																"nodeType": "YulFunctionCall",
																"src": "21517:72:25"
															},
															"nativeSrc": "21517:72:25",
															"nodeType": "YulExpressionStatement",
															"src": "21517:72:25"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "21264:332:25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21354:9:25",
														"nodeType": "YulTypedName",
														"src": "21354:9:25",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21366:6:25",
														"nodeType": "YulTypedName",
														"src": "21366:6:25",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21374:6:25",
														"nodeType": "YulTypedName",
														"src": "21374:6:25",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21385:4:25",
														"nodeType": "YulTypedName",
														"src": "21385:4:25",
														"type": ""
													}
												],
												"src": "21264:332:25"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_INonfungiblePositionManager_$1496_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_INonfungiblePositionManager_$1496_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INonfungiblePositionManager_$1496_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1496__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INonfungiblePositionManager_$1496_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24t_uint160(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint160(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_int24t_int24(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function convert_t_contract$_IUniswapV3Factory_$782_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV3Factory_$782_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV3Factory_$782_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV3Factory_$782__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV3Factory_$782_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient TokenA\")\n\n    }\n\n    function abi_encode_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient TokenB\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_int24_to_t_int24(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct INonfungiblePositionManager.MintParams -> struct INonfungiblePositionManager.MintParams\n    function abi_encode_t_struct$_MintParams_$1406_memory_ptr_to_t_struct$_MintParams_$1406_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tickLower\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tickUpper\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amount0Desired\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amount1Desired\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // amount0Min\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // amount1Min\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_MintParams_$1406_memory_ptr__to_t_struct$_MintParams_$1406_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_struct$_MintParams_$1406_memory_ptr_to_t_struct$_MintParams_$1406_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 25,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806391d148541161006f57806391d148541461019c578063a217fddf146101cc578063afbce84e146101ea578063c45a01551461021d578063d547741f1461023b578063ecf4daa714610257576100b2565b806301ffc9a7146100b6578063248a9ca3146100e65780632f2ff15d1461011657806336568abe14610132578063791b98bc1461014e5780638e909e511461016c575b5f80fd5b6100d060048036038101906100cb9190610ecc565b610273565b6040516100dd9190610f11565b60405180910390f35b61010060048036038101906100fb9190610f5d565b6102ec565b60405161010d9190610f97565b60405180910390f35b610130600480360381019061012b919061100a565b610308565b005b61014c6004803603810190610147919061100a565b61032a565b005b6101566103a5565b60405161016391906110a3565b60405180910390f35b6101866004803603810190610181919061111e565b6103ca565b6040516101939190611191565b60405180910390f35b6101b660048036038101906101b1919061100a565b6105e3565b6040516101c39190610f11565b60405180910390f35b6101d4610646565b6040516101e19190610f97565b60405180910390f35b61020460048036038101906101ff9190611213565b61064c565b60405161021494939291906112e9565b60405180910390f35b610225610a45565b604051610232919061134c565b60405180910390f35b6102556004803603810190610250919061100a565b610a6a565b005b610271600480360381019061026c9190611365565b610a8c565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102e557506102e482610bcc565b5b9050919050565b5f805f8381526020019081526020015f20600101549050919050565b610311826102ec565b61031a81610c35565b6103248383610c49565b50505050565b610332610d32565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610396576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a08282610d39565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8073ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631698ee828787876040518463ffffffff1660e01b8152600401610440939291906113d8565b602060405180830381865afa15801561045b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061047f9190611421565b73ffffffffffffffffffffffffffffffffffffffff16146104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc906114a6565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a16712958686866040518463ffffffff1660e01b8152600401610533939291906113d8565b6020604051808303815f875af115801561054f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105739190611421565b90508073ffffffffffffffffffffffffffffffffffffffff1663f637731d836040518263ffffffff1660e01b81526004016105ae91906114d3565b5f604051808303815f87803b1580156105c5575f80fd5b505af11580156105d7573d5f803e3d5ffd5b50505050949350505050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f805f80878b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161068a9190611191565b602060405180830381865afa1580156106a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c99190611500565b101561070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190611575565b60405180910390fd5b868a73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107449190611191565b602060405180830381865afa15801561075f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107839190611500565b10156107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb906115dd565b60405180910390fd5b5f6040518061016001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b62ffffff1681526020018860020b81526020018760020b81526020018a81526020018981526020015f81526020015f81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016078426108679190611628565b815250905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b81526004016108c69190611776565b6080604051808303815f875af11580156108e2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061090691906117ba565b80955081965082975083985050505050828911156109a6578b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33858c610947919061181e565b6040518363ffffffff1660e01b8152600401610964929190611851565b6020604051808303815f875af1158015610980573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109a491906118a2565b505b81881115610a36578a73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33848b6109d7919061181e565b6040518363ffffffff1660e01b81526004016109f4929190611851565b6020604051808303815f875af1158015610a10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3491906118a2565b505b50975097509750979350505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a73826102ec565b610a7c81610c35565b610a868383610d39565b50505050565b8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610ae8929190611851565b6020604051808303815f875af1158015610b04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2891906118a2565b508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610b85929190611851565b6020604051808303815f875af1158015610ba1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc591906118a2565b5050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c4681610c41610d32565b610e22565b50565b5f610c5483836105e3565b610d285760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610cc5610d32565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610d2c565b5f90505b92915050565b5f33905090565b5f610d4483836105e3565b15610e18575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610db5610d32565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e1c565b5f90505b92915050565b610e2c82826105e3565b610e6f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610e669291906118cd565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610eab81610e77565b8114610eb5575f80fd5b50565b5f81359050610ec681610ea2565b92915050565b5f60208284031215610ee157610ee0610e73565b5b5f610eee84828501610eb8565b91505092915050565b5f8115159050919050565b610f0b81610ef7565b82525050565b5f602082019050610f245f830184610f02565b92915050565b5f819050919050565b610f3c81610f2a565b8114610f46575f80fd5b50565b5f81359050610f5781610f33565b92915050565b5f60208284031215610f7257610f71610e73565b5b5f610f7f84828501610f49565b91505092915050565b610f9181610f2a565b82525050565b5f602082019050610faa5f830184610f88565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fd982610fb0565b9050919050565b610fe981610fcf565b8114610ff3575f80fd5b50565b5f8135905061100481610fe0565b92915050565b5f80604083850312156110205761101f610e73565b5b5f61102d85828601610f49565b925050602061103e85828601610ff6565b9150509250929050565b5f819050919050565b5f61106b61106661106184610fb0565b611048565b610fb0565b9050919050565b5f61107c82611051565b9050919050565b5f61108d82611072565b9050919050565b61109d81611083565b82525050565b5f6020820190506110b65f830184611094565b92915050565b5f62ffffff82169050919050565b6110d3816110bc565b81146110dd575f80fd5b50565b5f813590506110ee816110ca565b92915050565b6110fd81610fb0565b8114611107575f80fd5b50565b5f81359050611118816110f4565b92915050565b5f805f806080858703121561113657611135610e73565b5b5f61114387828801610ff6565b945050602061115487828801610ff6565b9350506040611165878288016110e0565b92505060606111768782880161110a565b91505092959194509250565b61118b81610fcf565b82525050565b5f6020820190506111a45f830184611182565b92915050565b5f819050919050565b6111bc816111aa565b81146111c6575f80fd5b50565b5f813590506111d7816111b3565b92915050565b5f8160020b9050919050565b6111f2816111dd565b81146111fc575f80fd5b50565b5f8135905061120d816111e9565b92915050565b5f805f805f805f60e0888a03121561122e5761122d610e73565b5b5f61123b8a828b01610ff6565b975050602061124c8a828b01610ff6565b965050604061125d8a828b016110e0565b955050606061126e8a828b016111c9565b945050608061127f8a828b016111c9565b93505060a06112908a828b016111ff565b92505060c06112a18a828b016111ff565b91505092959891949750929550565b6112b9816111aa565b82525050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6112e3816112bf565b82525050565b5f6080820190506112fc5f8301876112b0565b61130960208301866112da565b61131660408301856112b0565b61132360608301846112b0565b95945050505050565b5f61133682611072565b9050919050565b6113468161132c565b82525050565b5f60208201905061135f5f83018461133d565b92915050565b5f805f806080858703121561137d5761137c610e73565b5b5f61138a87828801610ff6565b945050602061139b87828801610ff6565b93505060406113ac878288016111c9565b92505060606113bd878288016111c9565b91505092959194509250565b6113d2816110bc565b82525050565b5f6060820190506113eb5f830186611182565b6113f86020830185611182565b61140560408301846113c9565b949350505050565b5f8151905061141b81610fe0565b92915050565b5f6020828403121561143657611435610e73565b5b5f6114438482850161140d565b91505092915050565b5f82825260208201905092915050565b7f506f6f6c20616c726561647920657869737473000000000000000000000000005f82015250565b5f61149060138361144c565b915061149b8261145c565b602082019050919050565b5f6020820190508181035f8301526114bd81611484565b9050919050565b6114cd81610fb0565b82525050565b5f6020820190506114e65f8301846114c4565b92915050565b5f815190506114fa816111b3565b92915050565b5f6020828403121561151557611514610e73565b5b5f611522848285016114ec565b91505092915050565b7f496e73756666696369656e7420546f6b656e41000000000000000000000000005f82015250565b5f61155f60138361144c565b915061156a8261152b565b602082019050919050565b5f6020820190508181035f83015261158c81611553565b9050919050565b7f496e73756666696369656e7420546f6b656e42000000000000000000000000005f82015250565b5f6115c760138361144c565b91506115d282611593565b602082019050919050565b5f6020820190508181035f8301526115f4816115bb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611632826111aa565b915061163d836111aa565b9250828201905080821115611655576116546115fb565b5b92915050565b61166481610fcf565b82525050565b611673816110bc565b82525050565b611682816111dd565b82525050565b611691816111aa565b82525050565b61016082015f8201516116ac5f85018261165b565b5060208201516116bf602085018261165b565b5060408201516116d2604085018261166a565b5060608201516116e56060850182611679565b5060808201516116f86080850182611679565b5060a082015161170b60a0850182611688565b5060c082015161171e60c0850182611688565b5060e082015161173160e0850182611688565b50610100820151611746610100850182611688565b5061012082015161175b61012085018261165b565b50610140820151611770610140850182611688565b50505050565b5f6101608201905061178a5f830184611697565b92915050565b611799816112bf565b81146117a3575f80fd5b50565b5f815190506117b481611790565b92915050565b5f805f80608085870312156117d2576117d1610e73565b5b5f6117df878288016114ec565b94505060206117f0878288016117a6565b9350506040611801878288016114ec565b9250506060611812878288016114ec565b91505092959194509250565b5f611828826111aa565b9150611833836111aa565b925082820390508181111561184b5761184a6115fb565b5b92915050565b5f6040820190506118645f830185611182565b61187160208301846112b0565b9392505050565b61188181610ef7565b811461188b575f80fd5b50565b5f8151905061189c81611878565b92915050565b5f602082840312156118b7576118b6610e73565b5b5f6118c48482850161188e565b91505092915050565b5f6040820190506118e05f830185611182565b6118ed6020830184610f88565b939250505056fea26469706673582212202746b90d6488fee63cc53a1ddf1f3eff0c8214ec5407ec25de9921348485824f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xAFBCE84E EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xECF4DAA7 EQ PUSH2 0x257 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x791B98BC EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8E909E51 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2E5 JUMPI POP PUSH2 0x2E4 DUP3 PUSH2 0xBCC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x311 DUP3 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x324 DUP4 DUP4 PUSH2 0xC49 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x332 PUSH2 0xD32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A0 DUP3 DUP3 PUSH2 0xD39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1671295 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF637731D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x14D3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP8 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST LT ISZERO PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BB SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x78 TIMESTAMP PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP DUP4 SWAP9 POP POP POP POP POP DUP3 DUP10 GT ISZERO PUSH2 0x9A6 JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 DUP13 PUSH2 0x947 SWAP2 SWAP1 PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP JUMPDEST DUP2 DUP9 GT ISZERO PUSH2 0xA36 JUMPI DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP12 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F4 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP JUMPDEST POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA73 DUP3 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xA86 DUP4 DUP4 PUSH2 0xD39 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC5 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xC41 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xC54 DUP4 DUP4 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0xD28 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCC5 PUSH2 0xD32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD2C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xD44 DUP4 DUP4 PUSH2 0x5E3 JUMP JUMPDEST ISZERO PUSH2 0xE18 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDB5 PUSH2 0xD32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE1C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE2C DUP3 DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0xE6F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP3 SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAB DUP2 PUSH2 0xE77 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC6 DUP2 PUSH2 0xEA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEEE DUP5 DUP3 DUP6 ADD PUSH2 0xEB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0B DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF24 PUSH0 DUP4 ADD DUP5 PUSH2 0xF02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3C DUP2 PUSH2 0xF2A JUMP JUMPDEST DUP2 EQ PUSH2 0xF46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF57 DUP2 PUSH2 0xF33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF72 JUMPI PUSH2 0xF71 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF7F DUP5 DUP3 DUP6 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF91 DUP2 PUSH2 0xF2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAA PUSH0 DUP4 ADD DUP5 PUSH2 0xF88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD9 DUP3 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP2 EQ PUSH2 0xFF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1004 DUP2 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x102D DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x103E DUP6 DUP3 DUP7 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x106B PUSH2 0x1066 PUSH2 0x1061 DUP5 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x107C DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x108D DUP3 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109D DUP2 PUSH2 0x1083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D3 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP2 EQ PUSH2 0x10DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EE DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FD DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1118 DUP2 PUSH2 0x10F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1143 DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1154 DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1165 DUP8 DUP3 DUP9 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1176 DUP8 DUP3 DUP9 ADD PUSH2 0x110A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x118B DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BC DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP2 EQ PUSH2 0x11C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D7 DUP2 PUSH2 0x11B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F2 DUP2 PUSH2 0x11DD JUMP JUMPDEST DUP2 EQ PUSH2 0x11FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120D DUP2 PUSH2 0x11E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x123B DUP11 DUP3 DUP12 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x124C DUP11 DUP3 DUP12 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x125D DUP11 DUP3 DUP12 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x126E DUP11 DUP3 DUP12 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x127F DUP11 DUP3 DUP12 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1290 DUP11 DUP3 DUP12 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x12A1 DUP11 DUP3 DUP12 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x12B9 DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E3 DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH0 DUP4 ADD DUP8 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1309 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x1316 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x1323 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1336 DUP3 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1346 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135F PUSH0 DUP4 ADD DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x137D JUMPI PUSH2 0x137C PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138A DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x139B DUP8 DUP3 DUP9 ADD PUSH2 0xFF6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x13AC DUP8 DUP3 DUP9 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x13BD DUP8 DUP3 DUP9 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13EB PUSH0 DUP4 ADD DUP7 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x13F8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x1405 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x141B DUP2 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH2 0x1435 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1443 DUP5 DUP3 DUP6 ADD PUSH2 0x140D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F6F6C20616C72656164792065786973747300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1490 PUSH1 0x13 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x149B DUP3 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BD DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x14FA DUP2 PUSH2 0x11B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1515 JUMPI PUSH2 0x1514 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1522 DUP5 DUP3 DUP6 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E4100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x155F PUSH1 0x13 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x156A DUP3 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158C DUP2 PUSH2 0x1553 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E4200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15C7 PUSH1 0x13 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x15D2 DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15F4 DUP2 PUSH2 0x15BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1632 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x163D DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1664 DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1673 DUP2 PUSH2 0x10BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1682 DUP2 PUSH2 0x11DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1691 DUP2 PUSH2 0x11AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16AC PUSH0 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16BF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16D2 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x166A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x16E5 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x16F8 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x170B PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x171E PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1731 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x1746 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x175B PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x1770 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x1688 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP5 PUSH2 0x1697 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1799 DUP2 PUSH2 0x12BF JUMP JUMPDEST DUP2 EQ PUSH2 0x17A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17B4 DUP2 PUSH2 0x1790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17D2 JUMPI PUSH2 0x17D1 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17DF DUP8 DUP3 DUP9 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x17F0 DUP8 DUP3 DUP9 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1801 DUP8 DUP3 DUP9 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1812 DUP8 DUP3 DUP9 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH2 0x1828 DUP3 PUSH2 0x11AA JUMP JUMPDEST SWAP2 POP PUSH2 0x1833 DUP4 PUSH2 0x11AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1864 PUSH0 DUP4 ADD DUP6 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x1871 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x188B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x189C DUP2 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B7 JUMPI PUSH2 0x18B6 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C4 DUP5 DUP3 DUP6 ADD PUSH2 0x188E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x18ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 CHAINID 0xB9 0xD PUSH5 0x88FEE63CC5 GASPRICE SAR 0xDF 0x1F RETURNDATACOPY SELFDESTRUCT 0xC DUP3 EQ 0xEC SLOAD SMOD 0xEC 0x25 0xDE SWAP10 0x21 CALLVALUE DUP5 DUP6 DUP3 0x4F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "396:2538:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;454:50:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1651:1281:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;510:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;824:239:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;454:50:24:-;;;;;;;;;;;;;:::o;1201:362::-;1306:12;1386:1;1338:50;;:7;;;;;;;;;;;:15;;;1354:6;1362;1370:3;1338:36;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;;1330:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1429:7;;;;;;;;;;;:18;;;1448:6;1456;1464:3;1429:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1422:46;;1493:4;1478:31;;;1510:12;1478:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:362;;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1651:1281:24:-;1866:15;1883:17;1902:15;1919;1997:7;1961:6;1954:24;;;1987:4;1954:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;1946:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2089:7;2053:6;2046:24;;;2079:4;2046:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;2038:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2131:52;2186:404;;;;;;;;2247:6;2186:404;;;;;;2275:6;2186:404;;;;;;2300:3;2186:404;;;;;;2328:9;2186:404;;;;;;2362:9;2186:404;;;;;;2401:7;2186:404;;;;2438:7;2186:404;;;;2471:1;2186:404;;;;2498:1;2186:404;;;;2524:10;2186:404;;;;;;2576:3;2558:15;:21;;;;:::i;:::-;2186:404;;;2131:459;;2642:15;;;;;;;;;;;:20;;;2663:6;2642:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2601:69;;;;;;;;;;;;;;;;2727:7;2717;:17;2713:102;;;2757:6;2750:23;;;2774:10;2796:7;2786;:17;;;;:::i;:::-;2750:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2713:102;2838:7;2828;:17;2824:102;;;2868:6;2861:23;;;2885:10;2907:7;2897;:17;;;;:::i;:::-;2861:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2824:102;1936:996;1651:1281;;;;;;;;;;;;:::o;510:32::-;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;824:239:24:-;939:6;932:22;;;963:15;;;;;;;;;;;981:7;932:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1006:6;999:22;;;1030:15;;;;;;;;;;;1048:7;999:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;824:239;;;;:::o;763:146:7:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:25:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:60::-;3576:3;3597:5;3590:12;;3548:60;;;:::o;3614:142::-;3664:9;3697:53;3715:34;3724:24;3742:5;3724:24;:::i;:::-;3715:34;:::i;:::-;3697:53;:::i;:::-;3684:66;;3614:142;;;:::o;3762:126::-;3812:9;3845:37;3876:5;3845:37;:::i;:::-;3832:50;;3762:126;;;:::o;3894:162::-;3980:9;4013:37;4044:5;4013:37;:::i;:::-;4000:50;;3894:162;;;:::o;4062:203::-;4185:73;4252:5;4185:73;:::i;:::-;4180:3;4173:86;4062:203;;:::o;4271:294::-;4400:4;4438:2;4427:9;4423:18;4415:26;;4451:107;4555:1;4544:9;4540:17;4531:6;4451:107;:::i;:::-;4271:294;;;;:::o;4571:91::-;4607:7;4647:8;4640:5;4636:20;4625:31;;4571:91;;;:::o;4668:120::-;4740:23;4757:5;4740:23;:::i;:::-;4733:5;4730:34;4720:62;;4778:1;4775;4768:12;4720:62;4668:120;:::o;4794:137::-;4839:5;4877:6;4864:20;4855:29;;4893:32;4919:5;4893:32;:::i;:::-;4794:137;;;;:::o;4937:122::-;5010:24;5028:5;5010:24;:::i;:::-;5003:5;5000:35;4990:63;;5049:1;5046;5039:12;4990:63;4937:122;:::o;5065:139::-;5111:5;5149:6;5136:20;5127:29;;5165:33;5192:5;5165:33;:::i;:::-;5065:139;;;;:::o;5210:763::-;5295:6;5303;5311;5319;5368:3;5356:9;5347:7;5343:23;5339:33;5336:120;;;5375:79;;:::i;:::-;5336:120;5495:1;5520:53;5565:7;5556:6;5545:9;5541:22;5520:53;:::i;:::-;5510:63;;5466:117;5622:2;5648:53;5693:7;5684:6;5673:9;5669:22;5648:53;:::i;:::-;5638:63;;5593:118;5750:2;5776:52;5820:7;5811:6;5800:9;5796:22;5776:52;:::i;:::-;5766:62;;5721:117;5877:2;5903:53;5948:7;5939:6;5928:9;5924:22;5903:53;:::i;:::-;5893:63;;5848:118;5210:763;;;;;;;:::o;5979:118::-;6066:24;6084:5;6066:24;:::i;:::-;6061:3;6054:37;5979:118;;:::o;6103:222::-;6196:4;6234:2;6223:9;6219:18;6211:26;;6247:71;6315:1;6304:9;6300:17;6291:6;6247:71;:::i;:::-;6103:222;;;;:::o;6331:77::-;6368:7;6397:5;6386:16;;6331:77;;;:::o;6414:122::-;6487:24;6505:5;6487:24;:::i;:::-;6480:5;6477:35;6467:63;;6526:1;6523;6516:12;6467:63;6414:122;:::o;6542:139::-;6588:5;6626:6;6613:20;6604:29;;6642:33;6669:5;6642:33;:::i;:::-;6542:139;;;;:::o;6687:90::-;6722:7;6765:5;6762:1;6751:20;6740:31;;6687:90;;;:::o;6783:118::-;6854:22;6870:5;6854:22;:::i;:::-;6847:5;6844:33;6834:61;;6891:1;6888;6881:12;6834:61;6783:118;:::o;6907:135::-;6951:5;6989:6;6976:20;6967:29;;7005:31;7030:5;7005:31;:::i;:::-;6907:135;;;;:::o;7048:1193::-;7156:6;7164;7172;7180;7188;7196;7204;7253:3;7241:9;7232:7;7228:23;7224:33;7221:120;;;7260:79;;:::i;:::-;7221:120;7380:1;7405:53;7450:7;7441:6;7430:9;7426:22;7405:53;:::i;:::-;7395:63;;7351:117;7507:2;7533:53;7578:7;7569:6;7558:9;7554:22;7533:53;:::i;:::-;7523:63;;7478:118;7635:2;7661:52;7705:7;7696:6;7685:9;7681:22;7661:52;:::i;:::-;7651:62;;7606:117;7762:2;7788:53;7833:7;7824:6;7813:9;7809:22;7788:53;:::i;:::-;7778:63;;7733:118;7890:3;7917:53;7962:7;7953:6;7942:9;7938:22;7917:53;:::i;:::-;7907:63;;7861:119;8019:3;8046:51;8089:7;8080:6;8069:9;8065:22;8046:51;:::i;:::-;8036:61;;7990:117;8146:3;8173:51;8216:7;8207:6;8196:9;8192:22;8173:51;:::i;:::-;8163:61;;8117:117;7048:1193;;;;;;;;;;:::o;8247:118::-;8334:24;8352:5;8334:24;:::i;:::-;8329:3;8322:37;8247:118;;:::o;8371:::-;8408:7;8448:34;8441:5;8437:46;8426:57;;8371:118;;;:::o;8495:::-;8582:24;8600:5;8582:24;:::i;:::-;8577:3;8570:37;8495:118;;:::o;8619:553::-;8796:4;8834:3;8823:9;8819:19;8811:27;;8848:71;8916:1;8905:9;8901:17;8892:6;8848:71;:::i;:::-;8929:72;8997:2;8986:9;8982:18;8973:6;8929:72;:::i;:::-;9011;9079:2;9068:9;9064:18;9055:6;9011:72;:::i;:::-;9093;9161:2;9150:9;9146:18;9137:6;9093:72;:::i;:::-;8619:553;;;;;;;:::o;9178:151::-;9253:9;9286:37;9317:5;9286:37;:::i;:::-;9273:50;;9178:151;;;:::o;9335:181::-;9447:62;9503:5;9447:62;:::i;:::-;9442:3;9435:75;9335:181;;:::o;9522:272::-;9640:4;9678:2;9667:9;9663:18;9655:26;;9691:96;9784:1;9773:9;9769:17;9760:6;9691:96;:::i;:::-;9522:272;;;;:::o;9800:765::-;9886:6;9894;9902;9910;9959:3;9947:9;9938:7;9934:23;9930:33;9927:120;;;9966:79;;:::i;:::-;9927:120;10086:1;10111:53;10156:7;10147:6;10136:9;10132:22;10111:53;:::i;:::-;10101:63;;10057:117;10213:2;10239:53;10284:7;10275:6;10264:9;10260:22;10239:53;:::i;:::-;10229:63;;10184:118;10341:2;10367:53;10412:7;10403:6;10392:9;10388:22;10367:53;:::i;:::-;10357:63;;10312:118;10469:2;10495:53;10540:7;10531:6;10520:9;10516:22;10495:53;:::i;:::-;10485:63;;10440:118;9800:765;;;;;;;:::o;10571:115::-;10656:23;10673:5;10656:23;:::i;:::-;10651:3;10644:36;10571:115;;:::o;10692:438::-;10839:4;10877:2;10866:9;10862:18;10854:26;;10890:71;10958:1;10947:9;10943:17;10934:6;10890:71;:::i;:::-;10971:72;11039:2;11028:9;11024:18;11015:6;10971:72;:::i;:::-;11053:70;11119:2;11108:9;11104:18;11095:6;11053:70;:::i;:::-;10692:438;;;;;;:::o;11136:143::-;11193:5;11224:6;11218:13;11209:22;;11240:33;11267:5;11240:33;:::i;:::-;11136:143;;;;:::o;11285:351::-;11355:6;11404:2;11392:9;11383:7;11379:23;11375:32;11372:119;;;11410:79;;:::i;:::-;11372:119;11530:1;11555:64;11611:7;11602:6;11591:9;11587:22;11555:64;:::i;:::-;11545:74;;11501:128;11285:351;;;;:::o;11642:169::-;11726:11;11760:6;11755:3;11748:19;11800:4;11795:3;11791:14;11776:29;;11642:169;;;;:::o;11817:::-;11957:21;11953:1;11945:6;11941:14;11934:45;11817:169;:::o;11992:366::-;12134:3;12155:67;12219:2;12214:3;12155:67;:::i;:::-;12148:74;;12231:93;12320:3;12231:93;:::i;:::-;12349:2;12344:3;12340:12;12333:19;;11992:366;;;:::o;12364:419::-;12530:4;12568:2;12557:9;12553:18;12545:26;;12617:9;12611:4;12607:20;12603:1;12592:9;12588:17;12581:47;12645:131;12771:4;12645:131;:::i;:::-;12637:139;;12364:419;;;:::o;12789:118::-;12876:24;12894:5;12876:24;:::i;:::-;12871:3;12864:37;12789:118;;:::o;12913:222::-;13006:4;13044:2;13033:9;13029:18;13021:26;;13057:71;13125:1;13114:9;13110:17;13101:6;13057:71;:::i;:::-;12913:222;;;;:::o;13141:143::-;13198:5;13229:6;13223:13;13214:22;;13245:33;13272:5;13245:33;:::i;:::-;13141:143;;;;:::o;13290:351::-;13360:6;13409:2;13397:9;13388:7;13384:23;13380:32;13377:119;;;13415:79;;:::i;:::-;13377:119;13535:1;13560:64;13616:7;13607:6;13596:9;13592:22;13560:64;:::i;:::-;13550:74;;13506:128;13290:351;;;;:::o;13647:169::-;13787:21;13783:1;13775:6;13771:14;13764:45;13647:169;:::o;13822:366::-;13964:3;13985:67;14049:2;14044:3;13985:67;:::i;:::-;13978:74;;14061:93;14150:3;14061:93;:::i;:::-;14179:2;14174:3;14170:12;14163:19;;13822:366;;;:::o;14194:419::-;14360:4;14398:2;14387:9;14383:18;14375:26;;14447:9;14441:4;14437:20;14433:1;14422:9;14418:17;14411:47;14475:131;14601:4;14475:131;:::i;:::-;14467:139;;14194:419;;;:::o;14619:169::-;14759:21;14755:1;14747:6;14743:14;14736:45;14619:169;:::o;14794:366::-;14936:3;14957:67;15021:2;15016:3;14957:67;:::i;:::-;14950:74;;15033:93;15122:3;15033:93;:::i;:::-;15151:2;15146:3;15142:12;15135:19;;14794:366;;;:::o;15166:419::-;15332:4;15370:2;15359:9;15355:18;15347:26;;15419:9;15413:4;15409:20;15405:1;15394:9;15390:17;15383:47;15447:131;15573:4;15447:131;:::i;:::-;15439:139;;15166:419;;;:::o;15591:180::-;15639:77;15636:1;15629:88;15736:4;15733:1;15726:15;15760:4;15757:1;15750:15;15777:191;15817:3;15836:20;15854:1;15836:20;:::i;:::-;15831:25;;15870:20;15888:1;15870:20;:::i;:::-;15865:25;;15913:1;15910;15906:9;15899:16;;15934:3;15931:1;15928:10;15925:36;;;15941:18;;:::i;:::-;15925:36;15777:191;;;;:::o;15974:108::-;16051:24;16069:5;16051:24;:::i;:::-;16046:3;16039:37;15974:108;;:::o;16088:105::-;16163:23;16180:5;16163:23;:::i;:::-;16158:3;16151:36;16088:105;;:::o;16199:102::-;16272:22;16288:5;16272:22;:::i;:::-;16267:3;16260:35;16199:102;;:::o;16307:108::-;16384:24;16402:5;16384:24;:::i;:::-;16379:3;16372:37;16307:108;;:::o;16523:2137::-;16676:6;16671:3;16667:16;16767:4;16760:5;16756:16;16750:23;16786:63;16843:4;16838:3;16834:14;16820:12;16786:63;:::i;:::-;16693:166;16943:4;16936:5;16932:16;16926:23;16962:63;17019:4;17014:3;17010:14;16996:12;16962:63;:::i;:::-;16869:166;17116:4;17109:5;17105:16;17099:23;17135:61;17190:4;17185:3;17181:14;17167:12;17135:61;:::i;:::-;17045:161;17293:4;17286:5;17282:16;17276:23;17312:59;17365:4;17360:3;17356:14;17342:12;17312:59;:::i;:::-;17216:165;17468:4;17461:5;17457:16;17451:23;17487:59;17540:4;17535:3;17531:14;17517:12;17487:59;:::i;:::-;17391:165;17648:4;17641:5;17637:16;17631:23;17667:63;17724:4;17719:3;17715:14;17701:12;17667:63;:::i;:::-;17566:174;17832:4;17825:5;17821:16;17815:23;17851:63;17908:4;17903:3;17899:14;17885:12;17851:63;:::i;:::-;17750:174;18012:4;18005:5;18001:16;17995:23;18031:63;18088:4;18083:3;18079:14;18065:12;18031:63;:::i;:::-;17934:170;18192:6;18185:5;18181:18;18175:25;18213:65;18270:6;18265:3;18261:16;18247:12;18213:65;:::i;:::-;18114:174;18375:6;18368:5;18364:18;18358:25;18396:65;18453:6;18448:3;18444:16;18430:12;18396:65;:::i;:::-;18298:173;18557:6;18550:5;18546:18;18540:25;18578:65;18635:6;18630:3;18626:16;18612:12;18578:65;:::i;:::-;18481:172;16645:2015;16523:2137;;:::o;18666:335::-;18815:4;18853:3;18842:9;18838:19;18830:27;;18867:127;18991:1;18980:9;18976:17;18967:6;18867:127;:::i;:::-;18666:335;;;;:::o;19007:122::-;19080:24;19098:5;19080:24;:::i;:::-;19073:5;19070:35;19060:63;;19119:1;19116;19109:12;19060:63;19007:122;:::o;19135:143::-;19192:5;19223:6;19217:13;19208:22;;19239:33;19266:5;19239:33;:::i;:::-;19135:143;;;;:::o;19284:820::-;19381:6;19389;19397;19405;19454:3;19442:9;19433:7;19429:23;19425:33;19422:120;;;19461:79;;:::i;:::-;19422:120;19581:1;19606:64;19662:7;19653:6;19642:9;19638:22;19606:64;:::i;:::-;19596:74;;19552:128;19719:2;19745:64;19801:7;19792:6;19781:9;19777:22;19745:64;:::i;:::-;19735:74;;19690:129;19858:2;19884:64;19940:7;19931:6;19920:9;19916:22;19884:64;:::i;:::-;19874:74;;19829:129;19997:2;20023:64;20079:7;20070:6;20059:9;20055:22;20023:64;:::i;:::-;20013:74;;19968:129;19284:820;;;;;;;:::o;20110:194::-;20150:4;20170:20;20188:1;20170:20;:::i;:::-;20165:25;;20204:20;20222:1;20204:20;:::i;:::-;20199:25;;20248:1;20245;20241:9;20233:17;;20272:1;20266:4;20263:11;20260:37;;;20277:18;;:::i;:::-;20260:37;20110:194;;;;:::o;20310:332::-;20431:4;20469:2;20458:9;20454:18;20446:26;;20482:71;20550:1;20539:9;20535:17;20526:6;20482:71;:::i;:::-;20563:72;20631:2;20620:9;20616:18;20607:6;20563:72;:::i;:::-;20310:332;;;;;:::o;20648:116::-;20718:21;20733:5;20718:21;:::i;:::-;20711:5;20708:32;20698:60;;20754:1;20751;20744:12;20698:60;20648:116;:::o;20770:137::-;20824:5;20855:6;20849:13;20840:22;;20871:30;20895:5;20871:30;:::i;:::-;20770:137;;;;:::o;20913:345::-;20980:6;21029:2;21017:9;21008:7;21004:23;21000:32;20997:119;;;21035:79;;:::i;:::-;20997:119;21155:1;21180:61;21233:7;21224:6;21213:9;21209:22;21180:61;:::i;:::-;21170:71;;21126:125;20913:345;;;;:::o;21264:332::-;21385:4;21423:2;21412:9;21408:18;21400:26;;21436:71;21504:1;21493:9;21489:17;21480:6;21436:71;:::i;:::-;21517:72;21585:2;21574:9;21570:18;21561:6;21517:72;:::i;:::-;21264:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1288400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "352",
								"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)": "infinite",
								"approveTokens(address,address,uint256,uint256)": "infinite",
								"createPool(address,address,uint24,uint160)": "infinite",
								"factory()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3122",
								"positionManager()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "718"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH",
									"source": 24,
									"value": "80"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "CALLVALUE",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "ISZERO",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "REVERT",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "tag",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSHSIZE",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "CODESIZE",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "SUB",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSHSIZE",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "CODECOPY",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "2"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "3"
								},
								{
									"begin": 549,
									"end": 754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "tag",
									"source": 24,
									"value": "2"
								},
								{
									"begin": 549,
									"end": 754,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 683,
									"end": 699,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 637,
									"end": 652,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 637,
									"end": 652,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 700,
									"name": "PUSH",
									"source": 24,
									"value": "100"
								},
								{
									"begin": 637,
									"end": 700,
									"name": "EXP",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "SLOAD",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "PUSH",
									"source": 24,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 637,
									"end": 700,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "NOT",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "PUSH",
									"source": 24,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 637,
									"end": 700,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "OR",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": 637,
									"end": 700,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 738,
									"end": 746,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 710,
									"end": 717,
									"name": "PUSH",
									"source": 24,
									"value": "2"
								},
								{
									"begin": 710,
									"end": 717,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "PUSH",
									"source": 24,
									"value": "100"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "EXP",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "SLOAD",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "PUSH",
									"source": 24,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "NOT",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "PUSH",
									"source": 24,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "OR",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "SSTORE",
									"source": 24
								},
								{
									"begin": 710,
									"end": 747,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 549,
									"end": 754,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "6"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 25,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 25
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 25
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 25,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 25,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 25
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 25
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 25
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 25
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 25,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 25,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 25
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 25
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 25
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 25,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 25,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 25
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 25
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 25
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 25
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 25,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 25,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 25
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 25
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 25,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 25
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 25
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 25,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 25
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 25,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 25
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 25
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 25
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 25
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 25
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 25
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 25,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 25,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 25
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 25
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 25
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 25,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 25
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 25,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 25
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 25
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 25
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 25,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 25
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 25
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 25
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "tag",
									"source": 24,
									"value": "6"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH #[$]",
									"source": 24,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH [$]",
									"source": 24,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "CODECOPY",
									"source": 24
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 2934,
									"name": "RETURN",
									"source": 24
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202746b90d6488fee63cc53a1ddf1f3eff0c8214ec5407ec25de9921348485824f64736f6c634300081a0033",
									".code": [
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "CALLVALUE",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "tag",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "CALLDATALOAD",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "91D14854"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "15"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "91D14854"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "9"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "A217FDDF"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "10"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "AFBCE84E"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "C45A0155"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "12"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "D547741F"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "13"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "ECF4DAA7"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "tag",
											"source": 24,
											"value": "15"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "1FFC9A7"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "3"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "248A9CA3"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "2F2FF15D"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "5"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "36568ABE"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "791B98BC"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "7"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "8E909E51"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "8"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "tag",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 396,
											"end": 2934,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 504,
											"name": "tag",
											"source": 24,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "35"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "tag",
											"source": 24,
											"value": "35"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "38"
										},
										{
											"begin": 454,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "tag",
											"source": 24,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "RETURN",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "tag",
											"source": 24,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "CALLDATASIZE",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "tag",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "tag",
											"source": 24,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "tag",
											"source": 24,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "RETURN",
											"source": 24
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "tag",
											"source": 24,
											"value": "11"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "52"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "53"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "54"
										},
										{
											"begin": 1651,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "tag",
											"source": 24,
											"value": "53"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "55"
										},
										{
											"begin": 1651,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "tag",
											"source": 24,
											"value": "52"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "56"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "57"
										},
										{
											"begin": 1651,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "tag",
											"source": 24,
											"value": "56"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "RETURN",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 24,
											"value": "12"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "58"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "59"
										},
										{
											"begin": 510,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 24,
											"value": "58"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "61"
										},
										{
											"begin": 510,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 24,
											"value": "60"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "RETURN",
											"source": 24
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "tag",
											"source": 24,
											"value": "14"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "65"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "CALLDATASIZE",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "66"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "67"
										},
										{
											"begin": 824,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "tag",
											"source": 24,
											"value": "66"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "68"
										},
										{
											"begin": 824,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "tag",
											"source": 24,
											"value": "65"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "STOP",
											"source": 24
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 504,
											"name": "tag",
											"source": 24,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 504,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 454,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "tag",
											"source": 24,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1306,
											"end": 1318,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1388,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1388,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "PUSH",
											"source": 24,
											"value": "1698EE82"
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1370,
											"end": 1373,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "88"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "89"
										},
										{
											"begin": 1338,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "tag",
											"source": 24,
											"value": "88"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "STATICCALL",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "91"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "tag",
											"source": 24,
											"value": "91"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "92"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "93"
										},
										{
											"begin": 1338,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "tag",
											"source": 24,
											"value": "92"
										},
										{
											"begin": 1338,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1388,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1388,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1338,
											"end": 1388,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "94"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH",
											"source": 24,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "95"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "96"
										},
										{
											"begin": 1330,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "tag",
											"source": 24,
											"value": "95"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "tag",
											"source": 24,
											"value": "94"
										},
										{
											"begin": 1330,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "PUSH",
											"source": 24,
											"value": "A1671295"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1464,
											"end": 1467,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "97"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "89"
										},
										{
											"begin": 1429,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "tag",
											"source": 24,
											"value": "97"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "99"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "tag",
											"source": 24,
											"value": "99"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "93"
										},
										{
											"begin": 1429,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "tag",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1422,
											"end": 1468,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1422,
											"end": 1468,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1509,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1509,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1509,
											"name": "PUSH",
											"source": 24,
											"value": "F637731D"
										},
										{
											"begin": 1510,
											"end": 1522,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "101"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "102"
										},
										{
											"begin": 1478,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "tag",
											"source": 24,
											"value": "101"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "EXTCODESIZE",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "103"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "tag",
											"source": 24,
											"value": "103"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "105"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "tag",
											"source": 24,
											"value": "105"
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1478,
											"end": 1523,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP5",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1201,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "tag",
											"source": 24,
											"value": "55"
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1866,
											"end": 1881,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1900,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1902,
											"end": 1917,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "DUP12",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH",
											"source": 24,
											"value": "70A08231"
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "ADDRESS",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "108"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 1954,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "tag",
											"source": 24,
											"value": "108"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "STATICCALL",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "110"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "tag",
											"source": 24,
											"value": "110"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "111"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "112"
										},
										{
											"begin": 1954,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "tag",
											"source": 24,
											"value": "111"
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 2004,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 1954,
											"end": 2004,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "113"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH",
											"source": 24,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "114"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "115"
										},
										{
											"begin": 1946,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "tag",
											"source": 24,
											"value": "114"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "tag",
											"source": 24,
											"value": "113"
										},
										{
											"begin": 1946,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2089,
											"end": 2096,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 2053,
											"end": 2059,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2070,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2070,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2070,
											"name": "PUSH",
											"source": 24,
											"value": "70A08231"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "ADDRESS",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "116"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "44"
										},
										{
											"begin": 2046,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "tag",
											"source": 24,
											"value": "116"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP7",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "STATICCALL",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "118"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "tag",
											"source": 24,
											"value": "118"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "119"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "112"
										},
										{
											"begin": 2046,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "tag",
											"source": 24,
											"value": "119"
										},
										{
											"begin": 2046,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2096,
											"name": "LT",
											"source": 24
										},
										{
											"begin": 2046,
											"end": 2096,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "120"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH",
											"source": 24,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "121"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "122"
										},
										{
											"begin": 2038,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "tag",
											"source": 24,
											"value": "121"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "tag",
											"source": 24,
											"value": "120"
										},
										{
											"begin": 2038,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2131,
											"end": 2183,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "160"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2247,
											"end": 2253,
											"name": "DUP14",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "DUP13",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2300,
											"end": 2303,
											"name": "DUP12",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFF"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2328,
											"end": 2337,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2401,
											"end": 2408,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2471,
											"end": 2472,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2524,
											"end": 2534,
											"name": "CALLER",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2576,
											"end": 2579,
											"name": "PUSH",
											"source": 24,
											"value": "78"
										},
										{
											"begin": 2558,
											"end": 2573,
											"name": "TIMESTAMP",
											"source": 24
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "123"
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "124"
										},
										{
											"begin": 2558,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "tag",
											"source": 24,
											"value": "123"
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2186,
											"end": 2590,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2131,
											"end": 2590,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2131,
											"end": 2590,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "PUSH",
											"source": 24,
											"value": "88316456"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "125"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "126"
										},
										{
											"begin": 2642,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "tag",
											"source": 24,
											"value": "125"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "128"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "tag",
											"source": 24,
											"value": "128"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "129"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "130"
										},
										{
											"begin": 2642,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "tag",
											"source": 24,
											"value": "129"
										},
										{
											"begin": 2642,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "SWAP6",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "SWAP7",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "SWAP9",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2601,
											"end": 2670,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "DUP10",
											"source": 24
										},
										{
											"begin": 2717,
											"end": 2734,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 2713,
											"end": 2815,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2713,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "131"
										},
										{
											"begin": 2713,
											"end": 2815,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP12",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "PUSH",
											"source": 24,
											"value": "A9059CBB"
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "CALLER",
											"source": 24
										},
										{
											"begin": 2796,
											"end": 2803,
											"name": "DUP6",
											"source": 24
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "DUP13",
											"source": 24
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "132"
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "133"
										},
										{
											"begin": 2786,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "tag",
											"source": 24,
											"value": "132"
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "134"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "135"
										},
										{
											"begin": 2750,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "tag",
											"source": 24,
											"value": "134"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "137"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "tag",
											"source": 24,
											"value": "137"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "138"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "139"
										},
										{
											"begin": 2750,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "tag",
											"source": 24,
											"value": "138"
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2713,
											"end": 2815,
											"name": "tag",
											"source": 24,
											"value": "131"
										},
										{
											"begin": 2713,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2838,
											"end": 2845,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "DUP9",
											"source": 24
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 2824,
											"end": 2926,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2824,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "140"
										},
										{
											"begin": 2824,
											"end": 2926,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP11",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH",
											"source": 24,
											"value": "A9059CBB"
										},
										{
											"begin": 2885,
											"end": 2895,
											"name": "CALLER",
											"source": 24
										},
										{
											"begin": 2907,
											"end": 2914,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "DUP12",
											"source": 24
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "141"
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "133"
										},
										{
											"begin": 2897,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "tag",
											"source": 24,
											"value": "141"
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "142"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "135"
										},
										{
											"begin": 2861,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "tag",
											"source": 24,
											"value": "142"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "144"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "tag",
											"source": 24,
											"value": "144"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "145"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "139"
										},
										{
											"begin": 2861,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "tag",
											"source": 24,
											"value": "145"
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2861,
											"end": 2915,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2824,
											"end": 2926,
											"name": "tag",
											"source": 24,
											"value": "140"
										},
										{
											"begin": 2824,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1936,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP8",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "SWAP4",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1651,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "tag",
											"source": 24,
											"value": "59"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 542,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 510,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "tag",
											"source": 24,
											"value": "68"
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 939,
											"end": 945,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 932,
											"end": 954,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 954,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 932,
											"end": 954,
											"name": "PUSH",
											"source": 24,
											"value": "95EA7B3"
										},
										{
											"begin": 963,
											"end": 978,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 963,
											"end": 978,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 963,
											"end": 978,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 963,
											"end": 978,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 963,
											"end": 978,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 963,
											"end": 978,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 978,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 981,
											"end": 988,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "152"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "135"
										},
										{
											"begin": 932,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "tag",
											"source": 24,
											"value": "152"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "154"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "tag",
											"source": 24,
											"value": "154"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "155"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "139"
										},
										{
											"begin": 932,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "tag",
											"source": 24,
											"value": "155"
										},
										{
											"begin": 932,
											"end": 989,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 932,
											"end": 989,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1006,
											"end": 1012,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "PUSH",
											"source": 24,
											"value": "95EA7B3"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "SLOAD",
											"source": 24
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "EXP",
											"source": 24
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1048,
											"end": 1055,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFF"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "E0"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SHL",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "156"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "135"
										},
										{
											"begin": 999,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "tag",
											"source": 24,
											"value": "156"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP8",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "GAS",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "CALL",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "158"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "RETURNDATACOPY",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "tag",
											"source": 24,
											"value": "158"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "RETURNDATASIZE",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "NOT",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "159"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "139"
										},
										{
											"begin": 999,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "tag",
											"source": 24,
											"value": "159"
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 999,
											"end": 1056,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 824,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 25,
											"value": "184"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 25,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 25,
											"value": "185"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "246"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "184"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 25,
											"value": "246"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "247"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 25,
											"value": "247"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 25,
											"value": "186"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "249"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "185"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 25,
											"value": "249"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 25,
											"value": "18"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "251"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "252"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 25,
											"value": "252"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 25,
											"value": "251"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "253"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "186"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 25,
											"value": "253"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 25,
											"value": "187"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 25,
											"value": "188"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "256"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "187"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 25,
											"value": "256"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 25,
											"value": "21"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "258"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "188"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 25,
											"value": "258"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 25,
											"value": "189"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 25,
											"value": "190"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "261"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "189"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 25,
											"value": "261"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "262"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 25,
											"value": "262"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 25,
											"value": "191"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "264"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "190"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 25,
											"value": "264"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 25,
											"value": "24"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "266"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "267"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 25,
											"value": "267"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 25,
											"value": "266"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "268"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "191"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 25,
											"value": "268"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 25,
											"value": "192"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "270"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "189"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 25,
											"value": "270"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 25,
											"value": "27"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "272"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "192"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 25,
											"value": "272"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 25,
											"value": "193"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 25,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 25,
											"value": "194"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "275"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "193"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 25,
											"value": "275"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 25,
											"value": "195"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "277"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "194"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 25,
											"value": "277"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "278"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 25,
											"value": "278"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "280"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "195"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 25,
											"value": "280"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 25,
											"value": "30"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "282"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "283"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 25,
											"value": "283"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 25,
											"value": "282"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "284"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 25
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "191"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 25,
											"value": "284"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "285"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 25
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 25,
											"value": "285"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3548,
											"end": 3608,
											"name": "tag",
											"source": 25,
											"value": "197"
										},
										{
											"begin": 3548,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3602,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3548,
											"end": 3608,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 3548,
											"end": 3608,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3548,
											"end": 3608,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3548,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3614,
											"end": 3756,
											"name": "tag",
											"source": 25,
											"value": "198"
										},
										{
											"begin": 3614,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "288"
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "289"
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "290"
										},
										{
											"begin": 3742,
											"end": 3747,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "193"
										},
										{
											"begin": 3724,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "tag",
											"source": 25,
											"value": "290"
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "197"
										},
										{
											"begin": 3715,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "tag",
											"source": 25,
											"value": "289"
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3697,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "193"
										},
										{
											"begin": 3697,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3697,
											"end": 3750,
											"name": "tag",
											"source": 25,
											"value": "288"
										},
										{
											"begin": 3697,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3684,
											"end": 3750,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3684,
											"end": 3750,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3614,
											"end": 3756,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 3614,
											"end": 3756,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3614,
											"end": 3756,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3614,
											"end": 3756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3762,
											"end": 3888,
											"name": "tag",
											"source": 25,
											"value": "199"
										},
										{
											"begin": 3762,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "292"
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 3845,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "198"
										},
										{
											"begin": 3845,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3845,
											"end": 3882,
											"name": "tag",
											"source": 25,
											"value": "292"
										},
										{
											"begin": 3845,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3832,
											"end": 3882,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3832,
											"end": 3882,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3762,
											"end": 3888,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 3762,
											"end": 3888,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3762,
											"end": 3888,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3762,
											"end": 3888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 3894,
											"end": 4056,
											"name": "tag",
											"source": 25,
											"value": "200"
										},
										{
											"begin": 3894,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "294"
										},
										{
											"begin": 4044,
											"end": 4049,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 4013,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "199"
										},
										{
											"begin": 4013,
											"end": 4050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4013,
											"end": 4050,
											"name": "tag",
											"source": 25,
											"value": "294"
										},
										{
											"begin": 4013,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4000,
											"end": 4050,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 4000,
											"end": 4050,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3894,
											"end": 4056,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 3894,
											"end": 4056,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 3894,
											"end": 4056,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 3894,
											"end": 4056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4062,
											"end": 4265,
											"name": "tag",
											"source": 25,
											"value": "201"
										},
										{
											"begin": 4062,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4185,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "296"
										},
										{
											"begin": 4252,
											"end": 4257,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 4185,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "200"
										},
										{
											"begin": 4185,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4185,
											"end": 4258,
											"name": "tag",
											"source": 25,
											"value": "296"
										},
										{
											"begin": 4185,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4180,
											"end": 4183,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 4173,
											"end": 4259,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 4062,
											"end": 4265,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4062,
											"end": 4265,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4062,
											"end": 4265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4271,
											"end": 4565,
											"name": "tag",
											"source": 25,
											"value": "38"
										},
										{
											"begin": 4271,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4400,
											"end": 4404,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4451,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "298"
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 4540,
											"end": 4557,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 4451,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "201"
										},
										{
											"begin": 4451,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4451,
											"end": 4558,
											"name": "tag",
											"source": 25,
											"value": "298"
										},
										{
											"begin": 4451,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4271,
											"end": 4565,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 4271,
											"end": 4565,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 4271,
											"end": 4565,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4271,
											"end": 4565,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4271,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4571,
											"end": 4662,
											"name": "tag",
											"source": 25,
											"value": "202"
										},
										{
											"begin": 4571,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4607,
											"end": 4614,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4655,
											"name": "PUSH",
											"source": 25,
											"value": "FFFFFF"
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 4636,
											"end": 4656,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 4625,
											"end": 4656,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 4625,
											"end": 4656,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4571,
											"end": 4662,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 4571,
											"end": 4662,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 4571,
											"end": 4662,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4571,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4668,
											"end": 4788,
											"name": "tag",
											"source": 25,
											"value": "203"
										},
										{
											"begin": 4668,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4740,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "301"
										},
										{
											"begin": 4757,
											"end": 4762,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 4740,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "202"
										},
										{
											"begin": 4740,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4740,
											"end": 4763,
											"name": "tag",
											"source": 25,
											"value": "301"
										},
										{
											"begin": 4740,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4733,
											"end": 4738,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 4720,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "302"
										},
										{
											"begin": 4720,
											"end": 4782,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 4768,
											"end": 4780,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 4720,
											"end": 4782,
											"name": "tag",
											"source": 25,
											"value": "302"
										},
										{
											"begin": 4720,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4668,
											"end": 4788,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4668,
											"end": 4788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4794,
											"end": 4931,
											"name": "tag",
											"source": 25,
											"value": "204"
										},
										{
											"begin": 4794,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4839,
											"end": 4844,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 4864,
											"end": 4884,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 4855,
											"end": 4884,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 4855,
											"end": 4884,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4893,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "304"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 4893,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "203"
										},
										{
											"begin": 4893,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4893,
											"end": 4925,
											"name": "tag",
											"source": 25,
											"value": "304"
										},
										{
											"begin": 4893,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4794,
											"end": 4931,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 4794,
											"end": 4931,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 4794,
											"end": 4931,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4794,
											"end": 4931,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4794,
											"end": 4931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 4937,
											"end": 5059,
											"name": "tag",
											"source": 25,
											"value": "205"
										},
										{
											"begin": 4937,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5010,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "306"
										},
										{
											"begin": 5028,
											"end": 5033,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 5010,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "193"
										},
										{
											"begin": 5010,
											"end": 5034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5010,
											"end": 5034,
											"name": "tag",
											"source": 25,
											"value": "306"
										},
										{
											"begin": 5010,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 5000,
											"end": 5035,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 4990,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "307"
										},
										{
											"begin": 4990,
											"end": 5053,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 5049,
											"end": 5050,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 4990,
											"end": 5053,
											"name": "tag",
											"source": 25,
											"value": "307"
										},
										{
											"begin": 4990,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 4937,
											"end": 5059,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 4937,
											"end": 5059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5065,
											"end": 5204,
											"name": "tag",
											"source": 25,
											"value": "206"
										},
										{
											"begin": 5065,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5111,
											"end": 5116,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 5127,
											"end": 5156,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 5127,
											"end": 5156,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5165,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "309"
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 5165,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "205"
										},
										{
											"begin": 5165,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5165,
											"end": 5198,
											"name": "tag",
											"source": 25,
											"value": "309"
										},
										{
											"begin": 5165,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5065,
											"end": 5204,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 5065,
											"end": 5204,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 5065,
											"end": 5204,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5065,
											"end": 5204,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5065,
											"end": 5204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "tag",
											"source": 25,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 5311,
											"end": 5317,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 5368,
											"end": 5371,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 5347,
											"end": 5354,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 5343,
											"end": 5366,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 5339,
											"end": 5372,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 5336,
											"end": 5456,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 5336,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "311"
										},
										{
											"begin": 5336,
											"end": 5456,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "312"
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 5375,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "tag",
											"source": 25,
											"value": "312"
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5336,
											"end": 5456,
											"name": "tag",
											"source": 25,
											"value": "311"
										},
										{
											"begin": 5336,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "313"
										},
										{
											"begin": 5565,
											"end": 5572,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 5520,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "tag",
											"source": 25,
											"value": "313"
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5510,
											"end": 5573,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 5510,
											"end": 5573,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5466,
											"end": 5583,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "314"
										},
										{
											"begin": 5693,
											"end": 5700,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 5673,
											"end": 5682,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 5648,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "tag",
											"source": 25,
											"value": "314"
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5638,
											"end": 5701,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 5638,
											"end": 5701,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "315"
										},
										{
											"begin": 5820,
											"end": 5827,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 5811,
											"end": 5817,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 5796,
											"end": 5818,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 5776,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "204"
										},
										{
											"begin": 5776,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5776,
											"end": 5828,
											"name": "tag",
											"source": 25,
											"value": "315"
										},
										{
											"begin": 5776,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5766,
											"end": 5828,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 5766,
											"end": 5828,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5721,
											"end": 5838,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "316"
										},
										{
											"begin": 5948,
											"end": 5955,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 5928,
											"end": 5937,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 5924,
											"end": 5946,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "206"
										},
										{
											"begin": 5903,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "tag",
											"source": 25,
											"value": "316"
										},
										{
											"begin": 5903,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 5893,
											"end": 5956,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 5893,
											"end": 5956,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5848,
											"end": 5966,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5210,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 5979,
											"end": 6097,
											"name": "tag",
											"source": 25,
											"value": "207"
										},
										{
											"begin": 5979,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "318"
										},
										{
											"begin": 6084,
											"end": 6089,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "194"
										},
										{
											"begin": 6066,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "tag",
											"source": 25,
											"value": "318"
										},
										{
											"begin": 6066,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6061,
											"end": 6064,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 6054,
											"end": 6091,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 5979,
											"end": 6097,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5979,
											"end": 6097,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 5979,
											"end": 6097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6103,
											"end": 6325,
											"name": "tag",
											"source": 25,
											"value": "44"
										},
										{
											"begin": 6103,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6196,
											"end": 6200,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 6211,
											"end": 6237,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6211,
											"end": 6237,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6247,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "320"
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 6300,
											"end": 6317,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 6247,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "207"
										},
										{
											"begin": 6247,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6247,
											"end": 6318,
											"name": "tag",
											"source": 25,
											"value": "320"
										},
										{
											"begin": 6247,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6103,
											"end": 6325,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 6103,
											"end": 6325,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 6103,
											"end": 6325,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6103,
											"end": 6325,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6103,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6331,
											"end": 6408,
											"name": "tag",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 6331,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6402,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6386,
											"end": 6402,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6386,
											"end": 6402,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6331,
											"end": 6408,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 6331,
											"end": 6408,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6331,
											"end": 6408,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6331,
											"end": 6408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6414,
											"end": 6536,
											"name": "tag",
											"source": 25,
											"value": "209"
										},
										{
											"begin": 6414,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "323"
										},
										{
											"begin": 6505,
											"end": 6510,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 6487,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "tag",
											"source": 25,
											"value": "323"
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6480,
											"end": 6485,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6477,
											"end": 6512,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "324"
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6524,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 6516,
											"end": 6528,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "tag",
											"source": 25,
											"value": "324"
										},
										{
											"begin": 6467,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6414,
											"end": 6536,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6414,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6542,
											"end": 6681,
											"name": "tag",
											"source": 25,
											"value": "210"
										},
										{
											"begin": 6542,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6588,
											"end": 6593,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6632,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6613,
											"end": 6633,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 6604,
											"end": 6633,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6604,
											"end": 6633,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6642,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "326"
										},
										{
											"begin": 6669,
											"end": 6674,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6642,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "209"
										},
										{
											"begin": 6642,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6642,
											"end": 6675,
											"name": "tag",
											"source": 25,
											"value": "326"
										},
										{
											"begin": 6642,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6542,
											"end": 6681,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 6542,
											"end": 6681,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 6542,
											"end": 6681,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6542,
											"end": 6681,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6542,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6687,
											"end": 6777,
											"name": "tag",
											"source": 25,
											"value": "211"
										},
										{
											"begin": 6687,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6722,
											"end": 6729,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6770,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "PUSH",
											"source": 25,
											"value": "2"
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "SIGNEXTEND",
											"source": 25
										},
										{
											"begin": 6740,
											"end": 6771,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6740,
											"end": 6771,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6687,
											"end": 6777,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 6687,
											"end": 6777,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6687,
											"end": 6777,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6687,
											"end": 6777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "tag",
											"source": 25,
											"value": "212"
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6854,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "329"
										},
										{
											"begin": 6870,
											"end": 6875,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6854,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "211"
										},
										{
											"begin": 6854,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6854,
											"end": 6876,
											"name": "tag",
											"source": 25,
											"value": "329"
										},
										{
											"begin": 6854,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6847,
											"end": 6852,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6844,
											"end": 6877,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 6834,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "330"
										},
										{
											"begin": 6834,
											"end": 6895,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 6891,
											"end": 6892,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 6881,
											"end": 6893,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 6834,
											"end": 6895,
											"name": "tag",
											"source": 25,
											"value": "330"
										},
										{
											"begin": 6834,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6783,
											"end": 6901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 6907,
											"end": 7042,
											"name": "tag",
											"source": 25,
											"value": "213"
										},
										{
											"begin": 6907,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6951,
											"end": 6956,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 6976,
											"end": 6996,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": 6967,
											"end": 6996,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 6967,
											"end": 6996,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7005,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "332"
										},
										{
											"begin": 7030,
											"end": 7035,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 7005,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "212"
										},
										{
											"begin": 7005,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7005,
											"end": 7036,
											"name": "tag",
											"source": 25,
											"value": "332"
										},
										{
											"begin": 7005,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 6907,
											"end": 7042,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 6907,
											"end": 7042,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 6907,
											"end": 7042,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6907,
											"end": 7042,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 6907,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "tag",
											"source": 25,
											"value": "54"
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7156,
											"end": 7162,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7256,
											"name": "PUSH",
											"source": 25,
											"value": "E0"
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 7228,
											"end": 7251,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 7224,
											"end": 7257,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 7221,
											"end": 7341,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 7221,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "334"
										},
										{
											"begin": 7221,
											"end": 7341,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 7260,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "335"
										},
										{
											"begin": 7260,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 7260,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7260,
											"end": 7339,
											"name": "tag",
											"source": 25,
											"value": "335"
										},
										{
											"begin": 7260,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7221,
											"end": 7341,
											"name": "tag",
											"source": 25,
											"value": "334"
										},
										{
											"begin": 7221,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7380,
											"end": 7381,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "336"
										},
										{
											"begin": 7450,
											"end": 7457,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 7430,
											"end": 7439,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 7405,
											"end": 7458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "tag",
											"source": 25,
											"value": "336"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7395,
											"end": 7458,
											"name": "SWAP8",
											"source": 25
										},
										{
											"begin": 7395,
											"end": 7458,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7351,
											"end": 7468,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 7533,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "337"
										},
										{
											"begin": 7578,
											"end": 7585,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 7558,
											"end": 7567,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 7554,
											"end": 7576,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 7533,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 7533,
											"end": 7586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7533,
											"end": 7586,
											"name": "tag",
											"source": 25,
											"value": "337"
										},
										{
											"begin": 7533,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7523,
											"end": 7586,
											"name": "SWAP7",
											"source": 25
										},
										{
											"begin": 7523,
											"end": 7586,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7478,
											"end": 7596,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 7661,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "338"
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 7696,
											"end": 7702,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 7685,
											"end": 7694,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 7661,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "204"
										},
										{
											"begin": 7661,
											"end": 7713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7661,
											"end": 7713,
											"name": "tag",
											"source": 25,
											"value": "338"
										},
										{
											"begin": 7661,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7651,
											"end": 7713,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 7651,
											"end": 7713,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7606,
											"end": 7723,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "339"
										},
										{
											"begin": 7833,
											"end": 7840,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 7824,
											"end": 7830,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 7809,
											"end": 7831,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "210"
										},
										{
											"begin": 7788,
											"end": 7841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "tag",
											"source": 25,
											"value": "339"
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7778,
											"end": 7841,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 7778,
											"end": 7841,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7733,
											"end": 7851,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 7917,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "340"
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 7938,
											"end": 7960,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 7917,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "210"
										},
										{
											"begin": 7917,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 7917,
											"end": 7970,
											"name": "tag",
											"source": 25,
											"value": "340"
										},
										{
											"begin": 7917,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 7907,
											"end": 7970,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 7907,
											"end": 7970,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7861,
											"end": 7980,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8019,
											"end": 8022,
											"name": "PUSH",
											"source": 25,
											"value": "A0"
										},
										{
											"begin": 8046,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "341"
										},
										{
											"begin": 8089,
											"end": 8096,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 8080,
											"end": 8086,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 8069,
											"end": 8078,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 8065,
											"end": 8087,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 8046,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "213"
										},
										{
											"begin": 8046,
											"end": 8097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8046,
											"end": 8097,
											"name": "tag",
											"source": 25,
											"value": "341"
										},
										{
											"begin": 8046,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8036,
											"end": 8097,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 8036,
											"end": 8097,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7990,
											"end": 8107,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8146,
											"end": 8149,
											"name": "PUSH",
											"source": 25,
											"value": "C0"
										},
										{
											"begin": 8173,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "342"
										},
										{
											"begin": 8216,
											"end": 8223,
											"name": "DUP11",
											"source": 25
										},
										{
											"begin": 8207,
											"end": 8213,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 8196,
											"end": 8205,
											"name": "DUP12",
											"source": 25
										},
										{
											"begin": 8192,
											"end": 8214,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 8173,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "213"
										},
										{
											"begin": 8173,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8173,
											"end": 8224,
											"name": "tag",
											"source": 25,
											"value": "342"
										},
										{
											"begin": 8173,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8163,
											"end": 8224,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 8163,
											"end": 8224,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8117,
											"end": 8234,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP9",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP8",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 7048,
											"end": 8241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8247,
											"end": 8365,
											"name": "tag",
											"source": 25,
											"value": "214"
										},
										{
											"begin": 8247,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8334,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "344"
										},
										{
											"begin": 8352,
											"end": 8357,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 8334,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 8334,
											"end": 8358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8334,
											"end": 8358,
											"name": "tag",
											"source": 25,
											"value": "344"
										},
										{
											"begin": 8334,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 8322,
											"end": 8359,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 8247,
											"end": 8365,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8247,
											"end": 8365,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8247,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8371,
											"end": 8489,
											"name": "tag",
											"source": 25,
											"value": "215"
										},
										{
											"begin": 8371,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8408,
											"end": 8415,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8482,
											"name": "PUSH",
											"source": 25,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 8437,
											"end": 8483,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 8426,
											"end": 8483,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 8426,
											"end": 8483,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8371,
											"end": 8489,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 8371,
											"end": 8489,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 8371,
											"end": 8489,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8371,
											"end": 8489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8495,
											"end": 8613,
											"name": "tag",
											"source": 25,
											"value": "216"
										},
										{
											"begin": 8495,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8582,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "347"
										},
										{
											"begin": 8600,
											"end": 8605,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 8582,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "215"
										},
										{
											"begin": 8582,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8582,
											"end": 8606,
											"name": "tag",
											"source": 25,
											"value": "347"
										},
										{
											"begin": 8582,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8577,
											"end": 8580,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 8570,
											"end": 8607,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 8495,
											"end": 8613,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8495,
											"end": 8613,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8495,
											"end": 8613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "tag",
											"source": 25,
											"value": "57"
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8796,
											"end": 8800,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 8834,
											"end": 8837,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 8819,
											"end": 8838,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 8811,
											"end": 8838,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 8811,
											"end": 8838,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8848,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "349"
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8914,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 8901,
											"end": 8918,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 8892,
											"end": 8898,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 8848,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "214"
										},
										{
											"begin": 8848,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8848,
											"end": 8919,
											"name": "tag",
											"source": 25,
											"value": "349"
										},
										{
											"begin": 8848,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8929,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "350"
										},
										{
											"begin": 8997,
											"end": 8999,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 8995,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "DUP7",
											"source": 25
										},
										{
											"begin": 8929,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "216"
										},
										{
											"begin": 8929,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 8929,
											"end": 9001,
											"name": "tag",
											"source": 25,
											"value": "350"
										},
										{
											"begin": 8929,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9011,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "351"
										},
										{
											"begin": 9079,
											"end": 9081,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 9068,
											"end": 9077,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 9055,
											"end": 9061,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 9011,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "214"
										},
										{
											"begin": 9011,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9011,
											"end": 9083,
											"name": "tag",
											"source": 25,
											"value": "351"
										},
										{
											"begin": 9011,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "352"
										},
										{
											"begin": 9161,
											"end": 9163,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 9150,
											"end": 9159,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "214"
										},
										{
											"begin": 9093,
											"end": 9165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "tag",
											"source": 25,
											"value": "352"
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 8619,
											"end": 9172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9178,
											"end": 9329,
											"name": "tag",
											"source": 25,
											"value": "217"
										},
										{
											"begin": 9178,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9253,
											"end": 9262,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 9286,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "354"
										},
										{
											"begin": 9317,
											"end": 9322,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 9286,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "199"
										},
										{
											"begin": 9286,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9286,
											"end": 9323,
											"name": "tag",
											"source": 25,
											"value": "354"
										},
										{
											"begin": 9286,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9273,
											"end": 9323,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 9273,
											"end": 9323,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9178,
											"end": 9329,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 9178,
											"end": 9329,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 9178,
											"end": 9329,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9178,
											"end": 9329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9335,
											"end": 9516,
											"name": "tag",
											"source": 25,
											"value": "218"
										},
										{
											"begin": 9335,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9447,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "356"
										},
										{
											"begin": 9503,
											"end": 9508,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 9447,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "217"
										},
										{
											"begin": 9447,
											"end": 9509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9447,
											"end": 9509,
											"name": "tag",
											"source": 25,
											"value": "356"
										},
										{
											"begin": 9447,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9442,
											"end": 9445,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 9435,
											"end": 9510,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 9335,
											"end": 9516,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9335,
											"end": 9516,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9335,
											"end": 9516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9522,
											"end": 9794,
											"name": "tag",
											"source": 25,
											"value": "61"
										},
										{
											"begin": 9522,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9640,
											"end": 9644,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9676,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 9655,
											"end": 9681,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 9655,
											"end": 9681,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9691,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "358"
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9782,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 9769,
											"end": 9786,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 9760,
											"end": 9766,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 9691,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "218"
										},
										{
											"begin": 9691,
											"end": 9787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9691,
											"end": 9787,
											"name": "tag",
											"source": 25,
											"value": "358"
										},
										{
											"begin": 9691,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9522,
											"end": 9794,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 9522,
											"end": 9794,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 9522,
											"end": 9794,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9522,
											"end": 9794,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9522,
											"end": 9794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "tag",
											"source": 25,
											"value": "67"
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9886,
											"end": 9892,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 9902,
											"end": 9908,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9916,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 9959,
											"end": 9962,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 9938,
											"end": 9945,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 9934,
											"end": 9957,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 9930,
											"end": 9963,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "360"
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "361"
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 9966,
											"end": 10045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "tag",
											"source": 25,
											"value": "361"
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "tag",
											"source": 25,
											"value": "360"
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10086,
											"end": 10087,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "362"
										},
										{
											"begin": 10156,
											"end": 10163,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 10147,
											"end": 10153,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 10136,
											"end": 10145,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 10132,
											"end": 10154,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 10111,
											"end": 10164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "tag",
											"source": 25,
											"value": "362"
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10057,
											"end": 10174,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10213,
											"end": 10215,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "363"
										},
										{
											"begin": 10284,
											"end": 10291,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 10264,
											"end": 10273,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 10260,
											"end": 10282,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "196"
										},
										{
											"begin": 10239,
											"end": 10292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "tag",
											"source": 25,
											"value": "363"
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10229,
											"end": 10292,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 10229,
											"end": 10292,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10184,
											"end": 10302,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "364"
										},
										{
											"begin": 10412,
											"end": 10419,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 10403,
											"end": 10409,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 10388,
											"end": 10410,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "210"
										},
										{
											"begin": 10367,
											"end": 10420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "tag",
											"source": 25,
											"value": "364"
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10357,
											"end": 10420,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 10357,
											"end": 10420,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10312,
											"end": 10430,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10469,
											"end": 10471,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "365"
										},
										{
											"begin": 10540,
											"end": 10547,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 10531,
											"end": 10537,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 10520,
											"end": 10529,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 10516,
											"end": 10538,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "210"
										},
										{
											"begin": 10495,
											"end": 10548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "tag",
											"source": 25,
											"value": "365"
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10485,
											"end": 10548,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 10485,
											"end": 10548,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10440,
											"end": 10558,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 9800,
											"end": 10565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10571,
											"end": 10686,
											"name": "tag",
											"source": 25,
											"value": "219"
										},
										{
											"begin": 10571,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10656,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "367"
										},
										{
											"begin": 10673,
											"end": 10678,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 10656,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "202"
										},
										{
											"begin": 10656,
											"end": 10679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10656,
											"end": 10679,
											"name": "tag",
											"source": 25,
											"value": "367"
										},
										{
											"begin": 10656,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 10644,
											"end": 10680,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 10571,
											"end": 10686,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10571,
											"end": 10686,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10571,
											"end": 10686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "tag",
											"source": 25,
											"value": "89"
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10839,
											"end": 10843,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 10854,
											"end": 10880,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 10854,
											"end": 10880,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10890,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "369"
										},
										{
											"begin": 10958,
											"end": 10959,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 10947,
											"end": 10956,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 10943,
											"end": 10960,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 10934,
											"end": 10940,
											"name": "DUP7",
											"source": 25
										},
										{
											"begin": 10890,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "207"
										},
										{
											"begin": 10890,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10890,
											"end": 10961,
											"name": "tag",
											"source": 25,
											"value": "369"
										},
										{
											"begin": 10890,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10971,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "370"
										},
										{
											"begin": 11039,
											"end": 11041,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11037,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 11024,
											"end": 11042,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 11015,
											"end": 11021,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 10971,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "207"
										},
										{
											"begin": 10971,
											"end": 11043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 10971,
											"end": 11043,
											"name": "tag",
											"source": 25,
											"value": "370"
										},
										{
											"begin": 10971,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11053,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "371"
										},
										{
											"begin": 11119,
											"end": 11121,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 11108,
											"end": 11117,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 11104,
											"end": 11122,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 11095,
											"end": 11101,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 11053,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "219"
										},
										{
											"begin": 11053,
											"end": 11123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11053,
											"end": 11123,
											"name": "tag",
											"source": 25,
											"value": "371"
										},
										{
											"begin": 11053,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 10692,
											"end": 11130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11136,
											"end": 11279,
											"name": "tag",
											"source": 25,
											"value": "220"
										},
										{
											"begin": 11136,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11193,
											"end": 11198,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 11224,
											"end": 11230,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 11218,
											"end": 11231,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 11209,
											"end": 11231,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 11209,
											"end": 11231,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11240,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "373"
										},
										{
											"begin": 11267,
											"end": 11272,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 11240,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "195"
										},
										{
											"begin": 11240,
											"end": 11273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11240,
											"end": 11273,
											"name": "tag",
											"source": 25,
											"value": "373"
										},
										{
											"begin": 11240,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11136,
											"end": 11279,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 11136,
											"end": 11279,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 11136,
											"end": 11279,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11136,
											"end": 11279,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11136,
											"end": 11279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11285,
											"end": 11636,
											"name": "tag",
											"source": 25,
											"value": "93"
										},
										{
											"begin": 11285,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 11392,
											"end": 11401,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 11383,
											"end": 11390,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 11379,
											"end": 11402,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 11375,
											"end": 11407,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 11372,
											"end": 11491,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 11372,
											"end": 11491,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "375"
										},
										{
											"begin": 11372,
											"end": 11491,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 11410,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "376"
										},
										{
											"begin": 11410,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 11410,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11410,
											"end": 11489,
											"name": "tag",
											"source": 25,
											"value": "376"
										},
										{
											"begin": 11410,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11372,
											"end": 11491,
											"name": "tag",
											"source": 25,
											"value": "375"
										},
										{
											"begin": 11372,
											"end": 11491,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11530,
											"end": 11531,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 11555,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "377"
										},
										{
											"begin": 11611,
											"end": 11618,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 11602,
											"end": 11608,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 11591,
											"end": 11600,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 11587,
											"end": 11609,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 11555,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "220"
										},
										{
											"begin": 11555,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11555,
											"end": 11619,
											"name": "tag",
											"source": 25,
											"value": "377"
										},
										{
											"begin": 11555,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11545,
											"end": 11619,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 11545,
											"end": 11619,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11501,
											"end": 11629,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11285,
											"end": 11636,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 11285,
											"end": 11636,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 11285,
											"end": 11636,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11285,
											"end": 11636,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11285,
											"end": 11636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11642,
											"end": 11811,
											"name": "tag",
											"source": 25,
											"value": "221"
										},
										{
											"begin": 11642,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11726,
											"end": 11737,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11766,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 11755,
											"end": 11758,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 11748,
											"end": 11767,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 11800,
											"end": 11804,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 11795,
											"end": 11798,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 11791,
											"end": 11805,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 11776,
											"end": 11805,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 11776,
											"end": 11805,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11642,
											"end": 11811,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 11642,
											"end": 11811,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 11642,
											"end": 11811,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11642,
											"end": 11811,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11642,
											"end": 11811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11817,
											"end": 11986,
											"name": "tag",
											"source": 25,
											"value": "222"
										},
										{
											"begin": 11817,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 11957,
											"end": 11978,
											"name": "PUSH",
											"source": 25,
											"value": "506F6F6C20616C72656164792065786973747300000000000000000000000000"
										},
										{
											"begin": 11953,
											"end": 11954,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 11951,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 11934,
											"end": 11979,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 11817,
											"end": 11986,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11817,
											"end": 11986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 11992,
											"end": 12358,
											"name": "tag",
											"source": 25,
											"value": "223"
										},
										{
											"begin": 11992,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12134,
											"end": 12137,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "381"
										},
										{
											"begin": 12219,
											"end": 12221,
											"name": "PUSH",
											"source": 25,
											"value": "13"
										},
										{
											"begin": 12214,
											"end": 12217,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 12155,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "221"
										},
										{
											"begin": 12155,
											"end": 12222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12155,
											"end": 12222,
											"name": "tag",
											"source": 25,
											"value": "381"
										},
										{
											"begin": 12155,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12148,
											"end": 12222,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 12148,
											"end": 12222,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12231,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "382"
										},
										{
											"begin": 12320,
											"end": 12323,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 12231,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "222"
										},
										{
											"begin": 12231,
											"end": 12324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12231,
											"end": 12324,
											"name": "tag",
											"source": 25,
											"value": "382"
										},
										{
											"begin": 12231,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12349,
											"end": 12351,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 12344,
											"end": 12347,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 12340,
											"end": 12352,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11992,
											"end": 12358,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 11992,
											"end": 12358,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 11992,
											"end": 12358,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 11992,
											"end": 12358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12364,
											"end": 12783,
											"name": "tag",
											"source": 25,
											"value": "96"
										},
										{
											"begin": 12364,
											"end": 12783,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12530,
											"end": 12534,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12570,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 12557,
											"end": 12566,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 12553,
											"end": 12571,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 12545,
											"end": 12571,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 12545,
											"end": 12571,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12617,
											"end": 12626,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 12611,
											"end": 12615,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 12607,
											"end": 12627,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 12603,
											"end": 12604,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 12592,
											"end": 12601,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 12588,
											"end": 12605,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 12581,
											"end": 12628,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 12645,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "384"
										},
										{
											"begin": 12771,
											"end": 12775,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 12645,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "223"
										},
										{
											"begin": 12645,
											"end": 12776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12645,
											"end": 12776,
											"name": "tag",
											"source": 25,
											"value": "384"
										},
										{
											"begin": 12645,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12637,
											"end": 12776,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 12637,
											"end": 12776,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12364,
											"end": 12783,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 12364,
											"end": 12783,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 12364,
											"end": 12783,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12364,
											"end": 12783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12789,
											"end": 12907,
											"name": "tag",
											"source": 25,
											"value": "224"
										},
										{
											"begin": 12789,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "386"
										},
										{
											"begin": 12894,
											"end": 12899,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "193"
										},
										{
											"begin": 12876,
											"end": 12900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "tag",
											"source": 25,
											"value": "386"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12871,
											"end": 12874,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 12864,
											"end": 12901,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 12789,
											"end": 12907,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12789,
											"end": 12907,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12789,
											"end": 12907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 12913,
											"end": 13135,
											"name": "tag",
											"source": 25,
											"value": "102"
										},
										{
											"begin": 12913,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13006,
											"end": 13010,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13046,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 13033,
											"end": 13042,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 13021,
											"end": 13047,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 13021,
											"end": 13047,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13057,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "388"
										},
										{
											"begin": 13125,
											"end": 13126,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13123,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 13110,
											"end": 13127,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 13101,
											"end": 13107,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 13057,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "224"
										},
										{
											"begin": 13057,
											"end": 13128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13057,
											"end": 13128,
											"name": "tag",
											"source": 25,
											"value": "388"
										},
										{
											"begin": 13057,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 12913,
											"end": 13135,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 12913,
											"end": 13135,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 12913,
											"end": 13135,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12913,
											"end": 13135,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 12913,
											"end": 13135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13141,
											"end": 13284,
											"name": "tag",
											"source": 25,
											"value": "225"
										},
										{
											"begin": 13141,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13198,
											"end": 13203,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 13223,
											"end": 13236,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13245,
											"end": 13278,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "390"
										},
										{
											"begin": 13272,
											"end": 13277,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 13245,
											"end": 13278,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "209"
										},
										{
											"begin": 13245,
											"end": 13278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13245,
											"end": 13278,
											"name": "tag",
											"source": 25,
											"value": "390"
										},
										{
											"begin": 13245,
											"end": 13278,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13141,
											"end": 13284,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 13141,
											"end": 13284,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 13141,
											"end": 13284,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13141,
											"end": 13284,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13141,
											"end": 13284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13290,
											"end": 13641,
											"name": "tag",
											"source": 25,
											"value": "112"
										},
										{
											"begin": 13290,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13360,
											"end": 13366,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13409,
											"end": 13411,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 13397,
											"end": 13406,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 13388,
											"end": 13395,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 13384,
											"end": 13407,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 13377,
											"end": 13496,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 13377,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "392"
										},
										{
											"begin": 13377,
											"end": 13496,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "393"
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 13415,
											"end": 13494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "tag",
											"source": 25,
											"value": "393"
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13377,
											"end": 13496,
											"name": "tag",
											"source": 25,
											"value": "392"
										},
										{
											"begin": 13377,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13535,
											"end": 13536,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13560,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "394"
										},
										{
											"begin": 13616,
											"end": 13623,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 13607,
											"end": 13613,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 13596,
											"end": 13605,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 13592,
											"end": 13614,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 13560,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "225"
										},
										{
											"begin": 13560,
											"end": 13624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13560,
											"end": 13624,
											"name": "tag",
											"source": 25,
											"value": "394"
										},
										{
											"begin": 13560,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13550,
											"end": 13624,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 13550,
											"end": 13624,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13506,
											"end": 13634,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13290,
											"end": 13641,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 13290,
											"end": 13641,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 13290,
											"end": 13641,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13290,
											"end": 13641,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13290,
											"end": 13641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13647,
											"end": 13816,
											"name": "tag",
											"source": 25,
											"value": "226"
										},
										{
											"begin": 13647,
											"end": 13816,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13787,
											"end": 13808,
											"name": "PUSH",
											"source": 25,
											"value": "496E73756666696369656E7420546F6B656E4100000000000000000000000000"
										},
										{
											"begin": 13783,
											"end": 13784,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13775,
											"end": 13781,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 13771,
											"end": 13785,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 13764,
											"end": 13809,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 13647,
											"end": 13816,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13647,
											"end": 13816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13822,
											"end": 14188,
											"name": "tag",
											"source": 25,
											"value": "227"
										},
										{
											"begin": 13822,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13964,
											"end": 13967,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 13985,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "397"
										},
										{
											"begin": 14049,
											"end": 14051,
											"name": "PUSH",
											"source": 25,
											"value": "13"
										},
										{
											"begin": 14044,
											"end": 14047,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 13985,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "221"
										},
										{
											"begin": 13985,
											"end": 14052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 13985,
											"end": 14052,
											"name": "tag",
											"source": 25,
											"value": "397"
										},
										{
											"begin": 13985,
											"end": 14052,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 13978,
											"end": 14052,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 13978,
											"end": 14052,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14061,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "398"
										},
										{
											"begin": 14150,
											"end": 14153,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 14061,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "226"
										},
										{
											"begin": 14061,
											"end": 14154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 14061,
											"end": 14154,
											"name": "tag",
											"source": 25,
											"value": "398"
										},
										{
											"begin": 14061,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 14179,
											"end": 14181,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 14170,
											"end": 14182,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 14163,
											"end": 14182,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 14163,
											"end": 14182,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13822,
											"end": 14188,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 13822,
											"end": 14188,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 13822,
											"end": 14188,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 13822,
											"end": 14188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 14194,
											"end": 14613,
											"name": "tag",
											"source": 25,
											"value": "115"
										},
										{
											"begin": 14194,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 14360,
											"end": 14364,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 14398,
											"end": 14400,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 14387,
											"end": 14396,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 14375,
											"end": 14401,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 14375,
											"end": 14401,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14447,
											"end": 14456,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 14441,
											"end": 14445,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 14437,
											"end": 14457,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 14433,
											"end": 14434,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14431,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 14418,
											"end": 14435,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 14411,
											"end": 14458,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 14475,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "400"
										},
										{
											"begin": 14601,
											"end": 14605,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 14475,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "227"
										},
										{
											"begin": 14475,
											"end": 14606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 14475,
											"end": 14606,
											"name": "tag",
											"source": 25,
											"value": "400"
										},
										{
											"begin": 14475,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 14467,
											"end": 14606,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 14467,
											"end": 14606,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14194,
											"end": 14613,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 14194,
											"end": 14613,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 14194,
											"end": 14613,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14194,
											"end": 14613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 14619,
											"end": 14788,
											"name": "tag",
											"source": 25,
											"value": "228"
										},
										{
											"begin": 14619,
											"end": 14788,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 14759,
											"end": 14780,
											"name": "PUSH",
											"source": 25,
											"value": "496E73756666696369656E7420546F6B656E4200000000000000000000000000"
										},
										{
											"begin": 14755,
											"end": 14756,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 14747,
											"end": 14753,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 14743,
											"end": 14757,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 14736,
											"end": 14781,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 14619,
											"end": 14788,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14619,
											"end": 14788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 14794,
											"end": 15160,
											"name": "tag",
											"source": 25,
											"value": "229"
										},
										{
											"begin": 14794,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 14936,
											"end": 14939,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "403"
										},
										{
											"begin": 15021,
											"end": 15023,
											"name": "PUSH",
											"source": 25,
											"value": "13"
										},
										{
											"begin": 15016,
											"end": 15019,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 14957,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "221"
										},
										{
											"begin": 14957,
											"end": 15024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 14957,
											"end": 15024,
											"name": "tag",
											"source": 25,
											"value": "403"
										},
										{
											"begin": 14957,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 14950,
											"end": 15024,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 14950,
											"end": 15024,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15033,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "404"
										},
										{
											"begin": 15122,
											"end": 15125,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15033,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "228"
										},
										{
											"begin": 15033,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15033,
											"end": 15126,
											"name": "tag",
											"source": 25,
											"value": "404"
										},
										{
											"begin": 15033,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15151,
											"end": 15153,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 15146,
											"end": 15149,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15142,
											"end": 15154,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 15135,
											"end": 15154,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 15135,
											"end": 15154,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14794,
											"end": 15160,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 14794,
											"end": 15160,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 14794,
											"end": 15160,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 14794,
											"end": 15160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15166,
											"end": 15585,
											"name": "tag",
											"source": 25,
											"value": "122"
										},
										{
											"begin": 15166,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15332,
											"end": 15336,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 15370,
											"end": 15372,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 15359,
											"end": 15368,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15355,
											"end": 15373,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 15347,
											"end": 15373,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 15347,
											"end": 15373,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15419,
											"end": 15428,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 15413,
											"end": 15417,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 15409,
											"end": 15429,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 15405,
											"end": 15406,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 15394,
											"end": 15403,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 15390,
											"end": 15407,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 15383,
											"end": 15430,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 15447,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "406"
										},
										{
											"begin": 15573,
											"end": 15577,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 15447,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "229"
										},
										{
											"begin": 15447,
											"end": 15578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15447,
											"end": 15578,
											"name": "tag",
											"source": 25,
											"value": "406"
										},
										{
											"begin": 15447,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15439,
											"end": 15578,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 15439,
											"end": 15578,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15166,
											"end": 15585,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 15166,
											"end": 15585,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 15166,
											"end": 15585,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15166,
											"end": 15585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15591,
											"end": 15771,
											"name": "tag",
											"source": 25,
											"value": "230"
										},
										{
											"begin": 15591,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15639,
											"end": 15716,
											"name": "PUSH",
											"source": 25,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15636,
											"end": 15637,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 15629,
											"end": 15717,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 15736,
											"end": 15740,
											"name": "PUSH",
											"source": 25,
											"value": "11"
										},
										{
											"begin": 15733,
											"end": 15734,
											"name": "PUSH",
											"source": 25,
											"value": "4"
										},
										{
											"begin": 15726,
											"end": 15741,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 15760,
											"end": 15764,
											"name": "PUSH",
											"source": 25,
											"value": "24"
										},
										{
											"begin": 15757,
											"end": 15758,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 15777,
											"end": 15968,
											"name": "tag",
											"source": 25,
											"value": "124"
										},
										{
											"begin": 15777,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15817,
											"end": 15820,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "409"
										},
										{
											"begin": 15854,
											"end": 15855,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15836,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 15836,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15836,
											"end": 15856,
											"name": "tag",
											"source": 25,
											"value": "409"
										},
										{
											"begin": 15836,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15831,
											"end": 15856,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 15831,
											"end": 15856,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "410"
										},
										{
											"begin": 15888,
											"end": 15889,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 15870,
											"end": 15890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "tag",
											"source": 25,
											"value": "410"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15865,
											"end": 15890,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 15865,
											"end": 15890,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15913,
											"end": 15914,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15910,
											"end": 15911,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15906,
											"end": 15915,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 15899,
											"end": 15915,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 15899,
											"end": 15915,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15934,
											"end": 15937,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 15931,
											"end": 15932,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 15928,
											"end": 15938,
											"name": "GT",
											"source": 25
										},
										{
											"begin": 15925,
											"end": 15961,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 15925,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "411"
										},
										{
											"begin": 15925,
											"end": 15961,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 15941,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "412"
										},
										{
											"begin": 15941,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "230"
										},
										{
											"begin": 15941,
											"end": 15959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15941,
											"end": 15959,
											"name": "tag",
											"source": 25,
											"value": "412"
										},
										{
											"begin": 15941,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15925,
											"end": 15961,
											"name": "tag",
											"source": 25,
											"value": "411"
										},
										{
											"begin": 15925,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 15777,
											"end": 15968,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 15777,
											"end": 15968,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 15777,
											"end": 15968,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15777,
											"end": 15968,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15777,
											"end": 15968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 15974,
											"end": 16082,
											"name": "tag",
											"source": 25,
											"value": "231"
										},
										{
											"begin": 15974,
											"end": 16082,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16051,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "414"
										},
										{
											"begin": 16069,
											"end": 16074,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 16051,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "194"
										},
										{
											"begin": 16051,
											"end": 16075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16051,
											"end": 16075,
											"name": "tag",
											"source": 25,
											"value": "414"
										},
										{
											"begin": 16051,
											"end": 16075,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16046,
											"end": 16049,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16039,
											"end": 16076,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 15974,
											"end": 16082,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15974,
											"end": 16082,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 15974,
											"end": 16082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16088,
											"end": 16193,
											"name": "tag",
											"source": 25,
											"value": "232"
										},
										{
											"begin": 16088,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "416"
										},
										{
											"begin": 16180,
											"end": 16185,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "202"
										},
										{
											"begin": 16163,
											"end": 16186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "tag",
											"source": 25,
											"value": "416"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16158,
											"end": 16161,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16151,
											"end": 16187,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 16088,
											"end": 16193,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16088,
											"end": 16193,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16088,
											"end": 16193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16199,
											"end": 16301,
											"name": "tag",
											"source": 25,
											"value": "233"
										},
										{
											"begin": 16199,
											"end": 16301,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16272,
											"end": 16294,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "418"
										},
										{
											"begin": 16288,
											"end": 16293,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 16272,
											"end": 16294,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "211"
										},
										{
											"begin": 16272,
											"end": 16294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16272,
											"end": 16294,
											"name": "tag",
											"source": 25,
											"value": "418"
										},
										{
											"begin": 16272,
											"end": 16294,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16267,
											"end": 16270,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16260,
											"end": 16295,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 16199,
											"end": 16301,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16199,
											"end": 16301,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16199,
											"end": 16301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16307,
											"end": 16415,
											"name": "tag",
											"source": 25,
											"value": "234"
										},
										{
											"begin": 16307,
											"end": 16415,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16384,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "420"
										},
										{
											"begin": 16402,
											"end": 16407,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 16384,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 16384,
											"end": 16408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16384,
											"end": 16408,
											"name": "tag",
											"source": 25,
											"value": "420"
										},
										{
											"begin": 16384,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16379,
											"end": 16382,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16372,
											"end": 16409,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 16307,
											"end": 16415,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16307,
											"end": 16415,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16307,
											"end": 16415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16523,
											"end": 18660,
											"name": "tag",
											"source": 25,
											"value": "235"
										},
										{
											"begin": 16523,
											"end": 18660,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16676,
											"end": 16682,
											"name": "PUSH",
											"source": 25,
											"value": "160"
										},
										{
											"begin": 16671,
											"end": 16674,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 16767,
											"end": 16771,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 16760,
											"end": 16765,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16756,
											"end": 16772,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 16750,
											"end": 16773,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 16786,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "422"
										},
										{
											"begin": 16843,
											"end": 16847,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 16838,
											"end": 16841,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 16834,
											"end": 16848,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 16820,
											"end": 16832,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16786,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "231"
										},
										{
											"begin": 16786,
											"end": 16849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16786,
											"end": 16849,
											"name": "tag",
											"source": 25,
											"value": "422"
										},
										{
											"begin": 16786,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16693,
											"end": 16859,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16943,
											"end": 16947,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 16936,
											"end": 16941,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16932,
											"end": 16948,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 16926,
											"end": 16949,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 16962,
											"end": 17025,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "423"
										},
										{
											"begin": 17019,
											"end": 17023,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 17014,
											"end": 17017,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 17010,
											"end": 17024,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 16996,
											"end": 17008,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 16962,
											"end": 17025,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "231"
										},
										{
											"begin": 16962,
											"end": 17025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 16962,
											"end": 17025,
											"name": "tag",
											"source": 25,
											"value": "423"
										},
										{
											"begin": 16962,
											"end": 17025,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 16869,
											"end": 17035,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 17116,
											"end": 17120,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17114,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17105,
											"end": 17121,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17099,
											"end": 17122,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 17135,
											"end": 17196,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "424"
										},
										{
											"begin": 17190,
											"end": 17194,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17188,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 17181,
											"end": 17195,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17167,
											"end": 17179,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17135,
											"end": 17196,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "232"
										},
										{
											"begin": 17135,
											"end": 17196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 17135,
											"end": 17196,
											"name": "tag",
											"source": 25,
											"value": "424"
										},
										{
											"begin": 17135,
											"end": 17196,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 17045,
											"end": 17206,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 17293,
											"end": 17297,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 17286,
											"end": 17291,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17282,
											"end": 17298,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17276,
											"end": 17299,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 17312,
											"end": 17371,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "425"
										},
										{
											"begin": 17365,
											"end": 17369,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 17360,
											"end": 17363,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 17356,
											"end": 17370,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17342,
											"end": 17354,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17312,
											"end": 17371,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "233"
										},
										{
											"begin": 17312,
											"end": 17371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 17312,
											"end": 17371,
											"name": "tag",
											"source": 25,
											"value": "425"
										},
										{
											"begin": 17312,
											"end": 17371,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 17216,
											"end": 17381,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 17468,
											"end": 17472,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 17461,
											"end": 17466,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17457,
											"end": 17473,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17451,
											"end": 17474,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 17487,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "426"
										},
										{
											"begin": 17540,
											"end": 17544,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 17535,
											"end": 17538,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 17531,
											"end": 17545,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17517,
											"end": 17529,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17487,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "233"
										},
										{
											"begin": 17487,
											"end": 17546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 17487,
											"end": 17546,
											"name": "tag",
											"source": 25,
											"value": "426"
										},
										{
											"begin": 17487,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 17391,
											"end": 17556,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 17648,
											"end": 17652,
											"name": "PUSH",
											"source": 25,
											"value": "A0"
										},
										{
											"begin": 17641,
											"end": 17646,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17637,
											"end": 17653,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17631,
											"end": 17654,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 17667,
											"end": 17730,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "427"
										},
										{
											"begin": 17724,
											"end": 17728,
											"name": "PUSH",
											"source": 25,
											"value": "A0"
										},
										{
											"begin": 17719,
											"end": 17722,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 17715,
											"end": 17729,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17701,
											"end": 17713,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17667,
											"end": 17730,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "234"
										},
										{
											"begin": 17667,
											"end": 17730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 17667,
											"end": 17730,
											"name": "tag",
											"source": 25,
											"value": "427"
										},
										{
											"begin": 17667,
											"end": 17730,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 17566,
											"end": 17740,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 17832,
											"end": 17836,
											"name": "PUSH",
											"source": 25,
											"value": "C0"
										},
										{
											"begin": 17825,
											"end": 17830,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17821,
											"end": 17837,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17815,
											"end": 17838,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 17851,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "428"
										},
										{
											"begin": 17908,
											"end": 17912,
											"name": "PUSH",
											"source": 25,
											"value": "C0"
										},
										{
											"begin": 17903,
											"end": 17906,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 17899,
											"end": 17913,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17885,
											"end": 17897,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 17851,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "234"
										},
										{
											"begin": 17851,
											"end": 17914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 17851,
											"end": 17914,
											"name": "tag",
											"source": 25,
											"value": "428"
										},
										{
											"begin": 17851,
											"end": 17914,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 17750,
											"end": 17924,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18012,
											"end": 18016,
											"name": "PUSH",
											"source": 25,
											"value": "E0"
										},
										{
											"begin": 18005,
											"end": 18010,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18001,
											"end": 18017,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 17995,
											"end": 18018,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 18031,
											"end": 18094,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "429"
										},
										{
											"begin": 18088,
											"end": 18092,
											"name": "PUSH",
											"source": 25,
											"value": "E0"
										},
										{
											"begin": 18083,
											"end": 18086,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 18079,
											"end": 18093,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18065,
											"end": 18077,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18031,
											"end": 18094,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "234"
										},
										{
											"begin": 18031,
											"end": 18094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 18031,
											"end": 18094,
											"name": "tag",
											"source": 25,
											"value": "429"
										},
										{
											"begin": 18031,
											"end": 18094,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 17934,
											"end": 18104,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18192,
											"end": 18198,
											"name": "PUSH",
											"source": 25,
											"value": "100"
										},
										{
											"begin": 18185,
											"end": 18190,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18181,
											"end": 18199,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18175,
											"end": 18200,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 18213,
											"end": 18278,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "430"
										},
										{
											"begin": 18270,
											"end": 18276,
											"name": "PUSH",
											"source": 25,
											"value": "100"
										},
										{
											"begin": 18265,
											"end": 18268,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 18261,
											"end": 18277,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18213,
											"end": 18278,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "234"
										},
										{
											"begin": 18213,
											"end": 18278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 18213,
											"end": 18278,
											"name": "tag",
											"source": 25,
											"value": "430"
										},
										{
											"begin": 18213,
											"end": 18278,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 18114,
											"end": 18288,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18375,
											"end": 18381,
											"name": "PUSH",
											"source": 25,
											"value": "120"
										},
										{
											"begin": 18368,
											"end": 18373,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18364,
											"end": 18382,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18358,
											"end": 18383,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 18396,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "431"
										},
										{
											"begin": 18453,
											"end": 18459,
											"name": "PUSH",
											"source": 25,
											"value": "120"
										},
										{
											"begin": 18448,
											"end": 18451,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 18444,
											"end": 18460,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18430,
											"end": 18442,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18396,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "231"
										},
										{
											"begin": 18396,
											"end": 18461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 18396,
											"end": 18461,
											"name": "tag",
											"source": 25,
											"value": "431"
										},
										{
											"begin": 18396,
											"end": 18461,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 18298,
											"end": 18471,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18557,
											"end": 18563,
											"name": "PUSH",
											"source": 25,
											"value": "140"
										},
										{
											"begin": 18550,
											"end": 18555,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18546,
											"end": 18564,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18540,
											"end": 18565,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 18578,
											"end": 18643,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "432"
										},
										{
											"begin": 18635,
											"end": 18641,
											"name": "PUSH",
											"source": 25,
											"value": "140"
										},
										{
											"begin": 18630,
											"end": 18633,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 18626,
											"end": 18642,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18612,
											"end": 18624,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18578,
											"end": 18643,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "234"
										},
										{
											"begin": 18578,
											"end": 18643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 18578,
											"end": 18643,
											"name": "tag",
											"source": 25,
											"value": "432"
										},
										{
											"begin": 18578,
											"end": 18643,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 18481,
											"end": 18653,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16645,
											"end": 18660,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16523,
											"end": 18660,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16523,
											"end": 18660,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 16523,
											"end": 18660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 18666,
											"end": 19001,
											"name": "tag",
											"source": 25,
											"value": "126"
										},
										{
											"begin": 18666,
											"end": 19001,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 18815,
											"end": 18819,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 18853,
											"end": 18856,
											"name": "PUSH",
											"source": 25,
											"value": "160"
										},
										{
											"begin": 18842,
											"end": 18851,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 18838,
											"end": 18857,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18830,
											"end": 18857,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 18830,
											"end": 18857,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18867,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "434"
										},
										{
											"begin": 18991,
											"end": 18992,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 18980,
											"end": 18989,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 18967,
											"end": 18973,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 18867,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "235"
										},
										{
											"begin": 18867,
											"end": 18994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 18867,
											"end": 18994,
											"name": "tag",
											"source": 25,
											"value": "434"
										},
										{
											"begin": 18867,
											"end": 18994,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 18666,
											"end": 19001,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 18666,
											"end": 19001,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 18666,
											"end": 19001,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18666,
											"end": 19001,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 18666,
											"end": 19001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19007,
											"end": 19129,
											"name": "tag",
											"source": 25,
											"value": "236"
										},
										{
											"begin": 19007,
											"end": 19129,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19080,
											"end": 19104,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "436"
										},
										{
											"begin": 19098,
											"end": 19103,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 19080,
											"end": 19104,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "215"
										},
										{
											"begin": 19080,
											"end": 19104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19080,
											"end": 19104,
											"name": "tag",
											"source": 25,
											"value": "436"
										},
										{
											"begin": 19080,
											"end": 19104,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19073,
											"end": 19078,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 19070,
											"end": 19105,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 19060,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "437"
										},
										{
											"begin": 19060,
											"end": 19123,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 19119,
											"end": 19120,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 19116,
											"end": 19117,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 19109,
											"end": 19121,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 19060,
											"end": 19123,
											"name": "tag",
											"source": 25,
											"value": "437"
										},
										{
											"begin": 19060,
											"end": 19123,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19007,
											"end": 19129,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19007,
											"end": 19129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19135,
											"end": 19278,
											"name": "tag",
											"source": 25,
											"value": "237"
										},
										{
											"begin": 19135,
											"end": 19278,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19192,
											"end": 19197,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 19223,
											"end": 19229,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 19217,
											"end": 19230,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 19208,
											"end": 19230,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 19208,
											"end": 19230,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19239,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "439"
										},
										{
											"begin": 19266,
											"end": 19271,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 19239,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "236"
										},
										{
											"begin": 19239,
											"end": 19272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19239,
											"end": 19272,
											"name": "tag",
											"source": 25,
											"value": "439"
										},
										{
											"begin": 19239,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19135,
											"end": 19278,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 19135,
											"end": 19278,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 19135,
											"end": 19278,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19135,
											"end": 19278,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19135,
											"end": 19278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "tag",
											"source": 25,
											"value": "130"
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19381,
											"end": 19387,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 19389,
											"end": 19395,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 19397,
											"end": 19403,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 19405,
											"end": 19411,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 19454,
											"end": 19457,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 19442,
											"end": 19451,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 19433,
											"end": 19440,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 19429,
											"end": 19452,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 19425,
											"end": 19458,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 19422,
											"end": 19542,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 19422,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "441"
										},
										{
											"begin": 19422,
											"end": 19542,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 19461,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "442"
										},
										{
											"begin": 19461,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 19461,
											"end": 19540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19461,
											"end": 19540,
											"name": "tag",
											"source": 25,
											"value": "442"
										},
										{
											"begin": 19461,
											"end": 19540,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19422,
											"end": 19542,
											"name": "tag",
											"source": 25,
											"value": "441"
										},
										{
											"begin": 19422,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19581,
											"end": 19582,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 19606,
											"end": 19670,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "443"
										},
										{
											"begin": 19662,
											"end": 19669,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 19653,
											"end": 19659,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 19642,
											"end": 19651,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 19638,
											"end": 19660,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 19606,
											"end": 19670,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "225"
										},
										{
											"begin": 19606,
											"end": 19670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19606,
											"end": 19670,
											"name": "tag",
											"source": 25,
											"value": "443"
										},
										{
											"begin": 19606,
											"end": 19670,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19596,
											"end": 19670,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 19596,
											"end": 19670,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19552,
											"end": 19680,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19719,
											"end": 19721,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 19745,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "444"
										},
										{
											"begin": 19801,
											"end": 19808,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 19781,
											"end": 19790,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 19777,
											"end": 19799,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 19745,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "237"
										},
										{
											"begin": 19745,
											"end": 19809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19745,
											"end": 19809,
											"name": "tag",
											"source": 25,
											"value": "444"
										},
										{
											"begin": 19745,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19735,
											"end": 19809,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 19735,
											"end": 19809,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19690,
											"end": 19819,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19858,
											"end": 19860,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 19884,
											"end": 19948,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "445"
										},
										{
											"begin": 19940,
											"end": 19947,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 19931,
											"end": 19937,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 19920,
											"end": 19929,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 19916,
											"end": 19938,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 19884,
											"end": 19948,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "225"
										},
										{
											"begin": 19884,
											"end": 19948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 19884,
											"end": 19948,
											"name": "tag",
											"source": 25,
											"value": "445"
										},
										{
											"begin": 19884,
											"end": 19948,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 19874,
											"end": 19948,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 19874,
											"end": 19948,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19829,
											"end": 19958,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19997,
											"end": 19999,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 20023,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "446"
										},
										{
											"begin": 20079,
											"end": 20086,
											"name": "DUP8",
											"source": 25
										},
										{
											"begin": 20070,
											"end": 20076,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 20059,
											"end": 20068,
											"name": "DUP9",
											"source": 25
										},
										{
											"begin": 20055,
											"end": 20077,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 20023,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "225"
										},
										{
											"begin": 20023,
											"end": 20087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20023,
											"end": 20087,
											"name": "tag",
											"source": 25,
											"value": "446"
										},
										{
											"begin": 20023,
											"end": 20087,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20013,
											"end": 20087,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 20013,
											"end": 20087,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19968,
											"end": 20097,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "SWAP6",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "SWAP5",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 19284,
											"end": 20104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20110,
											"end": 20304,
											"name": "tag",
											"source": 25,
											"value": "133"
										},
										{
											"begin": 20110,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20150,
											"end": 20154,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "448"
										},
										{
											"begin": 20188,
											"end": 20189,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 20170,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "tag",
											"source": 25,
											"value": "448"
										},
										{
											"begin": 20170,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20165,
											"end": 20190,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 20165,
											"end": 20190,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20204,
											"end": 20224,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "449"
										},
										{
											"begin": 20222,
											"end": 20223,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 20204,
											"end": 20224,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "208"
										},
										{
											"begin": 20204,
											"end": 20224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20204,
											"end": 20224,
											"name": "tag",
											"source": 25,
											"value": "449"
										},
										{
											"begin": 20204,
											"end": 20224,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20199,
											"end": 20224,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 20199,
											"end": 20224,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20248,
											"end": 20249,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 20245,
											"end": 20246,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 20241,
											"end": 20250,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 20233,
											"end": 20250,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 20233,
											"end": 20250,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20272,
											"end": 20273,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 20266,
											"end": 20270,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 20263,
											"end": 20274,
											"name": "GT",
											"source": 25
										},
										{
											"begin": 20260,
											"end": 20297,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 20260,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "450"
										},
										{
											"begin": 20260,
											"end": 20297,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 20277,
											"end": 20295,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "451"
										},
										{
											"begin": 20277,
											"end": 20295,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "230"
										},
										{
											"begin": 20277,
											"end": 20295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20277,
											"end": 20295,
											"name": "tag",
											"source": 25,
											"value": "451"
										},
										{
											"begin": 20277,
											"end": 20295,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20260,
											"end": 20297,
											"name": "tag",
											"source": 25,
											"value": "450"
										},
										{
											"begin": 20260,
											"end": 20297,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20110,
											"end": 20304,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 20110,
											"end": 20304,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 20110,
											"end": 20304,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20110,
											"end": 20304,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20110,
											"end": 20304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "tag",
											"source": 25,
											"value": "135"
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20431,
											"end": 20435,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 20469,
											"end": 20471,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 20458,
											"end": 20467,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 20454,
											"end": 20472,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 20446,
											"end": 20472,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 20446,
											"end": 20472,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20482,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "453"
										},
										{
											"begin": 20550,
											"end": 20551,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 20539,
											"end": 20548,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 20535,
											"end": 20552,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 20526,
											"end": 20532,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 20482,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "207"
										},
										{
											"begin": 20482,
											"end": 20553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20482,
											"end": 20553,
											"name": "tag",
											"source": 25,
											"value": "453"
										},
										{
											"begin": 20482,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20563,
											"end": 20635,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "454"
										},
										{
											"begin": 20631,
											"end": 20633,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 20620,
											"end": 20629,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 20616,
											"end": 20634,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 20607,
											"end": 20613,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 20563,
											"end": 20635,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "214"
										},
										{
											"begin": 20563,
											"end": 20635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20563,
											"end": 20635,
											"name": "tag",
											"source": 25,
											"value": "454"
										},
										{
											"begin": 20563,
											"end": 20635,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20310,
											"end": 20642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20648,
											"end": 20764,
											"name": "tag",
											"source": 25,
											"value": "238"
										},
										{
											"begin": 20648,
											"end": 20764,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20718,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "456"
										},
										{
											"begin": 20733,
											"end": 20738,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 20718,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "187"
										},
										{
											"begin": 20718,
											"end": 20739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20718,
											"end": 20739,
											"name": "tag",
											"source": 25,
											"value": "456"
										},
										{
											"begin": 20718,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20711,
											"end": 20716,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 20708,
											"end": 20740,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 20698,
											"end": 20758,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "457"
										},
										{
											"begin": 20698,
											"end": 20758,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 20754,
											"end": 20755,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 20751,
											"end": 20752,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 20744,
											"end": 20756,
											"name": "REVERT",
											"source": 25
										},
										{
											"begin": 20698,
											"end": 20758,
											"name": "tag",
											"source": 25,
											"value": "457"
										},
										{
											"begin": 20698,
											"end": 20758,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20648,
											"end": 20764,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20648,
											"end": 20764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20770,
											"end": 20907,
											"name": "tag",
											"source": 25,
											"value": "239"
										},
										{
											"begin": 20770,
											"end": 20907,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20824,
											"end": 20829,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 20855,
											"end": 20861,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 20849,
											"end": 20862,
											"name": "MLOAD",
											"source": 25
										},
										{
											"begin": 20840,
											"end": 20862,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 20840,
											"end": 20862,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20871,
											"end": 20901,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "459"
										},
										{
											"begin": 20895,
											"end": 20900,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 20871,
											"end": 20901,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "238"
										},
										{
											"begin": 20871,
											"end": 20901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20871,
											"end": 20901,
											"name": "tag",
											"source": 25,
											"value": "459"
										},
										{
											"begin": 20871,
											"end": 20901,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20770,
											"end": 20907,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 20770,
											"end": 20907,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 20770,
											"end": 20907,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20770,
											"end": 20907,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20770,
											"end": 20907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 20913,
											"end": 21258,
											"name": "tag",
											"source": 25,
											"value": "139"
										},
										{
											"begin": 20913,
											"end": 21258,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20980,
											"end": 20986,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 21029,
											"end": 21031,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 21017,
											"end": 21026,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 21008,
											"end": 21015,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 21004,
											"end": 21027,
											"name": "SUB",
											"source": 25
										},
										{
											"begin": 21000,
											"end": 21032,
											"name": "SLT",
											"source": 25
										},
										{
											"begin": 20997,
											"end": 21116,
											"name": "ISZERO",
											"source": 25
										},
										{
											"begin": 20997,
											"end": 21116,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "461"
										},
										{
											"begin": 20997,
											"end": 21116,
											"name": "JUMPI",
											"source": 25
										},
										{
											"begin": 21035,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "462"
										},
										{
											"begin": 21035,
											"end": 21114,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "182"
										},
										{
											"begin": 21035,
											"end": 21114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 21035,
											"end": 21114,
											"name": "tag",
											"source": 25,
											"value": "462"
										},
										{
											"begin": 21035,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 20997,
											"end": 21116,
											"name": "tag",
											"source": 25,
											"value": "461"
										},
										{
											"begin": 20997,
											"end": 21116,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 21155,
											"end": 21156,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 21180,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "463"
										},
										{
											"begin": 21233,
											"end": 21240,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 21224,
											"end": 21230,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 21213,
											"end": 21222,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 21209,
											"end": 21231,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 21180,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "239"
										},
										{
											"begin": 21180,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 21180,
											"end": 21241,
											"name": "tag",
											"source": 25,
											"value": "463"
										},
										{
											"begin": 21180,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 21170,
											"end": 21241,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 21170,
											"end": 21241,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 21126,
											"end": 21251,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20913,
											"end": 21258,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 20913,
											"end": 21258,
											"name": "SWAP2",
											"source": 25
										},
										{
											"begin": 20913,
											"end": 21258,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20913,
											"end": 21258,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 20913,
											"end": 21258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "tag",
											"source": 25,
											"value": "180"
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 21385,
											"end": 21389,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 21423,
											"end": 21425,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 21412,
											"end": 21421,
											"name": "DUP3",
											"source": 25
										},
										{
											"begin": 21408,
											"end": 21426,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 21400,
											"end": 21426,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 21400,
											"end": 21426,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 21436,
											"end": 21507,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "465"
										},
										{
											"begin": 21504,
											"end": 21505,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 21493,
											"end": 21502,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 21489,
											"end": 21506,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 21480,
											"end": 21486,
											"name": "DUP6",
											"source": 25
										},
										{
											"begin": 21436,
											"end": 21507,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "207"
										},
										{
											"begin": 21436,
											"end": 21507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 21436,
											"end": 21507,
											"name": "tag",
											"source": 25,
											"value": "465"
										},
										{
											"begin": 21436,
											"end": 21507,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 21517,
											"end": 21589,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "466"
										},
										{
											"begin": 21585,
											"end": 21587,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 21574,
											"end": 21583,
											"name": "DUP4",
											"source": 25
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "ADD",
											"source": 25
										},
										{
											"begin": 21561,
											"end": 21567,
											"name": "DUP5",
											"source": 25
										},
										{
											"begin": 21517,
											"end": 21589,
											"name": "PUSH [tag]",
											"source": 25,
											"value": "192"
										},
										{
											"begin": 21517,
											"end": 21589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 25
										},
										{
											"begin": 21517,
											"end": 21589,
											"name": "tag",
											"source": 25,
											"value": "466"
										},
										{
											"begin": 21517,
											"end": 21589,
											"name": "JUMPDEST",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "SWAP4",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "SWAP3",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"name": "POP",
											"source": 25
										},
										{
											"begin": 21264,
											"end": 21596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 25
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
								"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
								"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
								"lib/v3-periphery/contracts/libraries/PoolAddress.sol",
								"src/LiquidityPoolManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)": "afbce84e",
							"approveTokens(address,address,uint256,uint256)": "ecf4daa7",
							"createPool(address,address,uint24,uint160)": "8e909e51",
							"factory()": "c45a0155",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"positionManager()": "791b98bc",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"approveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)\":{\"notice\":\"Adds liquidity to the specified pool, creating a new position NFT\"},\"approveTokens(address,address,uint256,uint256)\":{\"notice\":\"Approve tokens for the Uniswap position manager\"},\"createPool(address,address,uint24,uint160)\":{\"notice\":\"Create the Uniswap V3 pool for the specified token pair and fee tier if it doesn\\u2019t exist, then return its address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LiquidityPoolManager.sol\":\"UniswapV3LiquidityManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x3357b065654abb7f4a9ebd184a260bc39efde2afa4e99dca2e72ffc28e9c2984\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7682dab014724be8e0a5a401b047788ff9c70b77fa5bd567ea6adc333cb3b56\",\"dweb:/ipfs/QmatH1Gc6z3AkP4dHjAEBKfCBbgBfD4vCceF4TuZU2bCyW\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/LiquidityPoolManager.sol\":{\"keccak256\":\"0xe15d0d490ddcb78f345a77ce93d92e5d2764fb1286a1f6f05dfea558387d1db8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d556f9dabd4e15752064c7e5af93edff7a002117833debe0de4b376ffc3efd\",\"dweb:/ipfs/Qmavhe7ogZdbCbQvd2w4fM1arexayHJs6TvXqHAS9ggVGv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "src/LiquidityPoolManager.sol:UniswapV3LiquidityManager",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1667,
								"contract": "src/LiquidityPoolManager.sol:UniswapV3LiquidityManager",
								"label": "positionManager",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(INonfungiblePositionManager)1496"
							},
							{
								"astId": 1670,
								"contract": "src/LiquidityPoolManager.sol:UniswapV3LiquidityManager",
								"label": "factory",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IUniswapV3Factory)782"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INonfungiblePositionManager)1496": {
								"encoding": "inplace",
								"label": "contract INonfungiblePositionManager",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV3Factory)782": {
								"encoding": "inplace",
								"label": "contract IUniswapV3Factory",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/LiquidityPoolManager.sol:UniswapV3LiquidityManager",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/LiquidityPoolManager.sol:UniswapV3LiquidityManager",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(address,address,uint24,uint256,uint256,int24,int24)": {
								"notice": "Adds liquidity to the specified pool, creating a new position NFT"
							},
							"approveTokens(address,address,uint256,uint256)": {
								"notice": "Approve tokens for the Uniswap position manager"
							},
							"createPool(address,address,uint24,uint160)": {
								"notice": "Create the Uniswap V3 pool for the specified token pair and fee tier if it doesnâ€™t exist, then return its address"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							663
						],
						"ERC165": [
							687
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 664,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 663,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 688,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 687,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								687,
								699,
								378,
								663
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 456,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 456,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 456,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 456,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 456,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 456,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							699
						],
						"IERC721": [
							573
						]
					},
					"id": 574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 700,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 459,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 699,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "IERC165",
										"nameLocations": [
											"288:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "288:7:3"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:3",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 573,
							"linearizedBaseContracts": [
								573,
								699
							],
							"name": "IERC721",
							"nameLocation": "277:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 472,
									"name": "Transfer",
									"nameLocation": "401:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "410:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "432:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "452:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:3"
									},
									"src": "395:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 481,
									"name": "Approval",
									"nameLocation": "588:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "597:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "620:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "646:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:3"
									},
									"src": "582:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 490,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "820:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "843:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "869:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:3"
									},
									"src": "799:85:3"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "990:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1028:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:3"
									},
									"scope": 573,
									"src": "971:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1204:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1244:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:3"
									},
									"scope": 573,
									"src": "1187:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1861:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1875:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1887:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1904:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:3"
									},
									"scope": 573,
									"src": "1835:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2691:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:3"
									},
									"scope": 573,
									"src": "2651:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3495:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3509:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3521:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:3"
									},
									"scope": 573,
									"src": "3473:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4027:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:3"
									},
									"scope": 573,
									"src": "4010:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4418:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4436:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:3"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:3"
									},
									"scope": 573,
									"src": "4391:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4631:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4671:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:3"
									},
									"scope": 573,
									"src": "4610:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4864:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4879:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4920:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:3"
									},
									"scope": 573,
									"src": "4838:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 574,
							"src": "267:4661:3",
							"usedErrors": [],
							"usedEvents": [
								472,
								481,
								490
							]
						}
					],
					"src": "108:4821:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							573
						],
						"IERC721Enumerable": [
							605
						]
					},
					"id": 606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:4"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 606,
							"sourceUnit": 574,
							"src": "155:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 576,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 573,
										"src": "163:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 579,
										"name": "IERC721",
										"nameLocations": [
											"364:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 573,
										"src": "364:7:4"
									},
									"id": 580,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:4"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 578,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 605,
							"linearizedBaseContracts": [
								605,
								573,
								699
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:4",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:4"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "511:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:4"
									},
									"scope": 605,
									"src": "465:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:4",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "731:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "746:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "784:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:4"
									},
									"scope": 605,
									"src": "702:91:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:4",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "990:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1028:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:4"
									},
									"scope": 605,
									"src": "968:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 606,
							"src": "333:706:4",
							"usedErrors": [],
							"usedEvents": [
								472,
								481,
								490
							]
						}
					],
					"src": "129:911:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							573
						],
						"IERC721Metadata": [
							633
						]
					},
					"id": 634,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 607,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 634,
							"sourceUnit": 574,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 608,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 573,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 611,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 573,
										"src": "357:7:5"
									},
									"id": 612,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 610,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 633,
							"linearizedBaseContracts": [
								633,
								573,
								699
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 615,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 633,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 633,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 633,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 634,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								472,
								481,
								490
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 635,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 636,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 641,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 640,
												"id": 643,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 663,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 650,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 649,
												"id": 652,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 663,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 658,
												"id": 660,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 663,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 664,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							687
						],
						"IERC165": [
							699
						]
					},
					"id": 688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 700,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 666,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 699,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "IERC165",
										"nameLocations": [
											"688:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "688:7:7"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687,
								699
							],
							"name": "ERC165",
							"nameLocation": "678:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "845:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "862:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "882:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$699_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$699_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 679,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$699",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 677,
												"id": 684,
												"nodeType": "Return",
												"src": "855:47:7"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "790:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 672,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:7"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "839:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:7"
									},
									"scope": 687,
									"src": "763:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 688,
							"src": "660:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:7"
				},
				"id": 7
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							699
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 689,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 690,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 692,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 699,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 700,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							782
						]
					},
					"id": 783,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:9",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 782,
							"linearizedBaseContracts": [
								782
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "244:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:9",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 709,
									"name": "OwnerChanged",
									"nameLocation": "464:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "493:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "477:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "519:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "503:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:52:9"
									},
									"src": "458:71:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:9",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
									"id": 722,
									"name": "PoolCreated",
									"nameLocation": "967:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1004:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "988:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1036:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1020:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1067:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1052:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 715,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1086:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1080:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 717,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1115:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1107:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:147:9"
									},
									"src": "961:165:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:9",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
									"id": 729,
									"name": "FeeAmountEnabled",
									"nameLocation": "1418:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1450:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1435:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 724,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1469:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1455:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 726,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:47:9"
									},
									"src": "1412:70:9"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:9",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1665:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:9"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1696:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:9"
									},
									"scope": 782,
									"src": "1656:49:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:9",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nameLocation": "2073:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2101:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2094:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 737,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:12:9"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2129:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 740,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:7:9"
									},
									"scope": 782,
									"src": "2064:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:9",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "2627:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2652:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2644:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2676:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2668:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2699:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2692:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 749,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:74:9"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2740:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2732:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:14:9"
									},
									"scope": 782,
									"src": "2618:128:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:9",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3320:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3348:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3340:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3372:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3364:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3395:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3388:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 761,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:74:9"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3431:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3423:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:14:9"
									},
									"scope": 782,
									"src": "3311:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:9",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "3601:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3618:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3610:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:16:9"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:9"
									},
									"scope": 782,
									"src": "3592:43:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:9",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nameLocation": "3981:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4004:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3997:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 775,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "4015:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "4009:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 777,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:31:9"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:9"
									},
									"scope": 782,
									"src": "3972:65:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 783,
							"src": "234:3805:9",
							"usedErrors": [],
							"usedEvents": [
								709,
								722,
								729
							]
						}
					],
					"src": "45:3995:9"
				},
				"id": 9
			},
			"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							814
						],
						"IUniswapV3PoolActions": [
							910
						],
						"IUniswapV3PoolDerivedState": [
							941
						],
						"IUniswapV3PoolErrors": [
							969
						],
						"IUniswapV3PoolEvents": [
							1088
						],
						"IUniswapV3PoolImmutables": [
							1128
						],
						"IUniswapV3PoolOwnerActions": [
							1154
						],
						"IUniswapV3PoolState": [
							1262
						]
					},
					"id": 815,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 784,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 786,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 1129,
							"src": "71:77:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 785,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1128,
										"src": "79:24:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 1263,
							"src": "149:67:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 787,
										"name": "IUniswapV3PoolState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "157:19:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 790,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 942,
							"src": "217:81:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 789,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 941,
										"src": "225:26:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 792,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 911,
							"src": "299:71:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 791,
										"name": "IUniswapV3PoolActions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 910,
										"src": "307:21:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 794,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 1155,
							"src": "371:81:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 793,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1154,
										"src": "379:26:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
							"file": "./pool/IUniswapV3PoolErrors.sol",
							"id": 796,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 970,
							"src": "453:69:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 795,
										"name": "IUniswapV3PoolErrors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 969,
										"src": "461:20:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 1089,
							"src": "523:69:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 797,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1088,
										"src": "531:20:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 800,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"891:24:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1128,
										"src": "891:24:10"
									},
									"id": 801,
									"nodeType": "InheritanceSpecifier",
									"src": "891:24:10"
								},
								{
									"baseName": {
										"id": 802,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"921:19:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "921:19:10"
									},
									"id": 803,
									"nodeType": "InheritanceSpecifier",
									"src": "921:19:10"
								},
								{
									"baseName": {
										"id": 804,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"946:26:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 941,
										"src": "946:26:10"
									},
									"id": 805,
									"nodeType": "InheritanceSpecifier",
									"src": "946:26:10"
								},
								{
									"baseName": {
										"id": 806,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"978:21:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 910,
										"src": "978:21:10"
									},
									"id": 807,
									"nodeType": "InheritanceSpecifier",
									"src": "978:21:10"
								},
								{
									"baseName": {
										"id": 808,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"1005:26:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "1005:26:10"
									},
									"id": 809,
									"nodeType": "InheritanceSpecifier",
									"src": "1005:26:10"
								},
								{
									"baseName": {
										"id": 810,
										"name": "IUniswapV3PoolErrors",
										"nameLocations": [
											"1037:20:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "1037:20:10"
									},
									"id": 811,
									"nodeType": "InheritanceSpecifier",
									"src": "1037:20:10"
								},
								{
									"baseName": {
										"id": 812,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"1063:20:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1088,
										"src": "1063:20:10"
									},
									"id": 813,
									"nodeType": "InheritanceSpecifier",
									"src": "1063:20:10"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 799,
								"nodeType": "StructuredDocumentation",
								"src": "594:265:10",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 814,
							"linearizedBaseContracts": [
								814,
								1088,
								969,
								1154,
								910,
								941,
								1262,
								1128
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "869:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 815,
							"src": "859:229:10",
							"usedErrors": [
								946,
								948,
								950,
								952,
								954,
								956,
								958,
								960,
								962,
								964,
								966,
								968
							],
							"usedEvents": [
								979,
								996,
								1011,
								1026,
								1043,
								1058,
								1065,
								1076,
								1087
							]
						}
					],
					"src": "45:1044:10"
				},
				"id": 10
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							910
						]
					},
					"id": 911,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 816,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 817,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:11",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 910,
							"linearizedBaseContracts": [
								910
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:11",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "442:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 819,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:11"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:11"
									},
									"scope": 910,
									"src": "422:51:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:11",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1536:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1563:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 827,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1588:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 829,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1613:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 831,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1637:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:11"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1681:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1698:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:11"
									},
									"scope": 910,
									"src": "1513:202:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:11",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2805:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2832:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 845,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2857:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 847,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2882:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 849,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2916:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 851,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:11"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2965:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 854,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2982:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 856,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:11"
									},
									"scope": 910,
									"src": "2779:220:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:11",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3664:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 861,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3689:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 863,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3714:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 865,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:11"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3753:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3770:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:11"
									},
									"scope": 910,
									"src": "3641:146:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:11",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4836:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4863:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4888:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 879,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4920:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 881,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4955:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:11"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4999:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 886,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "5015:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 888,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:11"
									},
									"scope": 910,
									"src": "4813:218:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:11",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5723:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5750:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5775:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5800:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:11"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:11"
									},
									"scope": 910,
									"src": "5699:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:11",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:11",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6257:33:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 905,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:11"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:11"
									},
									"scope": 910,
									"src": "6213:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 911,
							"src": "173:6130:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:11"
				},
				"id": 11
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							941
						]
					},
					"id": 942,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 912,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:12",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 941,
							"linearizedBaseContracts": [
								941
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:12",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1403:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 915,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 916,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:12"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1481:30:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 919,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 920,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:12",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1513:51:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 922,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 923,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:12"
									},
									"scope": 941,
									"src": "1386:180:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:12",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2383:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 928,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2400:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 930,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:12"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2477:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 933,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:12",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2517:37:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 935,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2568:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 937,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:12"
									},
									"scope": 941,
									"src": "2348:251:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 942,
							"src": "293:2308:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:12"
				},
				"id": 12
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol",
					"exportedSymbols": {
						"IUniswapV3PoolErrors": [
							969
						]
					},
					"id": 970,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 943,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolErrors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 944,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:13",
								"text": "@title Errors emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969
							],
							"name": "IUniswapV3PoolErrors",
							"nameLocation": "169:20:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "a1bf7886",
									"id": 946,
									"name": "LOK",
									"nameLocation": "202:3:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:13"
									},
									"src": "196:12:13"
								},
								{
									"errorSelector": "2fe0284f",
									"id": 948,
									"name": "TLU",
									"nameLocation": "219:3:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:2:13"
									},
									"src": "213:12:13"
								},
								{
									"errorSelector": "9ad612e8",
									"id": 950,
									"name": "TLM",
									"nameLocation": "236:3:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:13"
									},
									"src": "230:12:13"
								},
								{
									"errorSelector": "d7b54ab1",
									"id": 952,
									"name": "TUM",
									"nameLocation": "253:3:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:2:13"
									},
									"src": "247:12:13"
								},
								{
									"errorSelector": "9cc0b7f8",
									"id": 954,
									"name": "AI",
									"nameLocation": "270:2:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:13"
									},
									"src": "264:11:13"
								},
								{
									"errorSelector": "748800af",
									"id": 956,
									"name": "M0",
									"nameLocation": "286:2:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:2:13"
									},
									"src": "280:11:13"
								},
								{
									"errorSelector": "20e5672e",
									"id": 958,
									"name": "M1",
									"nameLocation": "302:2:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:13"
									},
									"src": "296:11:13"
								},
								{
									"errorSelector": "03fff018",
									"id": 960,
									"name": "AS",
									"nameLocation": "318:2:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:13"
									},
									"src": "312:11:13"
								},
								{
									"errorSelector": "ba0b951e",
									"id": 962,
									"name": "IIA",
									"nameLocation": "334:3:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:13"
									},
									"src": "328:12:13"
								},
								{
									"errorSelector": "9f13f76d",
									"id": 964,
									"name": "L",
									"nameLocation": "351:1:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:13"
									},
									"src": "345:10:13"
								},
								{
									"errorSelector": "f704e899",
									"id": 966,
									"name": "F0",
									"nameLocation": "366:2:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "368:2:13"
									},
									"src": "360:11:13"
								},
								{
									"errorSelector": "e90c3493",
									"id": 968,
									"name": "F1",
									"nameLocation": "382:2:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:13"
									},
									"src": "376:11:13"
								}
							],
							"scope": 970,
							"src": "159:230:13",
							"usedErrors": [
								946,
								948,
								950,
								952,
								954,
								956,
								958,
								960,
								962,
								964,
								966,
								968
							],
							"usedEvents": []
						}
					],
					"src": "45:345:13"
				},
				"id": 13
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1088
						]
					},
					"id": 1089,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 971,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:14",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1088,
							"linearizedBaseContracts": [
								1088
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:14",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 979,
									"name": "Initialize",
									"nameLocation": "551:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "562:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 974,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "584:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 976,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:14"
									},
									"src": "545:51:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:14",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 996,
									"name": "Mint",
									"nameLocation": "1164:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1178:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1202:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1233:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 985,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1266:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 987,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1299:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 989,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1323:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1348:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:14"
									},
									"src": "1158:212:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:14",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 1011,
									"name": "Collect",
									"nameLocation": "1880:7:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1897:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1928:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1955:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1002,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1988:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1004,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "2021:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1006,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "2046:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1008,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:14"
									},
									"src": "1874:194:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:14",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 1026,
									"name": "Burn",
									"nameLocation": "2608:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2622:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2653:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1015,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2686:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1017,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2719:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1019,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2743:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2768:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:14"
									},
									"src": "2602:188:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:14",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 1043,
									"name": "Swap",
									"nameLocation": "3407:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3421:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3453:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3488:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3512:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1034,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3536:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1036,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3566:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1038,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3593:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1040,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:14"
									},
									"src": "3401:209:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:14",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1058,
									"name": "Flash",
									"nameLocation": "4189:5:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4204:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4236:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4271:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4296:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4321:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4344:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:14"
									},
									"src": "4183:181:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:14",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1065,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:14",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4876:36:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1060,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:14",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4922:36:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1062,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:14"
									},
									"src": "4826:139:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:14",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1076,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5367:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1067,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5390:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1069,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5413:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1071,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5436:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1073,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:14"
									},
									"src": "5346:113:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:14",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1087,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5876:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5900:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5927:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1082,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5944:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1084,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:14"
									},
									"src": "5854:107:14"
								}
							],
							"scope": 1089,
							"src": "159:5804:14",
							"usedErrors": [],
							"usedEvents": [
								979,
								996,
								1011,
								1026,
								1043,
								1058,
								1065,
								1076,
								1087
							]
						}
					],
					"src": "45:5919:14"
				},
				"id": 14
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1128
						]
					},
					"id": 1129,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1090,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1091,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:15",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1128,
							"linearizedBaseContracts": [
								1128
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:15",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:15"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "450:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:15"
									},
									"scope": 1128,
									"src": "408:51:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:15",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:15"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "624:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:15"
									},
									"scope": 1128,
									"src": "583:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:15",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:15"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "799:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:15"
									},
									"scope": 1128,
									"src": "758:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:15",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:15"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "941:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1112,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:15"
									},
									"scope": 1128,
									"src": "903:46:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:15",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:15"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1364:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1118,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:15"
									},
									"scope": 1128,
									"src": "1318:53:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:15",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:15"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1799:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1124,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:15"
									},
									"scope": 1128,
									"src": "1745:63:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1129,
							"src": "224:1586:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:15"
				},
				"id": 15
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1154
						]
					},
					"id": 1155,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1130,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1131,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:16",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1154,
							"linearizedBaseContracts": [
								1154
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:16",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "464:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1133,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "484:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1135,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:16"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:16"
									},
									"scope": 1154,
									"src": "440:73:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:16",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1041:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1068:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1143,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1102:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1145,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:16"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1151:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1148,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1168:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1150,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:16"
									},
									"scope": 1154,
									"src": "1007:178:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1155,
							"src": "187:1000:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:16"
				},
				"id": 16
			},
			"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1262
						]
					},
					"id": 1263,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1156,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:17",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "276:1180:17",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n @return tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n @return observationIndex The index of the last oracle observation that was written,\n @return observationCardinality The current maximum number of observations stored in the pool,\n @return observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n @return feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1470:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:2:17"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1546:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1538:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1160,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1578:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1572:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1162,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1572:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1603:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1596:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1164,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1640:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1633:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1166,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1633:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1683:26:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1676:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1168,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1676:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1729:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1723:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1170,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1759:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1754:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1524:253:17"
									},
									"scope": 1262,
									"src": "1461:317:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1784:168:17",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1966:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:2:17"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2012:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2011:9:17"
									},
									"scope": 1262,
									"src": "1957:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "2027:168:17",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2209:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:2:17"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2255:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:9:17"
									},
									"scope": 1262,
									"src": "2200:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "2270:147:17",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2431:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2443:2:17"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2477:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2469:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1190,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2493:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2485:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1192,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:32:17"
									},
									"scope": 1262,
									"src": "2422:79:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "2507:213:17",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks\n @return The liquidity at the current price of the pool"
									},
									"functionSelector": "1a686502",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2734:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2743:2:17"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2769:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1198,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:9:17"
									},
									"scope": 1262,
									"src": "2725:53:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "2784:1299:17",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper\n @return liquidityNet how much liquidity changes when the pool price crosses the tick,\n @return feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n @return feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n @return tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n @return secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n @return secondsOutside the seconds spent on the other side of the tick from the current tick,\n @return initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "4097:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4109:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4103:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1203,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:12:17"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4183:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4175:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1206,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4218:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4211:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1208,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4211:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4252:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4244:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4295:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4287:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4287:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4336:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4330:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1214,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4330:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4379:30:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4371:38:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1216,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4430:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4423:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1218,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4423:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4463:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4458:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4458:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:323:17"
									},
									"scope": 1262,
									"src": "4088:397:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "4491:99:17",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4604:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4621:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4615:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1225,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4615:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4614:20:17"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4658:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:9:17"
									},
									"scope": 1262,
									"src": "4595:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "4673:699:17",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return liquidity The amount of liquidity in the position,\n @return feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n @return feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n @return tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n @return tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5386:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5404:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5396:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5395:13:17"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5477:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5469:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1236,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5508:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5500:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5500:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5554:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5546:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5600:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5592:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1242,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5592:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5633:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5625:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1244,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5625:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5455:199:17"
									},
									"scope": 1262,
									"src": "5377:278:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "5661:749:17",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n @return tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n @return secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n @return initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6424:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6445:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6437:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6437:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6436:15:17"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6519:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6512:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1252,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6512:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6553:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6547:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1254,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6547:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6589:33:17",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6581:41:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1256,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6581:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6641:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6636:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6636:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:164:17"
									},
									"scope": 1262,
									"src": "6415:248:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "240:6425:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6621:17"
				},
				"id": 17
			},
			"lib/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							699
						],
						"IERC721": [
							573
						],
						"IERC721Permit": [
							1297
						]
					},
					"id": 1298,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1298,
							"sourceUnit": 574,
							"src": "71:58:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1267,
										"name": "IERC721",
										"nameLocations": [
											"282:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 573,
										"src": "282:7:18"
									},
									"id": 1268,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:18"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1266,
								"nodeType": "StructuredDocumentation",
								"src": "131:124:18",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1297,
							"linearizedBaseContracts": [
								1297,
								573,
								699
							],
							"name": "IERC721Permit",
							"nameLocation": "265:13:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "296:104:18",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "414:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:18"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "455:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:9:18"
									},
									"scope": 1297,
									"src": "405:59:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "470:135:18",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "619:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:18"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "661:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:18"
									},
									"scope": 1297,
									"src": "610:60:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "676:605:18",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1295:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1319:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1311:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1344:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1336:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1369:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1361:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1393:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1387:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1288,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1387:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1412:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1404:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1431:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1423:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:137:18"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:0:18"
									},
									"scope": 1297,
									"src": "1286:170:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1298,
							"src": "255:1203:18",
							"usedErrors": [],
							"usedEvents": [
								472,
								481,
								490
							]
						}
					],
					"src": "45:1414:18"
				},
				"id": 18
			},
			"lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							699
						],
						"IERC721": [
							573
						],
						"IERC721Enumerable": [
							605
						],
						"IERC721Metadata": [
							633
						],
						"IERC721Permit": [
							1297
						],
						"INonfungiblePositionManager": [
							1496
						],
						"IPeripheryImmutableState": [
							1512
						],
						"IPeripheryPayments": [
							1538
						],
						"IPoolInitializer": [
							1557
						],
						"PoolAddress": [
							1655
						]
					},
					"id": 1497,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1299,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"id": 1300,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:19"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 634,
							"src": "91:77:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 1302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 606,
							"src": "169:79:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 1303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1558,
							"src": "250:32:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 1304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1298,
							"src": "283:29:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1539,
							"src": "313:34:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1513,
							"src": "348:40:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/libraries/PoolAddress.sol",
							"file": "../libraries/PoolAddress.sol",
							"id": 1307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1656,
							"src": "389:38:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1309,
										"name": "IPoolInitializer",
										"nameLocations": [
											"651:16:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1557,
										"src": "651:16:19"
									},
									"id": 1310,
									"nodeType": "InheritanceSpecifier",
									"src": "651:16:19"
								},
								{
									"baseName": {
										"id": 1311,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"673:18:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1538,
										"src": "673:18:19"
									},
									"id": 1312,
									"nodeType": "InheritanceSpecifier",
									"src": "673:18:19"
								},
								{
									"baseName": {
										"id": 1313,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"697:24:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "697:24:19"
									},
									"id": 1314,
									"nodeType": "InheritanceSpecifier",
									"src": "697:24:19"
								},
								{
									"baseName": {
										"id": 1315,
										"name": "IERC721Metadata",
										"nameLocations": [
											"727:15:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 633,
										"src": "727:15:19"
									},
									"id": 1316,
									"nodeType": "InheritanceSpecifier",
									"src": "727:15:19"
								},
								{
									"baseName": {
										"id": 1317,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"748:17:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 605,
										"src": "748:17:19"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "748:17:19"
								},
								{
									"baseName": {
										"id": 1319,
										"name": "IERC721Permit",
										"nameLocations": [
											"771:13:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1297,
										"src": "771:13:19"
									},
									"id": 1320,
									"nodeType": "InheritanceSpecifier",
									"src": "771:13:19"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1308,
								"nodeType": "StructuredDocumentation",
								"src": "429:177:19",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1496,
							"linearizedBaseContracts": [
								1496,
								1297,
								605,
								633,
								573,
								699,
								1512,
								1538,
								1557
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "616:27:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "791:458:19",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 1331,
									"name": "IncreaseLiquidity",
									"nameLocation": "1260:17:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1294:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1278:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1311:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1303:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1324,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1330:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1322:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1347:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1339:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:78:19"
									},
									"src": "1254:102:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1361:419:19",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 1342,
									"name": "DecreaseLiquidity",
									"nameLocation": "1791:17:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1825:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1809:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1842:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1834:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1335,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1861:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1853:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1878:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1870:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:78:19"
									},
									"src": "1785:102:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "1892:522:19",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 1353,
									"name": "Collect",
									"nameLocation": "2425:7:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2449:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2433:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2466:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2458:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2485:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2477:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2502:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2494:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:78:19"
									},
									"src": "2419:92:19"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2517:1157:19",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3688:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3706:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3698:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3698:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3697:17:19"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3782:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3775:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1358,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3775:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3809:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3801:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3839:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3831:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3867:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3859:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3859:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3894:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3887:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1366,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3887:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3917:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3911:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1368,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3911:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3946:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3940:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1370,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3940:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3977:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3969:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1372,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "4008:24:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4000:32:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4000:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4054:24:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4046:32:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4100:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4092:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1378,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4133:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4125:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1380,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:393:19"
									},
									"scope": 1496,
									"src": "3679:476:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1406,
									"members": [
										{
											"constant": false,
											"id": 1385,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4197:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4189:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1384,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4189:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1387,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4221:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4213:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4213:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4244:3:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4237:10:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1388,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4237:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4263:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4257:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1390,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4257:5:19",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4288:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4282:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1392,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4282:5:19",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1395,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4315:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4307:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1394,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4307:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1397,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4347:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4339:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4339:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1399,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4379:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4371:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1398,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4371:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1401,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4407:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4399:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1400,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4399:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1403,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4435:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4427:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1402,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4427:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1405,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4462:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "4454:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1404,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4454:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4168:10:19",
									"nodeType": "StructDefinition",
									"scope": 1496,
									"src": "4161:316:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "4483:586:19",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5083:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5108:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5088:26:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1406_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1408,
														"name": "MintParams",
														"nameLocations": [
															"5088:10:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1406,
														"src": "5088:10:19"
													},
													"referencedDeclaration": 1406,
													"src": "5088:10:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1406_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:28:19"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5187:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5179:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5216:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5208:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1414,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5247:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5239:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5276:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5268:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5165:128:19"
									},
									"scope": 1496,
									"src": "5074:220:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1434,
									"members": [
										{
											"constant": false,
											"id": 1423,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5349:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "5341:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1422,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5341:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1425,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5374:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "5366:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5366:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1427,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5406:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "5398:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1426,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5398:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1429,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5438:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "5430:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1428,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5430:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1431,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5466:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "5458:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1430,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5458:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1433,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5494:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "5486:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1432,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5486:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5307:23:19",
									"nodeType": "StructDefinition",
									"scope": 1496,
									"src": "5300:209:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "5515:821:19",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6350:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6401:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6368:39:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1434_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6368:23:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1434,
														"src": "6368:23:19"
													},
													"referencedDeclaration": 1434,
													"src": "6368:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1434_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6367:41:19"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6480:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6472:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1440,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6511:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6503:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6540:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6532:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6532:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6458:99:19"
									},
									"scope": 1496,
									"src": "6341:217:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1458,
									"members": [
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6613:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1458,
											"src": "6605:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1448,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6605:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1451,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6638:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 1458,
											"src": "6630:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1450,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6630:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1453,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6665:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1458,
											"src": "6657:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1452,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6657:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1455,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6693:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1458,
											"src": "6685:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1454,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6685:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1457,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6721:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 1458,
											"src": "6713:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1456,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6713:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6571:23:19",
									"nodeType": "StructDefinition",
									"scope": 1496,
									"src": "6564:172:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "6742:702:19",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7458:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7509:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7476:39:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1458_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1460,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7476:23:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1458,
														"src": "7476:23:19"
													},
													"referencedDeclaration": 1458,
													"src": "7476:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1458_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7475:41:19"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7575:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7567:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7567:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7592:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7584:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7584:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7566:34:19"
									},
									"scope": 1496,
									"src": "7449:152:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1478,
									"members": [
										{
											"constant": false,
											"id": 1471,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7646:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1478,
											"src": "7638:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1470,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7638:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1473,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7671:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 1478,
											"src": "7663:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1472,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7663:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1475,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7698:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1478,
											"src": "7690:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1474,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7690:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1477,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7726:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 1478,
											"src": "7718:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1476,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7718:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7614:13:19",
									"nodeType": "StructDefinition",
									"scope": 1496,
									"src": "7607:136:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "7749:489:19",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8252:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8283:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "8260:29:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1478_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1480,
														"name": "CollectParams",
														"nameLocations": [
															"8260:13:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1478,
														"src": "8260:13:19"
													},
													"referencedDeclaration": 1478,
													"src": "8260:13:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1478_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:31:19"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8325:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "8317:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8317:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8342:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "8334:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8334:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8316:34:19"
									},
									"scope": 1496,
									"src": "8243:108:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "8357:213:19",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8584:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8597:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "8589:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8589:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8588:17:19"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8622:0:19"
									},
									"scope": 1496,
									"src": "8575:48:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1497,
							"src": "606:8019:19",
							"usedErrors": [],
							"usedEvents": [
								472,
								481,
								490,
								1331,
								1342,
								1353
							]
						}
					],
					"src": "45:8581:19"
				},
				"id": 19
			},
			"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1512
						]
					},
					"id": 1513,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1499,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:20",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1512,
							"linearizedBaseContracts": [
								1512
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "172:24:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:20",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "274:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:20"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "307:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:20"
									},
									"scope": 1512,
									"src": "265:51:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:20",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "376:5:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:20"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "407:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:20"
									},
									"scope": 1512,
									"src": "367:49:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1513,
							"src": "162:256:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:374:20"
				},
				"id": 20
			},
			"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							1538
						]
					},
					"id": 1539,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1515,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:21",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "IPeripheryPayments",
							"nameLocation": "173:18:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:21",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "514:11:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "534:13:21",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "526:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "549:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:21"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:21"
									},
									"scope": 1538,
									"src": "505:80:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:21",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:21"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:21"
									},
									"scope": 1538,
									"src": "821:38:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:21",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1306:10:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1334:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "1326:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1357:13:21",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "1349:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1388:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "1380:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:21"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:21"
									},
									"scope": 1538,
									"src": "1297:124:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1539,
							"src": "163:1260:21",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1379:21"
				},
				"id": 21
			},
			"lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							1557
						]
					},
					"id": 1558,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:22"
						},
						{
							"id": 1541,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1542,
								"nodeType": "StructuredDocumentation",
								"src": "91:194:22",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 1557,
							"linearizedBaseContracts": [
								1557
							],
							"name": "IPoolInitializer",
							"nameLocation": "295:16:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "318:648:22",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "980:34:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1032:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1024:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1056:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1048:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1079:3:22",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1072:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1548,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1100:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1092:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1550,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:104:22"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1145:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:22"
									},
									"scope": 1557,
									"src": "971:188:22",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1558,
							"src": "285:876:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1117:22"
				},
				"id": 22
			},
			"lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							1655
						]
					},
					"id": 1656,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1559,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolAddress",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1560,
								"nodeType": "StructuredDocumentation",
								"src": "71:96:23",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 1655,
							"linearizedBaseContracts": [
								1655
							],
							"name": "PoolAddress",
							"nameLocation": "175:11:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1563,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nameLocation": "219:19:23",
									"nodeType": "VariableDeclaration",
									"scope": 1655,
									"src": "193:114:23",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1561,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:23",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861353938646432666261333630353130633561386630326634343432336134343638653930326466353835376462636533636131363261343361336133316666",
										"id": 1562,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:66:23",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74901707342755711272218170162138425576993010572462494723964740060367845732863_by_1",
											"typeString": "int_const 7490...(69 digits omitted)...2863"
										},
										"value": "0xa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "314:43:23",
										"text": "@notice The identifying key of the pool"
									},
									"id": 1571,
									"members": [
										{
											"constant": false,
											"id": 1566,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "395:6:23",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "387:14:23",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1565,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "387:7:23",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1568,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "419:6:23",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "411:14:23",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1567,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:23",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1570,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "442:3:23",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "435:10:23",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1569,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "435:6:23",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nameLocation": "369:7:23",
									"nodeType": "StructDefinition",
									"scope": 1655,
									"src": "362:90:23",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "917:141:23",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1584,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "931:6:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1585,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "940:6:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "931:15:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"nodeType": "IfStatement",
												"src": "927:56:23",
												"trueBody": {
													"expression": {
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1587,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "949:6:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1588,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "957:6:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1589,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "948:16:23",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1590,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "968:6:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1591,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "976:6:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1592,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "967:16:23",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "948:35:23",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1594,
													"nodeType": "ExpressionStatement",
													"src": "948:35:23"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "1017:6:23",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "1033:6:23",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "1046:3:23",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 1596,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "1000:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1571_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1009:6:23",
														"1025:6:23",
														"1041:3:23"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1000:51:23",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 1583,
												"id": 1601,
												"nodeType": "Return",
												"src": "993:58:23"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "458:321:23",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nameLocation": "793:10:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "821:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "813:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "845:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "837:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "868:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "861:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1577,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "861:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:74:23"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "901:14:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1580,
														"name": "PoolKey",
														"nameLocations": [
															"901:7:23"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "901:7:23"
													},
													"referencedDeclaration": 1571,
													"src": "901:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1571_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:16:23"
									},
									"scope": 1655,
									"src": "784:274:23",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "1403:489:23",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1615,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "1421:3:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1425:6:23",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1566,
																"src": "1421:10:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1617,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "1434:3:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1438:6:23",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1568,
																"src": "1434:10:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1421:23:23",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1413:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:32:23",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "1413:32:23"
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1622,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "1455:4:23",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "ff",
																								"id": 1632,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "hexString",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1618:7:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																									"typeString": "literal_string hex\"ff\""
																								}
																							},
																							{
																								"id": 1633,
																								"name": "factory",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1606,
																								"src": "1655:7:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"expression": {
																													"id": 1637,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1609,
																													"src": "1713:3:23",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 1638,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1717:6:23",
																												"memberName": "token0",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1566,
																												"src": "1713:10:23",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1639,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1609,
																													"src": "1725:3:23",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 1640,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1729:6:23",
																												"memberName": "token1",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1568,
																												"src": "1725:10:23",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1641,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1609,
																													"src": "1737:3:23",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 1642,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1741:3:23",
																												"memberName": "fee",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1570,
																												"src": "1737:7:23",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint24",
																													"typeString": "uint24"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint24",
																													"typeString": "uint24"
																												}
																											],
																											"expression": {
																												"id": 1635,
																												"name": "abi",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967295,
																												"src": "1702:3:23",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_abi",
																													"typeString": "abi"
																												}
																											},
																											"id": 1636,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "1706:6:23",
																											"memberName": "encode",
																											"nodeType": "MemberAccess",
																											"src": "1702:10:23",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																												"typeString": "function () pure returns (bytes memory)"
																											}
																										},
																										"id": 1643,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "1702:43:23",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 1634,
																									"name": "keccak256",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967288,
																									"src": "1692:9:23",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																										"typeString": "function (bytes memory) pure returns (bytes32)"
																									}
																								},
																								"id": 1644,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1692:54:23",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 1645,
																								"name": "POOL_INIT_CODE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1563,
																								"src": "1776:19:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																									"typeString": "literal_string hex\"ff\""
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 1630,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1572:3:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1631,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1576:12:23",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "1572:16:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 1646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1572:249:23",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1629,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1537:9:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1537:306:23",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1508:7:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1627,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1508:7:23",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1508:353:23",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1483:7:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1625,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1483:7:23",
																		"typeDescriptions": {}
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1483:392:23",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:7:23",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1623,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1462:7:23",
																"typeDescriptions": {}
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1462:423:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1455:430:23",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "1455:430:23"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "1064:236:23",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "1314:14:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1337:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1329:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1361:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1346:18:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1571_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1607,
														"name": "PoolKey",
														"nameLocations": [
															"1346:7:23"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "1346:7:23"
													},
													"referencedDeclaration": 1571,
													"src": "1346:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1571_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:37:23"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1397:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1389:12:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:14:23"
									},
									"scope": 1655,
									"src": "1305:587:23",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1656,
							"src": "167:1727:23",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1850:23"
				},
				"id": 23
			},
			"src/LiquidityPoolManager.sol": {
				"ast": {
					"absolutePath": "src/LiquidityPoolManager.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							663
						],
						"ERC165": [
							687
						],
						"IAccessControl": [
							378
						],
						"IERC165": [
							699
						],
						"IERC20": [
							456
						],
						"IERC721": [
							573
						],
						"IERC721Enumerable": [
							605
						],
						"IERC721Metadata": [
							633
						],
						"IERC721Permit": [
							1297
						],
						"INonfungiblePositionManager": [
							1496
						],
						"IPeripheryImmutableState": [
							1512
						],
						"IPeripheryPayments": [
							1538
						],
						"IPoolInitializer": [
							1557
						],
						"IUniswapV3Factory": [
							782
						],
						"IUniswapV3Pool": [
							814
						],
						"IUniswapV3PoolActions": [
							910
						],
						"IUniswapV3PoolDerivedState": [
							941
						],
						"IUniswapV3PoolErrors": [
							969
						],
						"IUniswapV3PoolEvents": [
							1088
						],
						"IUniswapV3PoolImmutables": [
							1128
						],
						"IUniswapV3PoolOwnerActions": [
							1154
						],
						"IUniswapV3PoolState": [
							1262
						],
						"PoolAddress": [
							1655
						],
						"UniswapV3LiquidityManager": [
							1896
						]
					},
					"id": 1897,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1657,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:24"
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
							"id": 1658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 1497,
							"src": "57:84:24",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 1659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 783,
							"src": "142:69:24",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 815,
							"src": "212:66:24",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1661,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 457,
							"src": "279:56:24",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1897,
							"sourceUnit": 296,
							"src": "336:58:24",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1663,
										"name": "AccessControl",
										"nameLocations": [
											"434:13:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "434:13:24"
									},
									"id": 1664,
									"nodeType": "InheritanceSpecifier",
									"src": "434:13:24"
								}
							],
							"canonicalName": "UniswapV3LiquidityManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1896,
							"linearizedBaseContracts": [
								1896,
								295,
								687,
								699,
								378,
								663
							],
							"name": "UniswapV3LiquidityManager",
							"nameLocation": "405:25:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "791b98bc",
									"id": 1667,
									"mutability": "mutable",
									"name": "positionManager",
									"nameLocation": "489:15:24",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "454:50:24",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
										"typeString": "contract INonfungiblePositionManager"
									},
									"typeName": {
										"id": 1666,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1665,
											"name": "INonfungiblePositionManager",
											"nameLocations": [
												"454:27:24"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1496,
											"src": "454:27:24"
										},
										"referencedDeclaration": 1496,
										"src": "454:27:24",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 1670,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "535:7:24",
									"nodeType": "VariableDeclaration",
									"scope": 1896,
									"src": "510:32:24",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
										"typeString": "contract IUniswapV3Factory"
									},
									"typeName": {
										"id": 1669,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1668,
											"name": "IUniswapV3Factory",
											"nameLocations": [
												"510:17:24"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 782,
											"src": "510:17:24"
										},
										"referencedDeclaration": 782,
										"src": "510:17:24",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "627:127:24",
										"statements": [
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "positionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "637:15:24",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
															"typeString": "contract INonfungiblePositionManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1679,
																"name": "_positionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "683:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1678,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "655:27:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1496_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "655:45:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
															"typeString": "contract INonfungiblePositionManager"
														}
													},
													"src": "637:63:24",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "637:63:24"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "710:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
															"typeString": "contract IUniswapV3Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1685,
																"name": "_factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "738:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1684,
															"name": "IUniswapV3Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "720:17:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$782_$",
																"typeString": "type(contract IUniswapV3Factory)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "720:27:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
															"typeString": "contract IUniswapV3Factory"
														}
													},
													"src": "710:37:24",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
														"typeString": "contract IUniswapV3Factory"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "710:37:24"
											}
										]
									},
									"id": 1690,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "_positionManager",
												"nameLocation": "578:16:24",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "570:24:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "612:8:24",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "604:16:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "560:66:24"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:0:24"
									},
									"scope": 1896,
									"src": "549:205:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "922:141:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1708,
																	"name": "positionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "963:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "955:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1706,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "955:7:24",
																	"typeDescriptions": {}
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:24:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1710,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "981:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1703,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "939:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1702,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "932:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "932:14:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "947:7:24",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 443,
														"src": "932:22:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:57:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "932:57:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1719,
																	"name": "positionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "1030:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1022:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1022:7:24",
																	"typeDescriptions": {}
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1022:24:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "1048:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1714,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "1006:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1713,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "999:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "999:14:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1014:7:24",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 443,
														"src": "999:22:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "999:57:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "999:57:24"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "760:59:24",
										"text": "@notice Approve tokens for the Uniswap position manager"
									},
									"functionSelector": "ecf4daa7",
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveTokens",
									"nameLocation": "833:13:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "855:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "847:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "871:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "863:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "887:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "879:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "904:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "896:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:66:24"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:24"
									},
									"scope": 1896,
									"src": "824:239:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "1320:243:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1742,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "1354:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1743,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "1362:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1744,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "1370:3:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"expression": {
																		"id": 1740,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1670,
																		"src": "1338:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
																			"typeString": "contract IUniswapV3Factory"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1346:7:24",
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 755,
																	"src": "1338:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																		"typeString": "function (address,address,uint24) view external returns (address)"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1338:36:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1386:1:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1378:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1746,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1378:7:24",
																		"typeDescriptions": {}
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:10:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1338:50:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c726561647920657869737473",
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1390:21:24",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95",
																"typeString": "literal_string \"Pool already exists\""
															},
															"value": "Pool already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12db6f275306e49a55f39c487439bf20013b2e7f9ac363f83c1b47cbc0b35b95",
																"typeString": "literal_string \"Pool already exists\""
															}
														],
														"id": 1739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1330:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:82:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "1330:82:24"
											},
											{
												"expression": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1754,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "1422:4:24",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1757,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "1448:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1758,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "1456:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1759,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "1464:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"expression": {
																"id": 1755,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "1429:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Factory_$782",
																	"typeString": "contract IUniswapV3Factory"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1437:10:24",
															"memberName": "createPool",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 767,
															"src": "1429:18:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																"typeString": "function (address,address,uint24) external returns (address)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1429:39:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1422:46:24",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "1422:46:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1767,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "1510:12:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1764,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "1493:4:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1763,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "1478:14:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$814_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1478:20:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$814",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1499:10:24",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "1478:31:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint160_$returns$__$",
															"typeString": "function (uint160) external"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1478:45:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "1478:45:24"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "1069:127:24",
										"text": "@notice Create the Uniswap V3 pool for the specified token pair and fee tier if it doesnâ€™t exist, then return its address"
									},
									"functionSelector": "8e909e51",
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "1210:10:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1229:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1221:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1245:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1237:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1260:3:24",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1253:10:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1731,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1273:12:24",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1265:20:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1733,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:66:24"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1314:4:24",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1306:12:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:14:24"
									},
									"scope": 1896,
									"src": "1201:362:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "1936:996:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1804,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1987:4:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV3LiquidityManager_$1896",
																					"typeString": "contract UniswapV3LiquidityManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV3LiquidityManager_$1896",
																					"typeString": "contract UniswapV3LiquidityManager"
																				}
																			],
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1979:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1802,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1979:7:24",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1979:13:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1799,
																				"name": "tokenA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1774,
																				"src": "1961:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1798,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "1954:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1954:14:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1969:9:24",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "1954:24:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1954:39:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1807,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "1997:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1954:50:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f6b656e41",
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2006:21:24",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688",
																"typeString": "literal_string \"Insufficient TokenA\""
															},
															"value": "Insufficient TokenA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95c07a3b6decbd838af7f8f3b6082670bdb6d979e53529218d59ad82c3d60688",
																"typeString": "literal_string \"Insufficient TokenA\""
															}
														],
														"id": 1797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1946:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1946:82:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "1946:82:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1819,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2079:4:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV3LiquidityManager_$1896",
																					"typeString": "contract UniswapV3LiquidityManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV3LiquidityManager_$1896",
																					"typeString": "contract UniswapV3LiquidityManager"
																				}
																			],
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2071:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2071:7:24",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2071:13:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1814,
																				"name": "tokenB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1776,
																				"src": "2053:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1813,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "2046:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2046:14:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2061:9:24",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "2046:24:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2046:39:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1822,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "2089:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2046:50:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f6b656e42",
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2098:21:24",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f",
																"typeString": "literal_string \"Insufficient TokenB\""
															},
															"value": "Insufficient TokenB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3ea888739d08f9754dbca7c519f59f700d2a272c8c28ae567617b8840850b7f",
																"typeString": "literal_string \"Insufficient TokenB\""
															}
														],
														"id": 1812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2038:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:82:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "2038:82:24"
											},
											{
												"assignments": [
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2177:6:24",
														"nodeType": "VariableDeclaration",
														"scope": 1894,
														"src": "2131:52:24",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintParams_$1406_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.MintParams"
														},
														"typeName": {
															"id": 1830,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1829,
																"name": "INonfungiblePositionManager.MintParams",
																"nameLocations": [
																	"2131:27:24",
																	"2159:10:24"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1406,
																"src": "2131:38:24"
															},
															"referencedDeclaration": 1406,
															"src": "2131:38:24",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1406_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": {
													"arguments": [
														{
															"id": 1834,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "2247:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1835,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "2275:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1836,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "2300:3:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 1837,
															"name": "tickLower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "2328:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1838,
															"name": "tickUpper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "2362:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1839,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "2401:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1840,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "2438:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2471:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2498:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1843,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2524:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2528:6:24",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2524:10:24",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1845,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2558:5:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2564:9:24",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2558:15:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "313230",
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2576:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_120_by_1",
																	"typeString": "int_const 120"
																},
																"value": "120"
															},
															"src": "2558:21:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1832,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "2186:27:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1496_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2214:10:24",
														"memberName": "MintParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1406,
														"src": "2186:38:24",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MintParams_$1406_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2239:6:24",
														"2267:6:24",
														"2295:3:24",
														"2317:9:24",
														"2351:9:24",
														"2385:14:24",
														"2422:14:24",
														"2459:10:24",
														"2486:10:24",
														"2513:9:24",
														"2548:8:24"
													],
													"names": [
														"token0",
														"token1",
														"fee",
														"tickLower",
														"tickUpper",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"recipient",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "2186:404:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1406_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2131:459:24"
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1851,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "2602:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1852,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "2611:9:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 1853,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "2622:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1854,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "2631:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1855,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2601:38:24",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1858,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "2663:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintParams_$1406_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_MintParams_$1406_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															],
															"expression": {
																"id": 1856,
																"name": "positionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "2642:15:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1496",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2658:4:24",
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1421,
															"src": "2642:20:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$1406_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2642:28:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"src": "2601:69:24",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "2601:69:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1862,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "2717:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1863,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "2727:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:17:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"nodeType": "IfStatement",
												"src": "2713:102:24",
												"trueBody": {
													"id": 1876,
													"nodeType": "Block",
													"src": "2736:79:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1869,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2774:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2778:6:24",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2774:10:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1871,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "2786:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1872,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1793,
																			"src": "2796:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2786:17:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1866,
																				"name": "tokenA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1774,
																				"src": "2757:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1865,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "2750:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2750:14:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2765:8:24",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "2750:23:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2750:54:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1875,
															"nodeType": "ExpressionStatement",
															"src": "2750:54:24"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1878,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "2828:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1879,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "2838:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2828:17:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1893,
												"nodeType": "IfStatement",
												"src": "2824:102:24",
												"trueBody": {
													"id": 1892,
													"nodeType": "Block",
													"src": "2847:79:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1885,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2885:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2889:6:24",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2885:10:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1887,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "2897:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1888,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "2907:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2897:17:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1882,
																				"name": "tokenB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1776,
																				"src": "2868:6:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1881,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "2861:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2861:14:24",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2876:8:24",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "2861:23:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2861:54:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1891,
															"nodeType": "ExpressionStatement",
															"src": "2861:54:24"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "1569:77:24",
										"text": "@notice Adds liquidity to the specified pool, creating a new position NFT"
									},
									"functionSelector": "afbce84e",
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1660:12:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1690:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1682:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1714:6:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1706:14:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1737:3:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1730:10:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1777,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1730:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1758:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1750:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1783:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1775:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1806:9:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1800:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1783,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1800:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1831:9:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1825:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1785,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1825:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:174:24"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1874:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1866:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1891:9:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1883:17:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1790,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1910:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1902:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1927:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "1919:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:70:24"
									},
									"scope": 1896,
									"src": "1651:1281:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1897,
							"src": "396:2538:24",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "32:2903:24"
				},
				"id": 24
			}
		}
	}
}