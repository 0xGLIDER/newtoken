{
	"id": "f9eceeddd0f3c076524c00649bfe078d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/TokenSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Import OpenZeppelin Contracts\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// Import Uniswap V3 Interfaces\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\n/**\n * @title TokenSwap\n * @dev External contract to handle swapping approved tokens to USDC using Uniswap V3.\n */\ncontract TokenSwap is AccessControl, ReentrancyGuard {\n    // ========================== Roles ==========================\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // ========================== State Variables ==========================\n    ISwapRouter public swapRouter;\n    address public immutable USDC; // USDC token address\n\n    // Approved tokens that can be swapped to USDC\n    mapping(address => bool) public approvedTokens;\n\n    // Pool fee for Uniswap V3 swaps (e.g., 0.3% fee)\n    uint24 public constant POOL_FEE = 3000;\n\n    // ========================== Events ==========================\n    event TokenApproved(address indexed token);\n    event TokenRevoked(address indexed token);\n    event TokenSwapped(address indexed user, address indexed inputToken, uint256 inputAmount, uint256 usdcReceived);\n\n    // ========================== Constructor ==========================\n    /**\n     * @dev Initializes the contract by setting the swap router and USDC address.\n     * Grants the deployer the DEFAULT_ADMIN_ROLE and ADMIN_ROLE.\n     * @param _swapRouter Address of the Uniswap V3 Swap Router.\n     * @param _usdc Address of the USDC token.\n     */\n    constructor(ISwapRouter _swapRouter, address _usdc) {\n        require(address(_swapRouter) != address(0), \"Invalid swap router address\");\n        require(_usdc != address(0), \"Invalid USDC address\");\n\n        swapRouter = _swapRouter;\n        USDC = _usdc;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n    }\n\n    // ========================== Modifiers ==========================\n\n    /**\n     * @dev Ensures that only approved tokens can be swapped.\n     * @param token Address of the token to check.\n     */\n    modifier onlyApprovedToken(address token) {\n        require(approvedTokens[token], \"Token not approved for swapping\");\n        _;\n    }\n\n    // ========================== Admin Functions ==========================\n\n    /**\n     * @dev Approves a new token for swapping to USDC.\n     * @param token Address of the token to approve.\n     */\n    function approveToken(address token) external onlyRole(ADMIN_ROLE) {\n        require(token != USDC, \"USDC is already the target token\");\n        require(token != address(0), \"Invalid token address\");\n        approvedTokens[token] = true;\n        emit TokenApproved(token);\n    }\n\n    /**\n     * @dev Revokes a token's approval for swapping to USDC.\n     * @param token Address of the token to revoke.\n     */\n    function revokeToken(address token) external onlyRole(ADMIN_ROLE) {\n        require(approvedTokens[token], \"Token is not approved\");\n        approvedTokens[token] = false;\n        emit TokenRevoked(token);\n    }\n\n    /**\n     * @dev Updates the Uniswap V3 Swap Router address.\n     * @param _swapRouter New Swap Router address.\n     */\n    function updateSwapRouter(ISwapRouter _swapRouter) external onlyRole(ADMIN_ROLE) {\n        require(address(_swapRouter) != address(0), \"Invalid swap router address\");\n        swapRouter = _swapRouter;\n    }\n\n    // ========================== Swap Function ==========================\n\n    /**\n     * @dev Swaps a specified amount of an approved token to USDC.\n     * @param inputToken Address of the token to swap from.\n     * @param amountIn Amount of the input token to swap.\n     * @param amountOutMinimum Minimum amount of USDC expected from the swap to protect against slippage.\n     * @param deadline Unix timestamp after which the swap is no longer valid.\n     * @return amountOut Amount of USDC received from the swap.\n     */\n    function swapToUSDC(\n        address inputToken,\n        uint256 amountIn,\n        uint256 amountOutMinimum,\n        uint256 deadline\n    )\n        external\n        nonReentrant\n        onlyApprovedToken(inputToken)\n        returns (uint256 amountOut)\n    {\n        require(amountIn > 0, \"Input amount must be greater than zero\");\n\n        IERC20(inputToken).transferFrom(msg.sender, address(this), amountIn);\n        IERC20(inputToken).approve(address(swapRouter), amountIn);\n\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: inputToken,\n                tokenOut: USDC,\n                fee: POOL_FEE,\n                recipient: msg.sender,\n                deadline: deadline,\n                amountIn: amountIn,\n                amountOutMinimum: amountOutMinimum,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountOut = swapRouter.exactInputSingle(params);\n\n        require(amountOut >= amountOutMinimum, \"Insufficient output amount\");\n\n        emit TokenSwapped(msg.sender, inputToken, amountIn, amountOut);\n    }\n\n    // ========================== View Functions ==========================\n\n    /**\n     * @dev Checks if a token is approved for swapping.\n     * @param token Address of the token to check.\n     * @return isApproved Boolean indicating approval status.\n     */\n    function isTokenApproved(address token) external view returns (bool isApproved) {\n        isApproved = approvedTokens[token];\n    }\n}\n"
			},
			"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
				"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
				"@uniswap/v3-core/=lib/v3-core/",
				"@uniswap/v3-periphery/=lib/v3-periphery/",
				"ds-test/=lib/forge-std/lib/ds-test/src/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 497,
								"contract": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"src/TokenSwap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "inputAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcReceived",
									"type": "uint256"
								}
							],
							"name": "TokenSwapped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL_FEE",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "approveToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "approvedTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isTokenApproved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isApproved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "revokeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMinimum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapToUSDC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"name": "updateSwapRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External contract to handle swapping approved tokens to USDC using Uniswap V3.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"approveToken(address)": {
								"details": "Approves a new token for swapping to USDC.",
								"params": {
									"token": "Address of the token to approve."
								}
							},
							"constructor": {
								"details": "Initializes the contract by setting the swap router and USDC address. Grants the deployer the DEFAULT_ADMIN_ROLE and ADMIN_ROLE.",
								"params": {
									"_swapRouter": "Address of the Uniswap V3 Swap Router.",
									"_usdc": "Address of the USDC token."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isTokenApproved(address)": {
								"details": "Checks if a token is approved for swapping.",
								"params": {
									"token": "Address of the token to check."
								},
								"returns": {
									"isApproved": "Boolean indicating approval status."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"revokeToken(address)": {
								"details": "Revokes a token's approval for swapping to USDC.",
								"params": {
									"token": "Address of the token to revoke."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"swapToUSDC(address,uint256,uint256,uint256)": {
								"details": "Swaps a specified amount of an approved token to USDC.",
								"params": {
									"amountIn": "Amount of the input token to swap.",
									"amountOutMinimum": "Minimum amount of USDC expected from the swap to protect against slippage.",
									"deadline": "Unix timestamp after which the swap is no longer valid.",
									"inputToken": "Address of the token to swap from."
								},
								"returns": {
									"amountOut": "Amount of USDC received from the swap."
								}
							},
							"updateSwapRouter(address)": {
								"details": "Updates the Uniswap V3 Swap Router address.",
								"params": {
									"_swapRouter": "New Swap Router address."
								}
							}
						},
						"title": "TokenSwap",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/TokenSwap.sol\":484:5598  contract TokenSwap is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"src/TokenSwap.sol\":1680:2039  constructor(ISwapRouter _swapRouter, address _usdc) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/TokenSwap.sol\":1782:1783  0 */\n  0x00\n    /* \"src/TokenSwap.sol\":1750:1784  address(_swapRouter) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/TokenSwap.sol\":1758:1769  _swapRouter */\n  dup3\n    /* \"src/TokenSwap.sol\":1750:1784  address(_swapRouter) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/TokenSwap.sol\":1742:1816  require(address(_swapRouter) != address(0), \"Invalid swap router address\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"src/TokenSwap.sol\":1851:1852  0 */\n  0x00\n    /* \"src/TokenSwap.sol\":1834:1853  _usdc != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/TokenSwap.sol\":1834:1839  _usdc */\n  dup2\n    /* \"src/TokenSwap.sol\":1834:1853  _usdc != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/TokenSwap.sol\":1826:1878  require(_usdc != address(0), \"Invalid USDC address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"src/TokenSwap.sol\":1902:1913  _swapRouter */\n  dup2\n    /* \"src/TokenSwap.sol\":1889:1899  swapRouter */\n  0x02\n  0x00\n    /* \"src/TokenSwap.sol\":1889:1913  swapRouter = _swapRouter */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/TokenSwap.sol\":1930:1935  _usdc */\n  dup1\n    /* \"src/TokenSwap.sol\":1923:1935  USDC = _usdc */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/TokenSwap.sol\":1946:1988  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_14\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/TokenSwap.sol\":1957:1975  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/TokenSwap.sol\":1977:1987  msg.sender */\n  caller\n    /* \"src/TokenSwap.sol\":1946:1956  _grantRole */\n  shl(0x20, tag_15)\n    /* \"src/TokenSwap.sol\":1946:1988  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n  pop\n    /* \"src/TokenSwap.sol\":1998:2032  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_16\n    /* \"src/TokenSwap.sol\":647:670  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"src/TokenSwap.sol\":2021:2031  msg.sender */\n  caller\n    /* \"src/TokenSwap.sol\":1998:2008  _grantRole */\n  shl(0x20, tag_15)\n    /* \"src/TokenSwap.sol\":1998:2032  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n  pop\n    /* \"src/TokenSwap.sol\":1680:2039  constructor(ISwapRouter _swapRouter, address _usdc) {... */\n  pop\n  pop\n    /* \"src/TokenSwap.sol\":484:5598  contract TokenSwap is AccessControl, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_19\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_20)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_21\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_22\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_23)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_18)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_21:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_18:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_20:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_23:\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_48\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_32:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_50\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_31\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_33:\n    /* \"#utility.yul\":781:824   */\n  tag_52\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_53:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_34:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_55\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_33\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1164   */\ntag_35:\n    /* \"#utility.yul\":1115:1139   */\n  tag_57\n    /* \"#utility.yul\":1133:1138   */\n  dup2\n    /* \"#utility.yul\":1115:1139   */\n  tag_31\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1105:1140   */\n  eq\n    /* \"#utility.yul\":1095:1158   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1154:1155   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  dup1\n    /* \"#utility.yul\":1144:1156   */\n  revert\n    /* \"#utility.yul\":1095:1158   */\ntag_58:\n    /* \"#utility.yul\":1042:1164   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1170:1313   */\ntag_36:\n    /* \"#utility.yul\":1227:1232   */\n  0x00\n    /* \"#utility.yul\":1258:1264   */\n  dup2\n    /* \"#utility.yul\":1252:1265   */\n  mload\n    /* \"#utility.yul\":1243:1265   */\n  swap1\n  pop\n    /* \"#utility.yul\":1274:1307   */\n  tag_60\n    /* \"#utility.yul\":1301:1306   */\n  dup2\n    /* \"#utility.yul\":1274:1307   */\n  tag_35\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1170:1313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1319:1864   */\ntag_3:\n    /* \"#utility.yul\":1417:1423   */\n  0x00\n    /* \"#utility.yul\":1425:1431   */\n  dup1\n    /* \"#utility.yul\":1474:1476   */\n  0x40\n    /* \"#utility.yul\":1462:1471   */\n  dup4\n    /* \"#utility.yul\":1453:1460   */\n  dup6\n    /* \"#utility.yul\":1449:1472   */\n  sub\n    /* \"#utility.yul\":1445:1477   */\n  slt\n    /* \"#utility.yul\":1442:1561   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1480:1559   */\n  tag_63\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1442:1561   */\ntag_62:\n    /* \"#utility.yul\":1600:1601   */\n  0x00\n    /* \"#utility.yul\":1625:1708   */\n  tag_64\n    /* \"#utility.yul\":1700:1707   */\n  dup6\n    /* \"#utility.yul\":1691:1697   */\n  dup3\n    /* \"#utility.yul\":1680:1689   */\n  dup7\n    /* \"#utility.yul\":1676:1698   */\n  add\n    /* \"#utility.yul\":1625:1708   */\n  tag_34\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1615:1708   */\n  swap3\n  pop\n    /* \"#utility.yul\":1571:1718   */\n  pop\n    /* \"#utility.yul\":1757:1759   */\n  0x20\n    /* \"#utility.yul\":1783:1847   */\n  tag_65\n    /* \"#utility.yul\":1839:1846   */\n  dup6\n    /* \"#utility.yul\":1830:1836   */\n  dup3\n    /* \"#utility.yul\":1819:1828   */\n  dup7\n    /* \"#utility.yul\":1815:1837   */\n  add\n    /* \"#utility.yul\":1783:1847   */\n  tag_36\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1773:1847   */\n  swap2\n  pop\n    /* \"#utility.yul\":1728:1857   */\n  pop\n    /* \"#utility.yul\":1319:1864   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1870:2039   */\ntag_37:\n    /* \"#utility.yul\":1954:1965   */\n  0x00\n    /* \"#utility.yul\":1988:1994   */\n  dup3\n    /* \"#utility.yul\":1983:1986   */\n  dup3\n    /* \"#utility.yul\":1976:1995   */\n  mstore\n    /* \"#utility.yul\":2028:2032   */\n  0x20\n    /* \"#utility.yul\":2023:2026   */\n  dup3\n    /* \"#utility.yul\":2019:2033   */\n  add\n    /* \"#utility.yul\":2004:2033   */\n  swap1\n  pop\n    /* \"#utility.yul\":1870:2039   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2045:2222   */\ntag_38:\n    /* \"#utility.yul\":2185:2214   */\n  0x496e76616c6964207377617020726f7574657220616464726573730000000000\n    /* \"#utility.yul\":2181:2182   */\n  0x00\n    /* \"#utility.yul\":2173:2179   */\n  dup3\n    /* \"#utility.yul\":2169:2183   */\n  add\n    /* \"#utility.yul\":2162:2215   */\n  mstore\n    /* \"#utility.yul\":2045:2222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2228:2594   */\ntag_39:\n    /* \"#utility.yul\":2370:2373   */\n  0x00\n    /* \"#utility.yul\":2391:2458   */\n  tag_69\n    /* \"#utility.yul\":2455:2457   */\n  0x1b\n    /* \"#utility.yul\":2450:2453   */\n  dup4\n    /* \"#utility.yul\":2391:2458   */\n  tag_37\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2384:2458   */\n  swap2\n  pop\n    /* \"#utility.yul\":2467:2560   */\n  tag_70\n    /* \"#utility.yul\":2556:2559   */\n  dup3\n    /* \"#utility.yul\":2467:2560   */\n  tag_38\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2585:2587   */\n  0x20\n    /* \"#utility.yul\":2580:2583   */\n  dup3\n    /* \"#utility.yul\":2576:2588   */\n  add\n    /* \"#utility.yul\":2569:2588   */\n  swap1\n  pop\n    /* \"#utility.yul\":2228:2594   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2600:3019   */\ntag_10:\n    /* \"#utility.yul\":2766:2770   */\n  0x00\n    /* \"#utility.yul\":2804:2806   */\n  0x20\n    /* \"#utility.yul\":2793:2802   */\n  dup3\n    /* \"#utility.yul\":2789:2807   */\n  add\n    /* \"#utility.yul\":2781:2807   */\n  swap1\n  pop\n    /* \"#utility.yul\":2853:2862   */\n  dup2\n    /* \"#utility.yul\":2847:2851   */\n  dup2\n    /* \"#utility.yul\":2843:2863   */\n  sub\n    /* \"#utility.yul\":2839:2840   */\n  0x00\n    /* \"#utility.yul\":2828:2837   */\n  dup4\n    /* \"#utility.yul\":2824:2841   */\n  add\n    /* \"#utility.yul\":2817:2864   */\n  mstore\n    /* \"#utility.yul\":2881:3012   */\n  tag_72\n    /* \"#utility.yul\":3007:3011   */\n  dup2\n    /* \"#utility.yul\":2881:3012   */\n  tag_39\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2873:3012   */\n  swap1\n  pop\n    /* \"#utility.yul\":2600:3019   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3025:3195   */\ntag_40:\n    /* \"#utility.yul\":3165:3187   */\n  0x496e76616c696420555344432061646472657373000000000000000000000000\n    /* \"#utility.yul\":3161:3162   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup3\n    /* \"#utility.yul\":3149:3163   */\n  add\n    /* \"#utility.yul\":3142:3188   */\n  mstore\n    /* \"#utility.yul\":3025:3195   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3201:3567   */\ntag_41:\n    /* \"#utility.yul\":3343:3346   */\n  0x00\n    /* \"#utility.yul\":3364:3431   */\n  tag_75\n    /* \"#utility.yul\":3428:3430   */\n  0x14\n    /* \"#utility.yul\":3423:3426   */\n  dup4\n    /* \"#utility.yul\":3364:3431   */\n  tag_37\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3357:3431   */\n  swap2\n  pop\n    /* \"#utility.yul\":3440:3533   */\n  tag_76\n    /* \"#utility.yul\":3529:3532   */\n  dup3\n    /* \"#utility.yul\":3440:3533   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3558:3560   */\n  0x20\n    /* \"#utility.yul\":3553:3556   */\n  dup3\n    /* \"#utility.yul\":3549:3561   */\n  add\n    /* \"#utility.yul\":3542:3561   */\n  swap1\n  pop\n    /* \"#utility.yul\":3201:3567   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3573:3992   */\ntag_13:\n    /* \"#utility.yul\":3739:3743   */\n  0x00\n    /* \"#utility.yul\":3777:3779   */\n  0x20\n    /* \"#utility.yul\":3766:3775   */\n  dup3\n    /* \"#utility.yul\":3762:3780   */\n  add\n    /* \"#utility.yul\":3754:3780   */\n  swap1\n  pop\n    /* \"#utility.yul\":3826:3835   */\n  dup2\n    /* \"#utility.yul\":3820:3824   */\n  dup2\n    /* \"#utility.yul\":3816:3836   */\n  sub\n    /* \"#utility.yul\":3812:3813   */\n  0x00\n    /* \"#utility.yul\":3801:3810   */\n  dup4\n    /* \"#utility.yul\":3797:3814   */\n  add\n    /* \"#utility.yul\":3790:3837   */\n  mstore\n    /* \"#utility.yul\":3854:3985   */\n  tag_78\n    /* \"#utility.yul\":3980:3984   */\n  dup2\n    /* \"#utility.yul\":3854:3985   */\n  tag_41\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3846:3985   */\n  swap1\n  pop\n    /* \"#utility.yul\":3573:3992   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"src/TokenSwap.sol\":484:5598  contract TokenSwap is AccessControl, ReentrancyGuard {... */\ntag_17:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x196bc5dfea832b0eb08b0412990d893a3342c7f023cd516b16aea5eba5390ef7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/TokenSwap.sol\":484:5598  contract TokenSwap is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89a30271\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb98b677f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd1b9c4a\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x89a30271\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x933f4eef\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9d93d352\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x36568abe\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6d1ea3fa\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x80b2edd8\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2197545c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/TokenSwap.sol\":4080:5197  function swapToUSDC(... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"src/TokenSwap.sol\":898:944  mapping(address => bool) public approvedTokens */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/TokenSwap.sol\":610:670  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/TokenSwap.sol\":2589:2867  function approveToken(address token) external onlyRole(ADMIN_ROLE) {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"src/TokenSwap.sol\":789:818  address public immutable USDC */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/TokenSwap.sol\":3002:3213  function revokeToken(address token) external onlyRole(ADMIN_ROLE) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"src/TokenSwap.sol\":5465:5596  function isTokenApproved(address token) external view returns (bool isApproved) {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/TokenSwap.sol\":3342:3548  function updateSwapRouter(ISwapRouter _swapRouter) external onlyRole(ADMIN_ROLE) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"src/TokenSwap.sol\":754:783  ISwapRouter public swapRouter */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"src/TokenSwap.sol\":1005:1043  uint24 public constant POOL_FEE = 3000 */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_93\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_94\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_95\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_94:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_93:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":4080:5197  function swapToUSDC(... */\n    tag_32:\n        /* \"src/TokenSwap.sol\":4313:4330  uint256 amountOut */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_97\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_98\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_97:\n        /* \"src/TokenSwap.sol\":4284:4294  inputToken */\n      dup5\n        /* \"src/TokenSwap.sol\":2306:2320  approvedTokens */\n      0x03\n        /* \"src/TokenSwap.sol\":2306:2327  approvedTokens[token] */\n      0x00\n        /* \"src/TokenSwap.sol\":2321:2326  token */\n      dup3\n        /* \"src/TokenSwap.sol\":2306:2327  approvedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/TokenSwap.sol\":2298:2363  require(approvedTokens[token], \"Token not approved for swapping\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"src/TokenSwap.sol\":4365:4366  0 */\n      0x00\n        /* \"src/TokenSwap.sol\":4354:4362  amountIn */\n      dup6\n        /* \"src/TokenSwap.sol\":4354:4366  amountIn > 0 */\n      gt\n        /* \"src/TokenSwap.sol\":4346:4409  require(amountIn > 0, \"Input amount must be greater than zero\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"src/TokenSwap.sol\":4427:4437  inputToken */\n      dup6\n        /* \"src/TokenSwap.sol\":4420:4451  IERC20(inputToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/TokenSwap.sol\":4452:4462  msg.sender */\n      caller\n        /* \"src/TokenSwap.sol\":4472:4476  this */\n      address\n        /* \"src/TokenSwap.sol\":4479:4487  amountIn */\n      dup9\n        /* \"src/TokenSwap.sol\":4420:4488  IERC20(inputToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      pop\n        /* \"src/TokenSwap.sol\":4505:4515  inputToken */\n      dup6\n        /* \"src/TokenSwap.sol\":4498:4524  IERC20(inputToken).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"src/TokenSwap.sol\":4533:4543  swapRouter */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/TokenSwap.sol\":4546:4554  amountIn */\n      dup8\n        /* \"src/TokenSwap.sol\":4498:4555  IERC20(inputToken).approve(address(swapRouter), amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_117:\n      pop\n        /* \"src/TokenSwap.sol\":4566:4614  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/TokenSwap.sol\":4691:4701  inputToken */\n      dup9\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":4729:4733  USDC */\n      immutable(\"0x196bc5dfea832b0eb08b0412990d893a3342c7f023cd516b16aea5eba5390ef7\")\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":1039:1043  3000 */\n      0x0bb8\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":4793:4803  msg.sender */\n      caller\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":4831:4839  deadline */\n      dup6\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":4867:4875  amountIn */\n      dup8\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":4911:4927  amountOutMinimum */\n      dup7\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/TokenSwap.sol\":4964:4965  0 */\n      0x00\n        /* \"src/TokenSwap.sol\":4629:4980  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"src/TokenSwap.sol\":4566:4980  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"src/TokenSwap.sol\":5003:5013  swapRouter */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/TokenSwap.sol\":5003:5030  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"src/TokenSwap.sol\":5031:5037  params */\n      dup3\n        /* \"src/TokenSwap.sol\":5003:5038  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"src/TokenSwap.sol\":4991:5038  amountOut = swapRouter.exactInputSingle(params) */\n      swap3\n      pop\n        /* \"src/TokenSwap.sol\":5070:5086  amountOutMinimum */\n      dup5\n        /* \"src/TokenSwap.sol\":5057:5066  amountOut */\n      dup4\n        /* \"src/TokenSwap.sol\":5057:5086  amountOut >= amountOutMinimum */\n      lt\n      iszero\n        /* \"src/TokenSwap.sol\":5049:5117  require(amountOut >= amountOutMinimum, \"Insufficient output amount\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"src/TokenSwap.sol\":5158:5168  inputToken */\n      dup7\n        /* \"src/TokenSwap.sol\":5133:5190  TokenSwapped(msg.sender, inputToken, amountIn, amountOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/TokenSwap.sol\":5146:5156  msg.sender */\n      caller\n        /* \"src/TokenSwap.sol\":5133:5190  TokenSwapped(msg.sender, inputToken, amountIn, amountOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66\n        /* \"src/TokenSwap.sol\":5170:5178  amountIn */\n      dup9\n        /* \"src/TokenSwap.sol\":5180:5189  amountOut */\n      dup7\n        /* \"src/TokenSwap.sol\":5133:5190  TokenSwapped(msg.sender, inputToken, amountIn, amountOut) */\n      mload(0x40)\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/TokenSwap.sol\":4336:5197  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_129\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_130\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_129:\n        /* \"src/TokenSwap.sol\":4080:5197  function swapToUSDC(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_38:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_44:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_132\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_38\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_132:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_134\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_135\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_134:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_137\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_138\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_137:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_140\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_141\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_142\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_142:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_143\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_144\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":898:944  mapping(address => bool) public approvedTokens */\n    tag_51:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/TokenSwap.sol\":610:670  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_54:\n        /* \"src/TokenSwap.sol\":647:670  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"src/TokenSwap.sol\":610:670  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"src/TokenSwap.sol\":2589:2867  function approveToken(address token) external onlyRole(ADMIN_ROLE) {... */\n    tag_58:\n        /* \"src/TokenSwap.sol\":647:670  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_146\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_135\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_146:\n        /* \"src/TokenSwap.sol\":2683:2687  USDC */\n      immutable(\"0x196bc5dfea832b0eb08b0412990d893a3342c7f023cd516b16aea5eba5390ef7\")\n        /* \"src/TokenSwap.sol\":2674:2687  token != USDC */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/TokenSwap.sol\":2674:2679  token */\n      dup3\n        /* \"src/TokenSwap.sol\":2674:2687  token != USDC */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/TokenSwap.sol\":2666:2724  require(token != USDC, \"USDC is already the target token\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"src/TokenSwap.sol\":2759:2760  0 */\n      0x00\n        /* \"src/TokenSwap.sol\":2742:2761  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/TokenSwap.sol\":2742:2747  token */\n      dup3\n        /* \"src/TokenSwap.sol\":2742:2761  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/TokenSwap.sol\":2734:2787  require(token != address(0), \"Invalid token address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"src/TokenSwap.sol\":2821:2825  true */\n      0x01\n        /* \"src/TokenSwap.sol\":2797:2811  approvedTokens */\n      0x03\n        /* \"src/TokenSwap.sol\":2797:2818  approvedTokens[token] */\n      0x00\n        /* \"src/TokenSwap.sol\":2812:2817  token */\n      dup5\n        /* \"src/TokenSwap.sol\":2797:2818  approvedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/TokenSwap.sol\":2797:2825  approvedTokens[token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/TokenSwap.sol\":2854:2859  token */\n      dup2\n        /* \"src/TokenSwap.sol\":2840:2860  TokenApproved(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5f5916d70d5479c1795a9d461360dfa5c673bc37904c8ab4fcbdc970b9e90f3d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/TokenSwap.sol\":2589:2867  function approveToken(address token) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":789:818  address public immutable USDC */\n    tag_60:\n      immutable(\"0x196bc5dfea832b0eb08b0412990d893a3342c7f023cd516b16aea5eba5390ef7\")\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_65:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":3002:3213  function revokeToken(address token) external onlyRole(ADMIN_ROLE) {... */\n    tag_69:\n        /* \"src/TokenSwap.sol\":647:670  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_156\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_135\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_156:\n        /* \"src/TokenSwap.sol\":3086:3100  approvedTokens */\n      0x03\n        /* \"src/TokenSwap.sol\":3086:3107  approvedTokens[token] */\n      0x00\n        /* \"src/TokenSwap.sol\":3101:3106  token */\n      dup4\n        /* \"src/TokenSwap.sol\":3086:3107  approvedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/TokenSwap.sol\":3078:3133  require(approvedTokens[token], \"Token is not approved\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"src/TokenSwap.sol\":3167:3172  false */\n      0x00\n        /* \"src/TokenSwap.sol\":3143:3157  approvedTokens */\n      0x03\n        /* \"src/TokenSwap.sol\":3143:3164  approvedTokens[token] */\n      0x00\n        /* \"src/TokenSwap.sol\":3158:3163  token */\n      dup5\n        /* \"src/TokenSwap.sol\":3143:3164  approvedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/TokenSwap.sol\":3143:3172  approvedTokens[token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/TokenSwap.sol\":3200:3205  token */\n      dup2\n        /* \"src/TokenSwap.sol\":3187:3206  TokenRevoked(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x45f62f30e7b8439e0da7d8e560fe39d01238091ce9e789e3d12b514edf98acea\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/TokenSwap.sol\":3002:3213  function revokeToken(address token) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":5465:5596  function isTokenApproved(address token) external view returns (bool isApproved) {... */\n    tag_72:\n        /* \"src/TokenSwap.sol\":5528:5543  bool isApproved */\n      0x00\n        /* \"src/TokenSwap.sol\":5568:5582  approvedTokens */\n      0x03\n        /* \"src/TokenSwap.sol\":5568:5589  approvedTokens[token] */\n      0x00\n        /* \"src/TokenSwap.sol\":5583:5588  token */\n      dup4\n        /* \"src/TokenSwap.sol\":5568:5589  approvedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/TokenSwap.sol\":5555:5589  isApproved = approvedTokens[token] */\n      swap1\n      pop\n        /* \"src/TokenSwap.sol\":5465:5596  function isTokenApproved(address token) external view returns (bool isApproved) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_75:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/TokenSwap.sol\":3342:3548  function updateSwapRouter(ISwapRouter _swapRouter) external onlyRole(ADMIN_ROLE) {... */\n    tag_80:\n        /* \"src/TokenSwap.sol\":647:670  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_163\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_135\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_163:\n        /* \"src/TokenSwap.sol\":3473:3474  0 */\n      0x00\n        /* \"src/TokenSwap.sol\":3441:3475  address(_swapRouter) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/TokenSwap.sol\":3449:3460  _swapRouter */\n      dup3\n        /* \"src/TokenSwap.sol\":3441:3475  address(_swapRouter) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/TokenSwap.sol\":3433:3507  require(address(_swapRouter) != address(0), \"Invalid swap router address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"src/TokenSwap.sol\":3530:3541  _swapRouter */\n      dup2\n        /* \"src/TokenSwap.sol\":3517:3527  swapRouter */\n      0x02\n      0x00\n        /* \"src/TokenSwap.sol\":3517:3541  swapRouter = _swapRouter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/TokenSwap.sol\":3342:3548  function updateSwapRouter(ISwapRouter _swapRouter) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":754:783  ISwapRouter public swapRouter */\n    tag_82:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_87:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_168\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_38\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_168:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_170\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_135\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_170:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_172\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_144\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_172:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/TokenSwap.sol\":1005:1043  uint24 public constant POOL_FEE = 3000 */\n    tag_89:\n        /* \"src/TokenSwap.sol\":1039:1043  3000 */\n      0x0bb8\n        /* \"src/TokenSwap.sol\":1005:1043  uint24 public constant POOL_FEE = 3000 */\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_95:\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_98:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_175\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_175:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_130:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_135:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_178\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_179\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_141\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_180\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_178:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_138:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_182\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_65\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_183\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_184\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_141\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_183:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_144:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_188\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_65\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_188:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_190\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_141\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_187)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_189:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_187:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_180:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_193\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_65\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_193:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_194\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_194:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_198:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_200:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_201:\n        /* \"#utility.yul\":561:584   */\n      tag_257\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_200\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_258:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_202:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_260\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_201\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_263\n      tag_198\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":833:952   */\n    tag_262:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_264\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_202\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_203:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_204:\n        /* \"#utility.yul\":1268:1289   */\n      tag_267\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_203\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_269\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_204\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_205:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_206:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_272\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_205\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_207:\n        /* \"#utility.yul\":1825:1849   */\n      tag_274\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_206\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_275:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_208:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_277\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_207\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_209:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_210:\n        /* \"#utility.yul\":2181:2205   */\n      tag_280\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_209\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_281:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_211:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_283\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_210\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:3146   */\n    tag_31:\n        /* \"#utility.yul\":2467:2473   */\n      0x00\n        /* \"#utility.yul\":2475:2481   */\n      dup1\n        /* \"#utility.yul\":2483:2489   */\n      0x00\n        /* \"#utility.yul\":2491:2497   */\n      dup1\n        /* \"#utility.yul\":2540:2543   */\n      0x80\n        /* \"#utility.yul\":2528:2537   */\n      dup6\n        /* \"#utility.yul\":2519:2526   */\n      dup8\n        /* \"#utility.yul\":2515:2538   */\n      sub\n        /* \"#utility.yul\":2511:2544   */\n      slt\n        /* \"#utility.yul\":2508:2628   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2547:2626   */\n      tag_286\n      tag_198\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2508:2628   */\n    tag_285:\n        /* \"#utility.yul\":2667:2668   */\n      0x00\n        /* \"#utility.yul\":2692:2745   */\n      tag_287\n        /* \"#utility.yul\":2737:2744   */\n      dup8\n        /* \"#utility.yul\":2728:2734   */\n      dup3\n        /* \"#utility.yul\":2717:2726   */\n      dup9\n        /* \"#utility.yul\":2713:2735   */\n      add\n        /* \"#utility.yul\":2692:2745   */\n      tag_208\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2682:2745   */\n      swap5\n      pop\n        /* \"#utility.yul\":2638:2755   */\n      pop\n        /* \"#utility.yul\":2794:2796   */\n      0x20\n        /* \"#utility.yul\":2820:2873   */\n      tag_288\n        /* \"#utility.yul\":2865:2872   */\n      dup8\n        /* \"#utility.yul\":2856:2862   */\n      dup3\n        /* \"#utility.yul\":2845:2854   */\n      dup9\n        /* \"#utility.yul\":2841:2863   */\n      add\n        /* \"#utility.yul\":2820:2873   */\n      tag_211\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2810:2873   */\n      swap4\n      pop\n        /* \"#utility.yul\":2765:2883   */\n      pop\n        /* \"#utility.yul\":2922:2924   */\n      0x40\n        /* \"#utility.yul\":2948:3001   */\n      tag_289\n        /* \"#utility.yul\":2993:3000   */\n      dup8\n        /* \"#utility.yul\":2984:2990   */\n      dup3\n        /* \"#utility.yul\":2973:2982   */\n      dup9\n        /* \"#utility.yul\":2969:2991   */\n      add\n        /* \"#utility.yul\":2948:3001   */\n      tag_211\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2938:3001   */\n      swap3\n      pop\n        /* \"#utility.yul\":2893:3011   */\n      pop\n        /* \"#utility.yul\":3050:3052   */\n      0x60\n        /* \"#utility.yul\":3076:3129   */\n      tag_290\n        /* \"#utility.yul\":3121:3128   */\n      dup8\n        /* \"#utility.yul\":3112:3118   */\n      dup3\n        /* \"#utility.yul\":3101:3110   */\n      dup9\n        /* \"#utility.yul\":3097:3119   */\n      add\n        /* \"#utility.yul\":3076:3129   */\n      tag_211\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3066:3129   */\n      swap2\n      pop\n        /* \"#utility.yul\":3021:3139   */\n      pop\n        /* \"#utility.yul\":2381:3146   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3270   */\n    tag_212:\n        /* \"#utility.yul\":3239:3263   */\n      tag_292\n        /* \"#utility.yul\":3257:3262   */\n      dup2\n        /* \"#utility.yul\":3239:3263   */\n      tag_209\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3234:3237   */\n      dup3\n        /* \"#utility.yul\":3227:3264   */\n      mstore\n        /* \"#utility.yul\":3152:3270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3276:3498   */\n    tag_34:\n        /* \"#utility.yul\":3369:3373   */\n      0x00\n        /* \"#utility.yul\":3407:3409   */\n      0x20\n        /* \"#utility.yul\":3396:3405   */\n      dup3\n        /* \"#utility.yul\":3392:3410   */\n      add\n        /* \"#utility.yul\":3384:3410   */\n      swap1\n      pop\n        /* \"#utility.yul\":3420:3491   */\n      tag_294\n        /* \"#utility.yul\":3488:3489   */\n      0x00\n        /* \"#utility.yul\":3477:3486   */\n      dup4\n        /* \"#utility.yul\":3473:3490   */\n      add\n        /* \"#utility.yul\":3464:3470   */\n      dup5\n        /* \"#utility.yul\":3420:3491   */\n      tag_212\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3276:3498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3504:3581   */\n    tag_213:\n        /* \"#utility.yul\":3541:3548   */\n      0x00\n        /* \"#utility.yul\":3570:3575   */\n      dup2\n        /* \"#utility.yul\":3559:3575   */\n      swap1\n      pop\n        /* \"#utility.yul\":3504:3581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3587:3709   */\n    tag_214:\n        /* \"#utility.yul\":3660:3684   */\n      tag_297\n        /* \"#utility.yul\":3678:3683   */\n      dup2\n        /* \"#utility.yul\":3660:3684   */\n      tag_213\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3653:3658   */\n      dup2\n        /* \"#utility.yul\":3650:3685   */\n      eq\n        /* \"#utility.yul\":3640:3703   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3699:3700   */\n      0x00\n        /* \"#utility.yul\":3696:3697   */\n      dup1\n        /* \"#utility.yul\":3689:3701   */\n      revert\n        /* \"#utility.yul\":3640:3703   */\n    tag_298:\n        /* \"#utility.yul\":3587:3709   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3715:3854   */\n    tag_215:\n        /* \"#utility.yul\":3761:3766   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup2\n        /* \"#utility.yul\":3786:3806   */\n      calldataload\n        /* \"#utility.yul\":3777:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3815:3848   */\n      tag_300\n        /* \"#utility.yul\":3842:3847   */\n      dup2\n        /* \"#utility.yul\":3815:3848   */\n      tag_214\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3715:3854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3860:4189   */\n    tag_37:\n        /* \"#utility.yul\":3919:3925   */\n      0x00\n        /* \"#utility.yul\":3968:3970   */\n      0x20\n        /* \"#utility.yul\":3956:3965   */\n      dup3\n        /* \"#utility.yul\":3947:3954   */\n      dup5\n        /* \"#utility.yul\":3943:3966   */\n      sub\n        /* \"#utility.yul\":3939:3971   */\n      slt\n        /* \"#utility.yul\":3936:4055   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3974:4053   */\n      tag_303\n      tag_198\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3936:4055   */\n    tag_302:\n        /* \"#utility.yul\":4094:4095   */\n      0x00\n        /* \"#utility.yul\":4119:4172   */\n      tag_304\n        /* \"#utility.yul\":4164:4171   */\n      dup5\n        /* \"#utility.yul\":4155:4161   */\n      dup3\n        /* \"#utility.yul\":4144:4153   */\n      dup6\n        /* \"#utility.yul\":4140:4162   */\n      add\n        /* \"#utility.yul\":4119:4172   */\n      tag_215\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4109:4172   */\n      swap2\n      pop\n        /* \"#utility.yul\":4065:4182   */\n      pop\n        /* \"#utility.yul\":3860:4189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4195:4313   */\n    tag_216:\n        /* \"#utility.yul\":4282:4306   */\n      tag_306\n        /* \"#utility.yul\":4300:4305   */\n      dup2\n        /* \"#utility.yul\":4282:4306   */\n      tag_213\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4277:4280   */\n      dup3\n        /* \"#utility.yul\":4270:4307   */\n      mstore\n        /* \"#utility.yul\":4195:4313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4319:4541   */\n    tag_40:\n        /* \"#utility.yul\":4412:4416   */\n      0x00\n        /* \"#utility.yul\":4450:4452   */\n      0x20\n        /* \"#utility.yul\":4439:4448   */\n      dup3\n        /* \"#utility.yul\":4435:4453   */\n      add\n        /* \"#utility.yul\":4427:4453   */\n      swap1\n      pop\n        /* \"#utility.yul\":4463:4534   */\n      tag_308\n        /* \"#utility.yul\":4531:4532   */\n      0x00\n        /* \"#utility.yul\":4520:4529   */\n      dup4\n        /* \"#utility.yul\":4516:4533   */\n      add\n        /* \"#utility.yul\":4507:4513   */\n      dup5\n        /* \"#utility.yul\":4463:4534   */\n      tag_216\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4319:4541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4547:5021   */\n    tag_43:\n        /* \"#utility.yul\":4615:4621   */\n      0x00\n        /* \"#utility.yul\":4623:4629   */\n      dup1\n        /* \"#utility.yul\":4672:4674   */\n      0x40\n        /* \"#utility.yul\":4660:4669   */\n      dup4\n        /* \"#utility.yul\":4651:4658   */\n      dup6\n        /* \"#utility.yul\":4647:4670   */\n      sub\n        /* \"#utility.yul\":4643:4675   */\n      slt\n        /* \"#utility.yul\":4640:4759   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4678:4757   */\n      tag_311\n      tag_198\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4640:4759   */\n    tag_310:\n        /* \"#utility.yul\":4798:4799   */\n      0x00\n        /* \"#utility.yul\":4823:4876   */\n      tag_312\n        /* \"#utility.yul\":4868:4875   */\n      dup6\n        /* \"#utility.yul\":4859:4865   */\n      dup3\n        /* \"#utility.yul\":4848:4857   */\n      dup7\n        /* \"#utility.yul\":4844:4866   */\n      add\n        /* \"#utility.yul\":4823:4876   */\n      tag_215\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4813:4876   */\n      swap3\n      pop\n        /* \"#utility.yul\":4769:4886   */\n      pop\n        /* \"#utility.yul\":4925:4927   */\n      0x20\n        /* \"#utility.yul\":4951:5004   */\n      tag_313\n        /* \"#utility.yul\":4996:5003   */\n      dup6\n        /* \"#utility.yul\":4987:4993   */\n      dup3\n        /* \"#utility.yul\":4976:4985   */\n      dup7\n        /* \"#utility.yul\":4972:4994   */\n      add\n        /* \"#utility.yul\":4951:5004   */\n      tag_208\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4941:5004   */\n      swap2\n      pop\n        /* \"#utility.yul\":4896:5014   */\n      pop\n        /* \"#utility.yul\":4547:5021   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5027:5356   */\n    tag_50:\n        /* \"#utility.yul\":5086:5092   */\n      0x00\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5123:5132   */\n      dup3\n        /* \"#utility.yul\":5114:5121   */\n      dup5\n        /* \"#utility.yul\":5110:5133   */\n      sub\n        /* \"#utility.yul\":5106:5138   */\n      slt\n        /* \"#utility.yul\":5103:5222   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":5141:5220   */\n      tag_316\n      tag_198\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5103:5222   */\n    tag_315:\n        /* \"#utility.yul\":5261:5262   */\n      0x00\n        /* \"#utility.yul\":5286:5339   */\n      tag_317\n        /* \"#utility.yul\":5331:5338   */\n      dup5\n        /* \"#utility.yul\":5322:5328   */\n      dup3\n        /* \"#utility.yul\":5311:5320   */\n      dup6\n        /* \"#utility.yul\":5307:5329   */\n      add\n        /* \"#utility.yul\":5286:5339   */\n      tag_208\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5276:5339   */\n      swap2\n      pop\n        /* \"#utility.yul\":5232:5349   */\n      pop\n        /* \"#utility.yul\":5027:5356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5362:5480   */\n    tag_217:\n        /* \"#utility.yul\":5449:5473   */\n      tag_319\n        /* \"#utility.yul\":5467:5472   */\n      dup2\n        /* \"#utility.yul\":5449:5473   */\n      tag_206\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5444:5447   */\n      dup3\n        /* \"#utility.yul\":5437:5474   */\n      mstore\n        /* \"#utility.yul\":5362:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5708   */\n    tag_62:\n        /* \"#utility.yul\":5579:5583   */\n      0x00\n        /* \"#utility.yul\":5617:5619   */\n      0x20\n        /* \"#utility.yul\":5606:5615   */\n      dup3\n        /* \"#utility.yul\":5602:5620   */\n      add\n        /* \"#utility.yul\":5594:5620   */\n      swap1\n      pop\n        /* \"#utility.yul\":5630:5701   */\n      tag_321\n        /* \"#utility.yul\":5698:5699   */\n      0x00\n        /* \"#utility.yul\":5687:5696   */\n      dup4\n        /* \"#utility.yul\":5683:5700   */\n      add\n        /* \"#utility.yul\":5674:5680   */\n      dup5\n        /* \"#utility.yul\":5630:5701   */\n      tag_217\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5486:5708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5714:5829   */\n    tag_218:\n        /* \"#utility.yul\":5770:5777   */\n      0x00\n        /* \"#utility.yul\":5799:5823   */\n      tag_323\n        /* \"#utility.yul\":5817:5822   */\n      dup3\n        /* \"#utility.yul\":5799:5823   */\n      tag_206\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5788:5823   */\n      swap1\n      pop\n        /* \"#utility.yul\":5714:5829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5835:5995   */\n    tag_219:\n        /* \"#utility.yul\":5927:5970   */\n      tag_325\n        /* \"#utility.yul\":5964:5969   */\n      dup2\n        /* \"#utility.yul\":5927:5970   */\n      tag_218\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5920:5925   */\n      dup2\n        /* \"#utility.yul\":5917:5971   */\n      eq\n        /* \"#utility.yul\":5907:5989   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5985:5986   */\n      0x00\n        /* \"#utility.yul\":5982:5983   */\n      dup1\n        /* \"#utility.yul\":5975:5987   */\n      revert\n        /* \"#utility.yul\":5907:5989   */\n    tag_326:\n        /* \"#utility.yul\":5835:5995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6001:6178   */\n    tag_220:\n        /* \"#utility.yul\":6066:6071   */\n      0x00\n        /* \"#utility.yul\":6104:6110   */\n      dup2\n        /* \"#utility.yul\":6091:6111   */\n      calldataload\n        /* \"#utility.yul\":6082:6111   */\n      swap1\n      pop\n        /* \"#utility.yul\":6120:6172   */\n      tag_328\n        /* \"#utility.yul\":6166:6171   */\n      dup2\n        /* \"#utility.yul\":6120:6172   */\n      tag_219\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6001:6178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6184:6551   */\n    tag_79:\n        /* \"#utility.yul\":6262:6268   */\n      0x00\n        /* \"#utility.yul\":6311:6313   */\n      0x20\n        /* \"#utility.yul\":6299:6308   */\n      dup3\n        /* \"#utility.yul\":6290:6297   */\n      dup5\n        /* \"#utility.yul\":6286:6309   */\n      sub\n        /* \"#utility.yul\":6282:6314   */\n      slt\n        /* \"#utility.yul\":6279:6398   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":6317:6396   */\n      tag_331\n      tag_198\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6279:6398   */\n    tag_330:\n        /* \"#utility.yul\":6437:6438   */\n      0x00\n        /* \"#utility.yul\":6462:6534   */\n      tag_332\n        /* \"#utility.yul\":6526:6533   */\n      dup5\n        /* \"#utility.yul\":6517:6523   */\n      dup3\n        /* \"#utility.yul\":6506:6515   */\n      dup6\n        /* \"#utility.yul\":6502:6524   */\n      add\n        /* \"#utility.yul\":6462:6534   */\n      tag_220\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6452:6534   */\n      swap2\n      pop\n        /* \"#utility.yul\":6408:6544   */\n      pop\n        /* \"#utility.yul\":6184:6551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6557:6617   */\n    tag_221:\n        /* \"#utility.yul\":6585:6588   */\n      0x00\n        /* \"#utility.yul\":6606:6611   */\n      dup2\n        /* \"#utility.yul\":6599:6611   */\n      swap1\n      pop\n        /* \"#utility.yul\":6557:6617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6623:6765   */\n    tag_222:\n        /* \"#utility.yul\":6673:6682   */\n      0x00\n        /* \"#utility.yul\":6706:6759   */\n      tag_335\n        /* \"#utility.yul\":6724:6758   */\n      tag_336\n        /* \"#utility.yul\":6733:6757   */\n      tag_337\n        /* \"#utility.yul\":6751:6756   */\n      dup5\n        /* \"#utility.yul\":6733:6757   */\n      tag_205\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6724:6758   */\n      tag_221\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6706:6759   */\n      tag_205\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6693:6759   */\n      swap1\n      pop\n        /* \"#utility.yul\":6623:6765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6771:6897   */\n    tag_223:\n        /* \"#utility.yul\":6821:6830   */\n      0x00\n        /* \"#utility.yul\":6854:6891   */\n      tag_339\n        /* \"#utility.yul\":6885:6890   */\n      dup3\n        /* \"#utility.yul\":6854:6891   */\n      tag_222\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6841:6891   */\n      swap1\n      pop\n        /* \"#utility.yul\":6771:6897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6903:7048   */\n    tag_224:\n        /* \"#utility.yul\":6972:6981   */\n      0x00\n        /* \"#utility.yul\":7005:7042   */\n      tag_341\n        /* \"#utility.yul\":7036:7041   */\n      dup3\n        /* \"#utility.yul\":7005:7042   */\n      tag_223\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6992:7042   */\n      swap1\n      pop\n        /* \"#utility.yul\":6903:7048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7054:7223   */\n    tag_225:\n        /* \"#utility.yul\":7160:7216   */\n      tag_343\n        /* \"#utility.yul\":7210:7215   */\n      dup2\n        /* \"#utility.yul\":7160:7216   */\n      tag_224\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7155:7158   */\n      dup3\n        /* \"#utility.yul\":7148:7217   */\n      mstore\n        /* \"#utility.yul\":7054:7223   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7229:7489   */\n    tag_84:\n        /* \"#utility.yul\":7341:7345   */\n      0x00\n        /* \"#utility.yul\":7379:7381   */\n      0x20\n        /* \"#utility.yul\":7368:7377   */\n      dup3\n        /* \"#utility.yul\":7364:7382   */\n      add\n        /* \"#utility.yul\":7356:7382   */\n      swap1\n      pop\n        /* \"#utility.yul\":7392:7482   */\n      tag_345\n        /* \"#utility.yul\":7479:7480   */\n      0x00\n        /* \"#utility.yul\":7468:7477   */\n      dup4\n        /* \"#utility.yul\":7464:7481   */\n      add\n        /* \"#utility.yul\":7455:7461   */\n      dup5\n        /* \"#utility.yul\":7392:7482   */\n      tag_225\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7229:7489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7495:7586   */\n    tag_226:\n        /* \"#utility.yul\":7531:7538   */\n      0x00\n        /* \"#utility.yul\":7571:7579   */\n      0xffffff\n        /* \"#utility.yul\":7564:7569   */\n      dup3\n        /* \"#utility.yul\":7560:7580   */\n      and\n        /* \"#utility.yul\":7549:7580   */\n      swap1\n      pop\n        /* \"#utility.yul\":7495:7586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7592:7707   */\n    tag_227:\n        /* \"#utility.yul\":7677:7700   */\n      tag_348\n        /* \"#utility.yul\":7694:7699   */\n      dup2\n        /* \"#utility.yul\":7677:7700   */\n      tag_226\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7672:7675   */\n      dup3\n        /* \"#utility.yul\":7665:7701   */\n      mstore\n        /* \"#utility.yul\":7592:7707   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:7931   */\n    tag_91:\n        /* \"#utility.yul\":7804:7808   */\n      0x00\n        /* \"#utility.yul\":7842:7844   */\n      0x20\n        /* \"#utility.yul\":7831:7840   */\n      dup3\n        /* \"#utility.yul\":7827:7845   */\n      add\n        /* \"#utility.yul\":7819:7845   */\n      swap1\n      pop\n        /* \"#utility.yul\":7855:7924   */\n      tag_350\n        /* \"#utility.yul\":7921:7922   */\n      0x00\n        /* \"#utility.yul\":7910:7919   */\n      dup4\n        /* \"#utility.yul\":7906:7923   */\n      add\n        /* \"#utility.yul\":7897:7903   */\n      dup5\n        /* \"#utility.yul\":7855:7924   */\n      tag_227\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7713:7931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7937:8106   */\n    tag_228:\n        /* \"#utility.yul\":8021:8032   */\n      0x00\n        /* \"#utility.yul\":8055:8061   */\n      dup3\n        /* \"#utility.yul\":8050:8053   */\n      dup3\n        /* \"#utility.yul\":8043:8062   */\n      mstore\n        /* \"#utility.yul\":8095:8099   */\n      0x20\n        /* \"#utility.yul\":8090:8093   */\n      dup3\n        /* \"#utility.yul\":8086:8100   */\n      add\n        /* \"#utility.yul\":8071:8100   */\n      swap1\n      pop\n        /* \"#utility.yul\":7937:8106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8112:8293   */\n    tag_229:\n        /* \"#utility.yul\":8252:8285   */\n      0x546f6b656e206e6f7420617070726f76656420666f72207377617070696e6700\n        /* \"#utility.yul\":8248:8249   */\n      0x00\n        /* \"#utility.yul\":8240:8246   */\n      dup3\n        /* \"#utility.yul\":8236:8250   */\n      add\n        /* \"#utility.yul\":8229:8286   */\n      mstore\n        /* \"#utility.yul\":8112:8293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8665   */\n    tag_230:\n        /* \"#utility.yul\":8441:8444   */\n      0x00\n        /* \"#utility.yul\":8462:8529   */\n      tag_354\n        /* \"#utility.yul\":8526:8528   */\n      0x1f\n        /* \"#utility.yul\":8521:8524   */\n      dup4\n        /* \"#utility.yul\":8462:8529   */\n      tag_228\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8455:8529   */\n      swap2\n      pop\n        /* \"#utility.yul\":8538:8631   */\n      tag_355\n        /* \"#utility.yul\":8627:8630   */\n      dup3\n        /* \"#utility.yul\":8538:8631   */\n      tag_229\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8656:8658   */\n      0x20\n        /* \"#utility.yul\":8651:8654   */\n      dup3\n        /* \"#utility.yul\":8647:8659   */\n      add\n        /* \"#utility.yul\":8640:8659   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8671:9090   */\n    tag_102:\n        /* \"#utility.yul\":8837:8841   */\n      0x00\n        /* \"#utility.yul\":8875:8877   */\n      0x20\n        /* \"#utility.yul\":8864:8873   */\n      dup3\n        /* \"#utility.yul\":8860:8878   */\n      add\n        /* \"#utility.yul\":8852:8878   */\n      swap1\n      pop\n        /* \"#utility.yul\":8924:8933   */\n      dup2\n        /* \"#utility.yul\":8918:8922   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      sub\n        /* \"#utility.yul\":8910:8911   */\n      0x00\n        /* \"#utility.yul\":8899:8908   */\n      dup4\n        /* \"#utility.yul\":8895:8912   */\n      add\n        /* \"#utility.yul\":8888:8935   */\n      mstore\n        /* \"#utility.yul\":8952:9083   */\n      tag_357\n        /* \"#utility.yul\":9078:9082   */\n      dup2\n        /* \"#utility.yul\":8952:9083   */\n      tag_230\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8944:9083   */\n      swap1\n      pop\n        /* \"#utility.yul\":8671:9090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9096:9321   */\n    tag_231:\n        /* \"#utility.yul\":9236:9270   */\n      0x496e70757420616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9224:9230   */\n      dup3\n        /* \"#utility.yul\":9220:9234   */\n      add\n        /* \"#utility.yul\":9213:9271   */\n      mstore\n        /* \"#utility.yul\":9305:9313   */\n      0x6e207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9300:9302   */\n      0x20\n        /* \"#utility.yul\":9292:9298   */\n      dup3\n        /* \"#utility.yul\":9288:9303   */\n      add\n        /* \"#utility.yul\":9281:9314   */\n      mstore\n        /* \"#utility.yul\":9096:9321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9327:9693   */\n    tag_232:\n        /* \"#utility.yul\":9469:9472   */\n      0x00\n        /* \"#utility.yul\":9490:9557   */\n      tag_360\n        /* \"#utility.yul\":9554:9556   */\n      0x26\n        /* \"#utility.yul\":9549:9552   */\n      dup4\n        /* \"#utility.yul\":9490:9557   */\n      tag_228\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9483:9557   */\n      swap2\n      pop\n        /* \"#utility.yul\":9566:9659   */\n      tag_361\n        /* \"#utility.yul\":9655:9658   */\n      dup3\n        /* \"#utility.yul\":9566:9659   */\n      tag_231\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9684:9686   */\n      0x40\n        /* \"#utility.yul\":9679:9682   */\n      dup3\n        /* \"#utility.yul\":9675:9687   */\n      add\n        /* \"#utility.yul\":9668:9687   */\n      swap1\n      pop\n        /* \"#utility.yul\":9327:9693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9699:10118   */\n    tag_106:\n        /* \"#utility.yul\":9865:9869   */\n      0x00\n        /* \"#utility.yul\":9903:9905   */\n      0x20\n        /* \"#utility.yul\":9892:9901   */\n      dup3\n        /* \"#utility.yul\":9888:9906   */\n      add\n        /* \"#utility.yul\":9880:9906   */\n      swap1\n      pop\n        /* \"#utility.yul\":9952:9961   */\n      dup2\n        /* \"#utility.yul\":9946:9950   */\n      dup2\n        /* \"#utility.yul\":9942:9962   */\n      sub\n        /* \"#utility.yul\":9938:9939   */\n      0x00\n        /* \"#utility.yul\":9927:9936   */\n      dup4\n        /* \"#utility.yul\":9923:9940   */\n      add\n        /* \"#utility.yul\":9916:9963   */\n      mstore\n        /* \"#utility.yul\":9980:10111   */\n      tag_363\n        /* \"#utility.yul\":10106:10110   */\n      dup2\n        /* \"#utility.yul\":9980:10111   */\n      tag_232\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9972:10111   */\n      swap1\n      pop\n        /* \"#utility.yul\":9699:10118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10124:10566   */\n    tag_108:\n        /* \"#utility.yul\":10273:10277   */\n      0x00\n        /* \"#utility.yul\":10311:10313   */\n      0x60\n        /* \"#utility.yul\":10300:10309   */\n      dup3\n        /* \"#utility.yul\":10296:10314   */\n      add\n        /* \"#utility.yul\":10288:10314   */\n      swap1\n      pop\n        /* \"#utility.yul\":10324:10395   */\n      tag_365\n        /* \"#utility.yul\":10392:10393   */\n      0x00\n        /* \"#utility.yul\":10381:10390   */\n      dup4\n        /* \"#utility.yul\":10377:10394   */\n      add\n        /* \"#utility.yul\":10368:10374   */\n      dup7\n        /* \"#utility.yul\":10324:10395   */\n      tag_217\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10405:10477   */\n      tag_366\n        /* \"#utility.yul\":10473:10475   */\n      0x20\n        /* \"#utility.yul\":10462:10471   */\n      dup4\n        /* \"#utility.yul\":10458:10476   */\n      add\n        /* \"#utility.yul\":10449:10455   */\n      dup6\n        /* \"#utility.yul\":10405:10477   */\n      tag_217\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10487:10559   */\n      tag_367\n        /* \"#utility.yul\":10555:10557   */\n      0x40\n        /* \"#utility.yul\":10544:10553   */\n      dup4\n        /* \"#utility.yul\":10540:10558   */\n      add\n        /* \"#utility.yul\":10531:10537   */\n      dup5\n        /* \"#utility.yul\":10487:10559   */\n      tag_212\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10124:10566   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10572:10688   */\n    tag_233:\n        /* \"#utility.yul\":10642:10663   */\n      tag_369\n        /* \"#utility.yul\":10657:10662   */\n      dup2\n        /* \"#utility.yul\":10642:10663   */\n      tag_203\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10635:10640   */\n      dup2\n        /* \"#utility.yul\":10632:10664   */\n      eq\n        /* \"#utility.yul\":10622:10682   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10678:10679   */\n      0x00\n        /* \"#utility.yul\":10675:10676   */\n      dup1\n        /* \"#utility.yul\":10668:10680   */\n      revert\n        /* \"#utility.yul\":10622:10682   */\n    tag_370:\n        /* \"#utility.yul\":10572:10688   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10694:10831   */\n    tag_234:\n        /* \"#utility.yul\":10748:10753   */\n      0x00\n        /* \"#utility.yul\":10779:10785   */\n      dup2\n        /* \"#utility.yul\":10773:10786   */\n      mload\n        /* \"#utility.yul\":10764:10786   */\n      swap1\n      pop\n        /* \"#utility.yul\":10795:10825   */\n      tag_372\n        /* \"#utility.yul\":10819:10824   */\n      dup2\n        /* \"#utility.yul\":10795:10825   */\n      tag_233\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10694:10831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10837:11182   */\n    tag_112:\n        /* \"#utility.yul\":10904:10910   */\n      0x00\n        /* \"#utility.yul\":10953:10955   */\n      0x20\n        /* \"#utility.yul\":10941:10950   */\n      dup3\n        /* \"#utility.yul\":10932:10939   */\n      dup5\n        /* \"#utility.yul\":10928:10951   */\n      sub\n        /* \"#utility.yul\":10924:10956   */\n      slt\n        /* \"#utility.yul\":10921:11040   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":10959:11038   */\n      tag_375\n      tag_198\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10921:11040   */\n    tag_374:\n        /* \"#utility.yul\":11079:11080   */\n      0x00\n        /* \"#utility.yul\":11104:11165   */\n      tag_376\n        /* \"#utility.yul\":11157:11164   */\n      dup5\n        /* \"#utility.yul\":11148:11154   */\n      dup3\n        /* \"#utility.yul\":11137:11146   */\n      dup6\n        /* \"#utility.yul\":11133:11155   */\n      add\n        /* \"#utility.yul\":11104:11165   */\n      tag_234\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11094:11165   */\n      swap2\n      pop\n        /* \"#utility.yul\":11050:11175   */\n      pop\n        /* \"#utility.yul\":10837:11182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11520   */\n    tag_114:\n        /* \"#utility.yul\":11309:11313   */\n      0x00\n        /* \"#utility.yul\":11347:11349   */\n      0x40\n        /* \"#utility.yul\":11336:11345   */\n      dup3\n        /* \"#utility.yul\":11332:11350   */\n      add\n        /* \"#utility.yul\":11324:11350   */\n      swap1\n      pop\n        /* \"#utility.yul\":11360:11431   */\n      tag_378\n        /* \"#utility.yul\":11428:11429   */\n      0x00\n        /* \"#utility.yul\":11417:11426   */\n      dup4\n        /* \"#utility.yul\":11413:11430   */\n      add\n        /* \"#utility.yul\":11404:11410   */\n      dup6\n        /* \"#utility.yul\":11360:11431   */\n      tag_217\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11441:11513   */\n      tag_379\n        /* \"#utility.yul\":11509:11511   */\n      0x20\n        /* \"#utility.yul\":11498:11507   */\n      dup4\n        /* \"#utility.yul\":11494:11512   */\n      add\n        /* \"#utility.yul\":11485:11491   */\n      dup5\n        /* \"#utility.yul\":11441:11513   */\n      tag_212\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11188:11520   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11526:11634   */\n    tag_235:\n        /* \"#utility.yul\":11603:11627   */\n      tag_381\n        /* \"#utility.yul\":11621:11626   */\n      dup2\n        /* \"#utility.yul\":11603:11627   */\n      tag_206\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11598:11601   */\n      dup3\n        /* \"#utility.yul\":11591:11628   */\n      mstore\n        /* \"#utility.yul\":11526:11634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11640:11745   */\n    tag_236:\n        /* \"#utility.yul\":11715:11738   */\n      tag_383\n        /* \"#utility.yul\":11732:11737   */\n      dup2\n        /* \"#utility.yul\":11715:11738   */\n      tag_226\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11710:11713   */\n      dup3\n        /* \"#utility.yul\":11703:11739   */\n      mstore\n        /* \"#utility.yul\":11640:11745   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11751:11859   */\n    tag_237:\n        /* \"#utility.yul\":11828:11852   */\n      tag_385\n        /* \"#utility.yul\":11846:11851   */\n      dup2\n        /* \"#utility.yul\":11828:11852   */\n      tag_209\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11823:11826   */\n      dup3\n        /* \"#utility.yul\":11816:11853   */\n      mstore\n        /* \"#utility.yul\":11751:11859   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11865:11973   */\n    tag_238:\n        /* \"#utility.yul\":11942:11966   */\n      tag_387\n        /* \"#utility.yul\":11960:11965   */\n      dup2\n        /* \"#utility.yul\":11942:11966   */\n      tag_205\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11937:11940   */\n      dup3\n        /* \"#utility.yul\":11930:11967   */\n      mstore\n        /* \"#utility.yul\":11865:11973   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12073:13696   */\n    tag_239:\n        /* \"#utility.yul\":12248:12254   */\n      0x0100\n        /* \"#utility.yul\":12243:12246   */\n      dup3\n        /* \"#utility.yul\":12239:12255   */\n      add\n        /* \"#utility.yul\":12340:12344   */\n      0x00\n        /* \"#utility.yul\":12333:12338   */\n      dup3\n        /* \"#utility.yul\":12329:12345   */\n      add\n        /* \"#utility.yul\":12323:12346   */\n      mload\n        /* \"#utility.yul\":12359:12422   */\n      tag_389\n        /* \"#utility.yul\":12416:12420   */\n      0x00\n        /* \"#utility.yul\":12411:12414   */\n      dup6\n        /* \"#utility.yul\":12407:12421   */\n      add\n        /* \"#utility.yul\":12393:12405   */\n      dup3\n        /* \"#utility.yul\":12359:12422   */\n      tag_235\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":12265:12432   */\n      pop\n        /* \"#utility.yul\":12518:12522   */\n      0x20\n        /* \"#utility.yul\":12511:12516   */\n      dup3\n        /* \"#utility.yul\":12507:12523   */\n      add\n        /* \"#utility.yul\":12501:12524   */\n      mload\n        /* \"#utility.yul\":12537:12600   */\n      tag_390\n        /* \"#utility.yul\":12594:12598   */\n      0x20\n        /* \"#utility.yul\":12589:12592   */\n      dup6\n        /* \"#utility.yul\":12585:12599   */\n      add\n        /* \"#utility.yul\":12571:12583   */\n      dup3\n        /* \"#utility.yul\":12537:12600   */\n      tag_235\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12442:12610   */\n      pop\n        /* \"#utility.yul\":12691:12695   */\n      0x40\n        /* \"#utility.yul\":12684:12689   */\n      dup3\n        /* \"#utility.yul\":12680:12696   */\n      add\n        /* \"#utility.yul\":12674:12697   */\n      mload\n        /* \"#utility.yul\":12710:12771   */\n      tag_391\n        /* \"#utility.yul\":12765:12769   */\n      0x40\n        /* \"#utility.yul\":12760:12763   */\n      dup6\n        /* \"#utility.yul\":12756:12770   */\n      add\n        /* \"#utility.yul\":12742:12754   */\n      dup3\n        /* \"#utility.yul\":12710:12771   */\n      tag_236\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12620:12781   */\n      pop\n        /* \"#utility.yul\":12868:12872   */\n      0x60\n        /* \"#utility.yul\":12861:12866   */\n      dup3\n        /* \"#utility.yul\":12857:12873   */\n      add\n        /* \"#utility.yul\":12851:12874   */\n      mload\n        /* \"#utility.yul\":12887:12950   */\n      tag_392\n        /* \"#utility.yul\":12944:12948   */\n      0x60\n        /* \"#utility.yul\":12939:12942   */\n      dup6\n        /* \"#utility.yul\":12935:12949   */\n      add\n        /* \"#utility.yul\":12921:12933   */\n      dup3\n        /* \"#utility.yul\":12887:12950   */\n      tag_235\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12791:12960   */\n      pop\n        /* \"#utility.yul\":13046:13050   */\n      0x80\n        /* \"#utility.yul\":13039:13044   */\n      dup3\n        /* \"#utility.yul\":13035:13051   */\n      add\n        /* \"#utility.yul\":13029:13052   */\n      mload\n        /* \"#utility.yul\":13065:13128   */\n      tag_393\n        /* \"#utility.yul\":13122:13126   */\n      0x80\n        /* \"#utility.yul\":13117:13120   */\n      dup6\n        /* \"#utility.yul\":13113:13127   */\n      add\n        /* \"#utility.yul\":13099:13111   */\n      dup3\n        /* \"#utility.yul\":13065:13128   */\n      tag_237\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12970:13138   */\n      pop\n        /* \"#utility.yul\":13224:13228   */\n      0xa0\n        /* \"#utility.yul\":13217:13222   */\n      dup3\n        /* \"#utility.yul\":13213:13229   */\n      add\n        /* \"#utility.yul\":13207:13230   */\n      mload\n        /* \"#utility.yul\":13243:13306   */\n      tag_394\n        /* \"#utility.yul\":13300:13304   */\n      0xa0\n        /* \"#utility.yul\":13295:13298   */\n      dup6\n        /* \"#utility.yul\":13291:13305   */\n      add\n        /* \"#utility.yul\":13277:13289   */\n      dup3\n        /* \"#utility.yul\":13243:13306   */\n      tag_237\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13148:13316   */\n      pop\n        /* \"#utility.yul\":13410:13414   */\n      0xc0\n        /* \"#utility.yul\":13403:13408   */\n      dup3\n        /* \"#utility.yul\":13399:13415   */\n      add\n        /* \"#utility.yul\":13393:13416   */\n      mload\n        /* \"#utility.yul\":13429:13492   */\n      tag_395\n        /* \"#utility.yul\":13486:13490   */\n      0xc0\n        /* \"#utility.yul\":13481:13484   */\n      dup6\n        /* \"#utility.yul\":13477:13491   */\n      add\n        /* \"#utility.yul\":13463:13475   */\n      dup3\n        /* \"#utility.yul\":13429:13492   */\n      tag_237\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13326:13502   */\n      pop\n        /* \"#utility.yul\":13597:13601   */\n      0xe0\n        /* \"#utility.yul\":13590:13595   */\n      dup3\n        /* \"#utility.yul\":13586:13602   */\n      add\n        /* \"#utility.yul\":13580:13603   */\n      mload\n        /* \"#utility.yul\":13616:13679   */\n      tag_396\n        /* \"#utility.yul\":13673:13677   */\n      0xe0\n        /* \"#utility.yul\":13668:13671   */\n      dup6\n        /* \"#utility.yul\":13664:13678   */\n      add\n        /* \"#utility.yul\":13650:13662   */\n      dup3\n        /* \"#utility.yul\":13616:13679   */\n      tag_238\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13512:13689   */\n      pop\n        /* \"#utility.yul\":12217:13696   */\n      pop\n        /* \"#utility.yul\":12073:13696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13702:14081   */\n    tag_119:\n        /* \"#utility.yul\":13873:13877   */\n      0x00\n        /* \"#utility.yul\":13911:13914   */\n      0x0100\n        /* \"#utility.yul\":13900:13909   */\n      dup3\n        /* \"#utility.yul\":13896:13915   */\n      add\n        /* \"#utility.yul\":13888:13915   */\n      swap1\n      pop\n        /* \"#utility.yul\":13925:14074   */\n      tag_398\n        /* \"#utility.yul\":14071:14072   */\n      0x00\n        /* \"#utility.yul\":14060:14069   */\n      dup4\n        /* \"#utility.yul\":14056:14073   */\n      add\n        /* \"#utility.yul\":14047:14053   */\n      dup5\n        /* \"#utility.yul\":13925:14074   */\n      tag_239\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13702:14081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14087:14230   */\n    tag_240:\n        /* \"#utility.yul\":14144:14149   */\n      0x00\n        /* \"#utility.yul\":14175:14181   */\n      dup2\n        /* \"#utility.yul\":14169:14182   */\n      mload\n        /* \"#utility.yul\":14160:14182   */\n      swap1\n      pop\n        /* \"#utility.yul\":14191:14224   */\n      tag_400\n        /* \"#utility.yul\":14218:14223   */\n      dup2\n        /* \"#utility.yul\":14191:14224   */\n      tag_210\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14087:14230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14236:14587   */\n    tag_123:\n        /* \"#utility.yul\":14306:14312   */\n      0x00\n        /* \"#utility.yul\":14355:14357   */\n      0x20\n        /* \"#utility.yul\":14343:14352   */\n      dup3\n        /* \"#utility.yul\":14334:14341   */\n      dup5\n        /* \"#utility.yul\":14330:14353   */\n      sub\n        /* \"#utility.yul\":14326:14358   */\n      slt\n        /* \"#utility.yul\":14323:14442   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":14361:14440   */\n      tag_403\n      tag_198\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14323:14442   */\n    tag_402:\n        /* \"#utility.yul\":14481:14482   */\n      0x00\n        /* \"#utility.yul\":14506:14570   */\n      tag_404\n        /* \"#utility.yul\":14562:14569   */\n      dup5\n        /* \"#utility.yul\":14553:14559   */\n      dup3\n        /* \"#utility.yul\":14542:14551   */\n      dup6\n        /* \"#utility.yul\":14538:14560   */\n      add\n        /* \"#utility.yul\":14506:14570   */\n      tag_240\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14496:14570   */\n      swap2\n      pop\n        /* \"#utility.yul\":14452:14580   */\n      pop\n        /* \"#utility.yul\":14236:14587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14593:14769   */\n    tag_241:\n        /* \"#utility.yul\":14733:14761   */\n      0x496e73756666696369656e74206f757470757420616d6f756e74000000000000\n        /* \"#utility.yul\":14729:14730   */\n      0x00\n        /* \"#utility.yul\":14721:14727   */\n      dup3\n        /* \"#utility.yul\":14717:14731   */\n      add\n        /* \"#utility.yul\":14710:14762   */\n      mstore\n        /* \"#utility.yul\":14593:14769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14775:15141   */\n    tag_242:\n        /* \"#utility.yul\":14917:14920   */\n      0x00\n        /* \"#utility.yul\":14938:15005   */\n      tag_407\n        /* \"#utility.yul\":15002:15004   */\n      0x1a\n        /* \"#utility.yul\":14997:15000   */\n      dup4\n        /* \"#utility.yul\":14938:15005   */\n      tag_228\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14931:15005   */\n      swap2\n      pop\n        /* \"#utility.yul\":15014:15107   */\n      tag_408\n        /* \"#utility.yul\":15103:15106   */\n      dup3\n        /* \"#utility.yul\":15014:15107   */\n      tag_241\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":15132:15134   */\n      0x20\n        /* \"#utility.yul\":15127:15130   */\n      dup3\n        /* \"#utility.yul\":15123:15135   */\n      add\n        /* \"#utility.yul\":15116:15135   */\n      swap1\n      pop\n        /* \"#utility.yul\":14775:15141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15147:15566   */\n    tag_126:\n        /* \"#utility.yul\":15313:15317   */\n      0x00\n        /* \"#utility.yul\":15351:15353   */\n      0x20\n        /* \"#utility.yul\":15340:15349   */\n      dup3\n        /* \"#utility.yul\":15336:15354   */\n      add\n        /* \"#utility.yul\":15328:15354   */\n      swap1\n      pop\n        /* \"#utility.yul\":15400:15409   */\n      dup2\n        /* \"#utility.yul\":15394:15398   */\n      dup2\n        /* \"#utility.yul\":15390:15410   */\n      sub\n        /* \"#utility.yul\":15386:15387   */\n      0x00\n        /* \"#utility.yul\":15375:15384   */\n      dup4\n        /* \"#utility.yul\":15371:15388   */\n      add\n        /* \"#utility.yul\":15364:15411   */\n      mstore\n        /* \"#utility.yul\":15428:15559   */\n      tag_410\n        /* \"#utility.yul\":15554:15558   */\n      dup2\n        /* \"#utility.yul\":15428:15559   */\n      tag_242\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15420:15559   */\n      swap1\n      pop\n        /* \"#utility.yul\":15147:15566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15572:15904   */\n    tag_128:\n        /* \"#utility.yul\":15693:15697   */\n      0x00\n        /* \"#utility.yul\":15731:15733   */\n      0x40\n        /* \"#utility.yul\":15720:15729   */\n      dup3\n        /* \"#utility.yul\":15716:15734   */\n      add\n        /* \"#utility.yul\":15708:15734   */\n      swap1\n      pop\n        /* \"#utility.yul\":15744:15815   */\n      tag_412\n        /* \"#utility.yul\":15812:15813   */\n      0x00\n        /* \"#utility.yul\":15801:15810   */\n      dup4\n        /* \"#utility.yul\":15797:15814   */\n      add\n        /* \"#utility.yul\":15788:15794   */\n      dup6\n        /* \"#utility.yul\":15744:15815   */\n      tag_212\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15825:15897   */\n      tag_413\n        /* \"#utility.yul\":15893:15895   */\n      0x20\n        /* \"#utility.yul\":15882:15891   */\n      dup4\n        /* \"#utility.yul\":15878:15896   */\n      add\n        /* \"#utility.yul\":15869:15875   */\n      dup5\n        /* \"#utility.yul\":15825:15897   */\n      tag_212\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15572:15904   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15910:16092   */\n    tag_243:\n        /* \"#utility.yul\":16050:16084   */\n      0x5553444320697320616c7265616479207468652074617267657420746f6b656e\n        /* \"#utility.yul\":16046:16047   */\n      0x00\n        /* \"#utility.yul\":16038:16044   */\n      dup3\n        /* \"#utility.yul\":16034:16048   */\n      add\n        /* \"#utility.yul\":16027:16085   */\n      mstore\n        /* \"#utility.yul\":15910:16092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16098:16464   */\n    tag_244:\n        /* \"#utility.yul\":16240:16243   */\n      0x00\n        /* \"#utility.yul\":16261:16328   */\n      tag_416\n        /* \"#utility.yul\":16325:16327   */\n      0x20\n        /* \"#utility.yul\":16320:16323   */\n      dup4\n        /* \"#utility.yul\":16261:16328   */\n      tag_228\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16254:16328   */\n      swap2\n      pop\n        /* \"#utility.yul\":16337:16430   */\n      tag_417\n        /* \"#utility.yul\":16426:16429   */\n      dup3\n        /* \"#utility.yul\":16337:16430   */\n      tag_243\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":16455:16457   */\n      0x20\n        /* \"#utility.yul\":16450:16453   */\n      dup3\n        /* \"#utility.yul\":16446:16458   */\n      add\n        /* \"#utility.yul\":16439:16458   */\n      swap1\n      pop\n        /* \"#utility.yul\":16098:16464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16470:16889   */\n    tag_150:\n        /* \"#utility.yul\":16636:16640   */\n      0x00\n        /* \"#utility.yul\":16674:16676   */\n      0x20\n        /* \"#utility.yul\":16663:16672   */\n      dup3\n        /* \"#utility.yul\":16659:16677   */\n      add\n        /* \"#utility.yul\":16651:16677   */\n      swap1\n      pop\n        /* \"#utility.yul\":16723:16732   */\n      dup2\n        /* \"#utility.yul\":16717:16721   */\n      dup2\n        /* \"#utility.yul\":16713:16733   */\n      sub\n        /* \"#utility.yul\":16709:16710   */\n      0x00\n        /* \"#utility.yul\":16698:16707   */\n      dup4\n        /* \"#utility.yul\":16694:16711   */\n      add\n        /* \"#utility.yul\":16687:16734   */\n      mstore\n        /* \"#utility.yul\":16751:16882   */\n      tag_419\n        /* \"#utility.yul\":16877:16881   */\n      dup2\n        /* \"#utility.yul\":16751:16882   */\n      tag_244\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16743:16882   */\n      swap1\n      pop\n        /* \"#utility.yul\":16470:16889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16895:17066   */\n    tag_245:\n        /* \"#utility.yul\":17035:17058   */\n      0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n        /* \"#utility.yul\":17031:17032   */\n      0x00\n        /* \"#utility.yul\":17023:17029   */\n      dup3\n        /* \"#utility.yul\":17019:17033   */\n      add\n        /* \"#utility.yul\":17012:17059   */\n      mstore\n        /* \"#utility.yul\":16895:17066   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17072:17438   */\n    tag_246:\n        /* \"#utility.yul\":17214:17217   */\n      0x00\n        /* \"#utility.yul\":17235:17302   */\n      tag_422\n        /* \"#utility.yul\":17299:17301   */\n      0x15\n        /* \"#utility.yul\":17294:17297   */\n      dup4\n        /* \"#utility.yul\":17235:17302   */\n      tag_228\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":17228:17302   */\n      swap2\n      pop\n        /* \"#utility.yul\":17311:17404   */\n      tag_423\n        /* \"#utility.yul\":17400:17403   */\n      dup3\n        /* \"#utility.yul\":17311:17404   */\n      tag_245\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":17429:17431   */\n      0x20\n        /* \"#utility.yul\":17424:17427   */\n      dup3\n        /* \"#utility.yul\":17420:17432   */\n      add\n        /* \"#utility.yul\":17413:17432   */\n      swap1\n      pop\n        /* \"#utility.yul\":17072:17438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17444:17863   */\n    tag_153:\n        /* \"#utility.yul\":17610:17614   */\n      0x00\n        /* \"#utility.yul\":17648:17650   */\n      0x20\n        /* \"#utility.yul\":17637:17646   */\n      dup3\n        /* \"#utility.yul\":17633:17651   */\n      add\n        /* \"#utility.yul\":17625:17651   */\n      swap1\n      pop\n        /* \"#utility.yul\":17697:17706   */\n      dup2\n        /* \"#utility.yul\":17691:17695   */\n      dup2\n        /* \"#utility.yul\":17687:17707   */\n      sub\n        /* \"#utility.yul\":17683:17684   */\n      0x00\n        /* \"#utility.yul\":17672:17681   */\n      dup4\n        /* \"#utility.yul\":17668:17685   */\n      add\n        /* \"#utility.yul\":17661:17708   */\n      mstore\n        /* \"#utility.yul\":17725:17856   */\n      tag_425\n        /* \"#utility.yul\":17851:17855   */\n      dup2\n        /* \"#utility.yul\":17725:17856   */\n      tag_246\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":17717:17856   */\n      swap1\n      pop\n        /* \"#utility.yul\":17444:17863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17869:18040   */\n    tag_247:\n        /* \"#utility.yul\":18009:18032   */\n      0x546f6b656e206973206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":18005:18006   */\n      0x00\n        /* \"#utility.yul\":17997:18003   */\n      dup3\n        /* \"#utility.yul\":17993:18007   */\n      add\n        /* \"#utility.yul\":17986:18033   */\n      mstore\n        /* \"#utility.yul\":17869:18040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18046:18412   */\n    tag_248:\n        /* \"#utility.yul\":18188:18191   */\n      0x00\n        /* \"#utility.yul\":18209:18276   */\n      tag_428\n        /* \"#utility.yul\":18273:18275   */\n      0x15\n        /* \"#utility.yul\":18268:18271   */\n      dup4\n        /* \"#utility.yul\":18209:18276   */\n      tag_228\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":18202:18276   */\n      swap2\n      pop\n        /* \"#utility.yul\":18285:18378   */\n      tag_429\n        /* \"#utility.yul\":18374:18377   */\n      dup3\n        /* \"#utility.yul\":18285:18378   */\n      tag_247\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":18403:18405   */\n      0x20\n        /* \"#utility.yul\":18398:18401   */\n      dup3\n        /* \"#utility.yul\":18394:18406   */\n      add\n        /* \"#utility.yul\":18387:18406   */\n      swap1\n      pop\n        /* \"#utility.yul\":18046:18412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18418:18837   */\n    tag_160:\n        /* \"#utility.yul\":18584:18588   */\n      0x00\n        /* \"#utility.yul\":18622:18624   */\n      0x20\n        /* \"#utility.yul\":18611:18620   */\n      dup3\n        /* \"#utility.yul\":18607:18625   */\n      add\n        /* \"#utility.yul\":18599:18625   */\n      swap1\n      pop\n        /* \"#utility.yul\":18671:18680   */\n      dup2\n        /* \"#utility.yul\":18665:18669   */\n      dup2\n        /* \"#utility.yul\":18661:18681   */\n      sub\n        /* \"#utility.yul\":18657:18658   */\n      0x00\n        /* \"#utility.yul\":18646:18655   */\n      dup4\n        /* \"#utility.yul\":18642:18659   */\n      add\n        /* \"#utility.yul\":18635:18682   */\n      mstore\n        /* \"#utility.yul\":18699:18830   */\n      tag_431\n        /* \"#utility.yul\":18825:18829   */\n      dup2\n        /* \"#utility.yul\":18699:18830   */\n      tag_248\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":18691:18830   */\n      swap1\n      pop\n        /* \"#utility.yul\":18418:18837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18843:19020   */\n    tag_249:\n        /* \"#utility.yul\":18983:19012   */\n      0x496e76616c6964207377617020726f7574657220616464726573730000000000\n        /* \"#utility.yul\":18979:18980   */\n      0x00\n        /* \"#utility.yul\":18971:18977   */\n      dup3\n        /* \"#utility.yul\":18967:18981   */\n      add\n        /* \"#utility.yul\":18960:19013   */\n      mstore\n        /* \"#utility.yul\":18843:19020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19026:19392   */\n    tag_250:\n        /* \"#utility.yul\":19168:19171   */\n      0x00\n        /* \"#utility.yul\":19189:19256   */\n      tag_434\n        /* \"#utility.yul\":19253:19255   */\n      0x1b\n        /* \"#utility.yul\":19248:19251   */\n      dup4\n        /* \"#utility.yul\":19189:19256   */\n      tag_228\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":19182:19256   */\n      swap2\n      pop\n        /* \"#utility.yul\":19265:19358   */\n      tag_435\n        /* \"#utility.yul\":19354:19357   */\n      dup3\n        /* \"#utility.yul\":19265:19358   */\n      tag_249\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":19383:19385   */\n      0x20\n        /* \"#utility.yul\":19378:19381   */\n      dup3\n        /* \"#utility.yul\":19374:19386   */\n      add\n        /* \"#utility.yul\":19367:19386   */\n      swap1\n      pop\n        /* \"#utility.yul\":19026:19392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19398:19817   */\n    tag_167:\n        /* \"#utility.yul\":19564:19568   */\n      0x00\n        /* \"#utility.yul\":19602:19604   */\n      0x20\n        /* \"#utility.yul\":19591:19600   */\n      dup3\n        /* \"#utility.yul\":19587:19605   */\n      add\n        /* \"#utility.yul\":19579:19605   */\n      swap1\n      pop\n        /* \"#utility.yul\":19651:19660   */\n      dup2\n        /* \"#utility.yul\":19645:19649   */\n      dup2\n        /* \"#utility.yul\":19641:19661   */\n      sub\n        /* \"#utility.yul\":19637:19638   */\n      0x00\n        /* \"#utility.yul\":19626:19635   */\n      dup4\n        /* \"#utility.yul\":19622:19639   */\n      add\n        /* \"#utility.yul\":19615:19662   */\n      mstore\n        /* \"#utility.yul\":19679:19810   */\n      tag_437\n        /* \"#utility.yul\":19805:19809   */\n      dup2\n        /* \"#utility.yul\":19679:19810   */\n      tag_250\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":19671:19810   */\n      swap1\n      pop\n        /* \"#utility.yul\":19398:19817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19823:20155   */\n    tag_196:\n        /* \"#utility.yul\":19944:19948   */\n      0x00\n        /* \"#utility.yul\":19982:19984   */\n      0x40\n        /* \"#utility.yul\":19971:19980   */\n      dup3\n        /* \"#utility.yul\":19967:19985   */\n      add\n        /* \"#utility.yul\":19959:19985   */\n      swap1\n      pop\n        /* \"#utility.yul\":19995:20066   */\n      tag_439\n        /* \"#utility.yul\":20063:20064   */\n      0x00\n        /* \"#utility.yul\":20052:20061   */\n      dup4\n        /* \"#utility.yul\":20048:20065   */\n      add\n        /* \"#utility.yul\":20039:20045   */\n      dup6\n        /* \"#utility.yul\":19995:20066   */\n      tag_217\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":20076:20148   */\n      tag_440\n        /* \"#utility.yul\":20144:20146   */\n      0x20\n        /* \"#utility.yul\":20133:20142   */\n      dup4\n        /* \"#utility.yul\":20129:20147   */\n      add\n        /* \"#utility.yul\":20120:20126   */\n      dup5\n        /* \"#utility.yul\":20076:20148   */\n      tag_216\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":19823:20155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220670e813ce75eb630d7eb2b6111b20c6443ffc10e9b1a03956ec997cc31e68c0864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 467,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": 811,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 712,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$705_fromMemory": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$705t_address_fromMemory": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$705": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$705": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3995:10",
										"nodeType": "YulBlock",
										"src": "0:3995:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "632:51:10",
													"nodeType": "YulBlock",
													"src": "632:51:10",
													"statements": [
														{
															"nativeSrc": "642:35:10",
															"nodeType": "YulAssignment",
															"src": "642:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:10"
																},
																"nativeSrc": "653:24:10",
																"nodeType": "YulFunctionCall",
																"src": "653:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$705",
												"nativeSrc": "568:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:10",
														"nodeType": "YulTypedName",
														"src": "614:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:10",
														"nodeType": "YulTypedName",
														"src": "624:7:10",
														"type": ""
													}
												],
												"src": "568:115:10"
											},
											{
												"body": {
													"nativeSrc": "751:98:10",
													"nodeType": "YulBlock",
													"src": "751:98:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:10",
																"nodeType": "YulBlock",
																"src": "827:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:10",
																					"nodeType": "YulLiteral",
																					"src": "836:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:10",
																					"nodeType": "YulLiteral",
																					"src": "839:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:10"
																			},
																			"nativeSrc": "829:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:10"
																		},
																		"nativeSrc": "829:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$705",
																					"nativeSrc": "781:36:10",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:10"
																				},
																				"nativeSrc": "781:43:10",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:10"
																		},
																		"nativeSrc": "771:54:10",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:10"
																},
																"nativeSrc": "764:62:10",
																"nodeType": "YulFunctionCall",
																"src": "764:62:10"
															},
															"nativeSrc": "761:82:10",
															"nodeType": "YulIf",
															"src": "761:82:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$705",
												"nativeSrc": "689:160:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:10",
														"nodeType": "YulTypedName",
														"src": "744:5:10",
														"type": ""
													}
												],
												"src": "689:160:10"
											},
											{
												"body": {
													"nativeSrc": "937:99:10",
													"nodeType": "YulBlock",
													"src": "937:99:10",
													"statements": [
														{
															"nativeSrc": "947:22:10",
															"nodeType": "YulAssignment",
															"src": "947:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:10"
																},
																"nativeSrc": "956:13:10",
																"nodeType": "YulFunctionCall",
																"src": "956:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$705",
																	"nativeSrc": "978:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:10"
																},
																"nativeSrc": "978:52:10",
																"nodeType": "YulFunctionCall",
																"src": "978:52:10"
															},
															"nativeSrc": "978:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$705_fromMemory",
												"nativeSrc": "855:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:10",
														"nodeType": "YulTypedName",
														"src": "923:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:10",
														"nodeType": "YulTypedName",
														"src": "931:5:10",
														"type": ""
													}
												],
												"src": "855:181:10"
											},
											{
												"body": {
													"nativeSrc": "1085:79:10",
													"nodeType": "YulBlock",
													"src": "1085:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1142:16:10",
																"nodeType": "YulBlock",
																"src": "1142:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1151:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1154:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1144:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:10"
																			},
																			"nativeSrc": "1144:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1144:12:10"
																		},
																		"nativeSrc": "1144:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1144:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1108:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1108:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1133:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1133:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1115:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1115:17:10"
																				},
																				"nativeSrc": "1115:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1105:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:2:10"
																		},
																		"nativeSrc": "1105:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1105:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1098:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:10"
																},
																"nativeSrc": "1098:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1098:43:10"
															},
															"nativeSrc": "1095:63:10",
															"nodeType": "YulIf",
															"src": "1095:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1042:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:10",
														"nodeType": "YulTypedName",
														"src": "1078:5:10",
														"type": ""
													}
												],
												"src": "1042:122:10"
											},
											{
												"body": {
													"nativeSrc": "1233:80:10",
													"nodeType": "YulBlock",
													"src": "1233:80:10",
													"statements": [
														{
															"nativeSrc": "1243:22:10",
															"nodeType": "YulAssignment",
															"src": "1243:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1258:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1252:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1252:5:10"
																},
																"nativeSrc": "1252:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1252:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1243:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1243:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1301:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1301:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1274:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1274:26:10"
																},
																"nativeSrc": "1274:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1274:33:10"
															},
															"nativeSrc": "1274:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1274:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1170:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1211:6:10",
														"nodeType": "YulTypedName",
														"src": "1211:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1219:3:10",
														"nodeType": "YulTypedName",
														"src": "1219:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1227:5:10",
														"nodeType": "YulTypedName",
														"src": "1227:5:10",
														"type": ""
													}
												],
												"src": "1170:143:10"
											},
											{
												"body": {
													"nativeSrc": "1432:432:10",
													"nodeType": "YulBlock",
													"src": "1432:432:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1478:83:10",
																"nodeType": "YulBlock",
																"src": "1478:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1480:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1480:77:10"
																			},
																			"nativeSrc": "1480:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1480:79:10"
																		},
																		"nativeSrc": "1480:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1480:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1453:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1453:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1462:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1449:3:10"
																		},
																		"nativeSrc": "1449:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1449:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1474:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1474:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1445:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1445:3:10"
																},
																"nativeSrc": "1445:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1445:32:10"
															},
															"nativeSrc": "1442:119:10",
															"nodeType": "YulIf",
															"src": "1442:119:10"
														},
														{
															"nativeSrc": "1571:147:10",
															"nodeType": "YulBlock",
															"src": "1571:147:10",
															"statements": [
																{
																	"nativeSrc": "1586:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1586:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1600:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1590:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1590:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1615:93:10",
																	"nodeType": "YulAssignment",
																	"src": "1615:93:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1680:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1680:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1691:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1691:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1676:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1676:3:10"
																				},
																				"nativeSrc": "1676:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1676:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1700:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1700:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$705_fromMemory",
																			"nativeSrc": "1625:50:10",
																			"nodeType": "YulIdentifier",
																			"src": "1625:50:10"
																		},
																		"nativeSrc": "1625:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1625:83:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1615:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1615:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1728:129:10",
															"nodeType": "YulBlock",
															"src": "1728:129:10",
															"statements": [
																{
																	"nativeSrc": "1743:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1743:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1757:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1757:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1747:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1747:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1773:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1773:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1819:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1819:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1830:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1830:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1815:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1815:3:10"
																				},
																				"nativeSrc": "1815:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1815:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1839:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1783:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1783:31:10"
																		},
																		"nativeSrc": "1783:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1783:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1773:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1773:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$705t_address_fromMemory",
												"nativeSrc": "1319:545:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1394:9:10",
														"nodeType": "YulTypedName",
														"src": "1394:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1405:7:10",
														"nodeType": "YulTypedName",
														"src": "1405:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1417:6:10",
														"nodeType": "YulTypedName",
														"src": "1417:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1425:6:10",
														"nodeType": "YulTypedName",
														"src": "1425:6:10",
														"type": ""
													}
												],
												"src": "1319:545:10"
											},
											{
												"body": {
													"nativeSrc": "1966:73:10",
													"nodeType": "YulBlock",
													"src": "1966:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1983:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1988:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1988:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1976:6:10"
																},
																"nativeSrc": "1976:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1976:19:10"
															},
															"nativeSrc": "1976:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1976:19:10"
														},
														{
															"nativeSrc": "2004:29:10",
															"nodeType": "YulAssignment",
															"src": "2004:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2023:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2028:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2028:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2019:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:10"
																},
																"nativeSrc": "2019:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2019:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2004:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2004:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1870:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1938:3:10",
														"nodeType": "YulTypedName",
														"src": "1938:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1943:6:10",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1954:11:10",
														"nodeType": "YulTypedName",
														"src": "1954:11:10",
														"type": ""
													}
												],
												"src": "1870:169:10"
											},
											{
												"body": {
													"nativeSrc": "2151:71:10",
													"nodeType": "YulBlock",
													"src": "2151:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2173:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2173:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2181:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2181:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2169:3:10"
																		},
																		"nativeSrc": "2169:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2169:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207377617020726f757465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "2185:29:10",
																		"nodeType": "YulLiteral",
																		"src": "2185:29:10",
																		"type": "",
																		"value": "Invalid swap router address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2162:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:10"
																},
																"nativeSrc": "2162:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2162:53:10"
															},
															"nativeSrc": "2162:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "2162:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
												"nativeSrc": "2045:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2143:6:10",
														"nodeType": "YulTypedName",
														"src": "2143:6:10",
														"type": ""
													}
												],
												"src": "2045:177:10"
											},
											{
												"body": {
													"nativeSrc": "2374:220:10",
													"nodeType": "YulBlock",
													"src": "2374:220:10",
													"statements": [
														{
															"nativeSrc": "2384:74:10",
															"nodeType": "YulAssignment",
															"src": "2384:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2450:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2455:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2391:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2391:58:10"
																},
																"nativeSrc": "2391:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2391:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2384:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2556:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2556:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
																	"nativeSrc": "2467:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:88:10"
																},
																"nativeSrc": "2467:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:93:10"
															},
															"nativeSrc": "2467:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2467:93:10"
														},
														{
															"nativeSrc": "2569:19:10",
															"nodeType": "YulAssignment",
															"src": "2569:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2580:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:10"
																},
																"nativeSrc": "2576:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2576:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2228:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2362:3:10",
														"nodeType": "YulTypedName",
														"src": "2362:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2370:3:10",
														"nodeType": "YulTypedName",
														"src": "2370:3:10",
														"type": ""
													}
												],
												"src": "2228:366:10"
											},
											{
												"body": {
													"nativeSrc": "2771:248:10",
													"nodeType": "YulBlock",
													"src": "2771:248:10",
													"statements": [
														{
															"nativeSrc": "2781:26:10",
															"nodeType": "YulAssignment",
															"src": "2781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2789:3:10"
																},
																"nativeSrc": "2789:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2828:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2828:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2839:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2839:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:10"
																		},
																		"nativeSrc": "2824:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2824:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2847:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2847:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2843:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:10"
																		},
																		"nativeSrc": "2843:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2843:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2817:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:10"
																},
																"nativeSrc": "2817:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2817:47:10"
															},
															"nativeSrc": "2817:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2817:47:10"
														},
														{
															"nativeSrc": "2873:139:10",
															"nodeType": "YulAssignment",
															"src": "2873:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3007:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3007:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2881:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2881:124:10"
																},
																"nativeSrc": "2881:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2881:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2873:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2873:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2600:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2751:9:10",
														"nodeType": "YulTypedName",
														"src": "2751:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2766:4:10",
														"nodeType": "YulTypedName",
														"src": "2766:4:10",
														"type": ""
													}
												],
												"src": "2600:419:10"
											},
											{
												"body": {
													"nativeSrc": "3131:64:10",
													"nodeType": "YulBlock",
													"src": "3131:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3153:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3153:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3161:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3149:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:10"
																		},
																		"nativeSrc": "3149:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420555344432061646472657373",
																		"kind": "string",
																		"nativeSrc": "3165:22:10",
																		"nodeType": "YulLiteral",
																		"src": "3165:22:10",
																		"type": "",
																		"value": "Invalid USDC address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:10"
																},
																"nativeSrc": "3142:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3142:46:10"
															},
															"nativeSrc": "3142:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3142:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe",
												"nativeSrc": "3025:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3123:6:10",
														"nodeType": "YulTypedName",
														"src": "3123:6:10",
														"type": ""
													}
												],
												"src": "3025:170:10"
											},
											{
												"body": {
													"nativeSrc": "3347:220:10",
													"nodeType": "YulBlock",
													"src": "3347:220:10",
													"statements": [
														{
															"nativeSrc": "3357:74:10",
															"nodeType": "YulAssignment",
															"src": "3357:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3423:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3423:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3428:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3364:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3364:58:10"
																},
																"nativeSrc": "3364:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3364:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3357:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3529:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3529:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe",
																	"nativeSrc": "3440:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3440:88:10"
																},
																"nativeSrc": "3440:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3440:93:10"
															},
															"nativeSrc": "3440:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3440:93:10"
														},
														{
															"nativeSrc": "3542:19:10",
															"nodeType": "YulAssignment",
															"src": "3542:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3553:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3553:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3558:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3558:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3549:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:10"
																},
																"nativeSrc": "3549:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3549:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3201:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3335:3:10",
														"nodeType": "YulTypedName",
														"src": "3335:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3343:3:10",
														"nodeType": "YulTypedName",
														"src": "3343:3:10",
														"type": ""
													}
												],
												"src": "3201:366:10"
											},
											{
												"body": {
													"nativeSrc": "3744:248:10",
													"nodeType": "YulBlock",
													"src": "3744:248:10",
													"statements": [
														{
															"nativeSrc": "3754:26:10",
															"nodeType": "YulAssignment",
															"src": "3754:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3766:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3766:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3777:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3762:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3762:3:10"
																},
																"nativeSrc": "3762:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3762:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3754:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3754:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3801:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3801:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3812:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3812:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3797:3:10"
																		},
																		"nativeSrc": "3797:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3797:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3820:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3820:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3826:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3816:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:10"
																		},
																		"nativeSrc": "3816:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:10"
																},
																"nativeSrc": "3790:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3790:47:10"
															},
															"nativeSrc": "3790:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3790:47:10"
														},
														{
															"nativeSrc": "3846:139:10",
															"nodeType": "YulAssignment",
															"src": "3846:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3980:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3980:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3854:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3854:124:10"
																},
																"nativeSrc": "3854:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3854:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3846:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3846:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3573:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3724:9:10",
														"nodeType": "YulTypedName",
														"src": "3724:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3739:4:10",
														"nodeType": "YulTypedName",
														"src": "3739:4:10",
														"type": ""
													}
												],
												"src": "3573:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$705(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$705(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$705(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$705_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$705(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$705t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$705_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid swap router address\")\n\n    }\n\n    function abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid USDC address\")\n\n    }\n\n    function abi_encode_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051611f6e380380611f6e833981810160405281019061003191906103cb565b600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009d90610463565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010b906104cb565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505061019a5f801b336101d360201b60201c565b506101cb7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336101d360201b60201c565b5050506104e9565b5f6101e483836102c860201b60201c565b6102be5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061025b61032b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102c2565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61035f82610336565b9050919050565b5f61037082610355565b9050919050565b61038081610366565b811461038a575f80fd5b50565b5f8151905061039b81610377565b92915050565b6103aa81610355565b81146103b4575f80fd5b50565b5f815190506103c5816103a1565b92915050565b5f80604083850312156103e1576103e0610332565b5b5f6103ee8582860161038d565b92505060206103ff858286016103b7565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c6964207377617020726f75746572206164647265737300000000005f82015250565b5f61044d601b83610409565b915061045882610419565b602082019050919050565b5f6020820190508181035f83015261047a81610441565b9050919050565b7f496e76616c6964205553444320616464726573730000000000000000000000005f82015250565b5f6104b5601483610409565b91506104c082610481565b602082019050919050565b5f6020820190508181035f8301526104e2816104a9565b9050919050565b608051611a5f61050f5f395f81816105ff0152818161090e0152610aa60152611a5f5ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806389a30271116100a0578063a217fddf1161006f578063a217fddf146102d9578063b98b677f146102f7578063c31c9c0714610313578063d547741f14610331578063dd1b9c4a1461034d57610109565b806389a302711461023f57806391d148541461025d578063933f4eef1461028d5780639d93d352146102a957610109565b806336568abe116100dc57806336568abe146101b95780636d1ea3fa146101d557806375b238fc1461020557806380b2edd81461022357610109565b806301ffc9a71461010d5780632197545c1461013d578063248a9ca31461016d5780632f2ff15d1461019d575b5f80fd5b61012760048036038101906101229190611149565b61036b565b604051610134919061118e565b60405180910390f35b61015760048036038101906101529190611234565b6103e4565b60405161016491906112a7565b60405180910390f35b610187600480360381019061018291906112f3565b6107e8565b604051610194919061132d565b60405180910390f35b6101b760048036038101906101b29190611346565b610804565b005b6101d360048036038101906101ce9190611346565b610826565b005b6101ef60048036038101906101ea9190611384565b6108a1565b6040516101fc919061118e565b60405180910390f35b61020d6108be565b60405161021a919061132d565b60405180910390f35b61023d60048036038101906102389190611384565b6108e2565b005b610247610aa4565b60405161025491906113be565b60405180910390f35b61027760048036038101906102729190611346565b610ac8565b604051610284919061118e565b60405180910390f35b6102a760048036038101906102a29190611384565b610b2b565b005b6102c360048036038101906102be9190611384565b610c79565b6040516102d0919061118e565b60405180910390f35b6102e1610ccb565b6040516102ee919061132d565b60405180910390f35b610311600480360381019061030c9190611412565b610cd1565b005b61031b610dad565b6040516103289190611498565b60405180910390f35b61034b60048036038101906103469190611346565b610dd2565b005b610355610df4565b60405161036291906114ce565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103dd57506103dc82610dfa565b5b9050919050565b5f6103ed610e63565b8460035f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e90611541565b60405180910390fd5b5f85116104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b0906115cf565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016104f6939291906115ed565b6020604051808303815f875af1158015610512573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610536919061164c565b508573ffffffffffffffffffffffffffffffffffffffff1663095ea7b360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b8152600401610593929190611677565b6020604051808303815f875af11580156105af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d3919061164c565b505f6040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018781526020018681526020015f73ffffffffffffffffffffffffffffffffffffffff16815250905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016106ea919061177a565b6020604051808303815f875af1158015610706573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072a91906117a8565b92508483101561076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061181d565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d6688866040516107ce92919061183b565b60405180910390a350506107e0610ea9565b949350505050565b5f805f8381526020019081526020015f20600101549050919050565b61080d826107e8565b61081681610eb2565b6108208383610ec6565b50505050565b61082e610faf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610892576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61089c8282610fb6565b505050565b6003602052805f5260405f205f915054906101000a900460ff1681565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561090c81610eb2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610991906118ac565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ff90611914565b60405180910390fd5b600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5f5916d70d5479c1795a9d461360dfa5c673bc37904c8ab4fcbdc970b9e90f3d60405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610b5581610eb2565b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd59061197c565b60405180910390fd5b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f45f62f30e7b8439e0da7d8e560fe39d01238091ce9e789e3d12b514edf98acea60405160405180910390a25050565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f801b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610cfb81610eb2565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d60906119e4565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ddb826107e8565b610de481610eb2565b610dee8383610fb6565b50505050565b610bb881565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600260015403610e9f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b610ec381610ebe610faf565b61109f565b50565b5f610ed18383610ac8565b610fa55760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610f42610faf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610fa9565b5f90505b92915050565b5f33905090565b5f610fc18383610ac8565b15611095575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611032610faf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611099565b5f90505b92915050565b6110a98282610ac8565b6110ec5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110e3929190611a02565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611128816110f4565b8114611132575f80fd5b50565b5f813590506111438161111f565b92915050565b5f6020828403121561115e5761115d6110f0565b5b5f61116b84828501611135565b91505092915050565b5f8115159050919050565b61118881611174565b82525050565b5f6020820190506111a15f83018461117f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111d0826111a7565b9050919050565b6111e0816111c6565b81146111ea575f80fd5b50565b5f813590506111fb816111d7565b92915050565b5f819050919050565b61121381611201565b811461121d575f80fd5b50565b5f8135905061122e8161120a565b92915050565b5f805f806080858703121561124c5761124b6110f0565b5b5f611259878288016111ed565b945050602061126a87828801611220565b935050604061127b87828801611220565b925050606061128c87828801611220565b91505092959194509250565b6112a181611201565b82525050565b5f6020820190506112ba5f830184611298565b92915050565b5f819050919050565b6112d2816112c0565b81146112dc575f80fd5b50565b5f813590506112ed816112c9565b92915050565b5f60208284031215611308576113076110f0565b5b5f611315848285016112df565b91505092915050565b611327816112c0565b82525050565b5f6020820190506113405f83018461131e565b92915050565b5f806040838503121561135c5761135b6110f0565b5b5f611369858286016112df565b925050602061137a858286016111ed565b9150509250929050565b5f60208284031215611399576113986110f0565b5b5f6113a6848285016111ed565b91505092915050565b6113b8816111c6565b82525050565b5f6020820190506113d15f8301846113af565b92915050565b5f6113e1826111c6565b9050919050565b6113f1816113d7565b81146113fb575f80fd5b50565b5f8135905061140c816113e8565b92915050565b5f60208284031215611427576114266110f0565b5b5f611434848285016113fe565b91505092915050565b5f819050919050565b5f61146061145b611456846111a7565b61143d565b6111a7565b9050919050565b5f61147182611446565b9050919050565b5f61148282611467565b9050919050565b61149281611478565b82525050565b5f6020820190506114ab5f830184611489565b92915050565b5f62ffffff82169050919050565b6114c8816114b1565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420617070726f76656420666f72207377617070696e67005f82015250565b5f61152b601f836114e7565b9150611536826114f7565b602082019050919050565b5f6020820190508181035f8301526115588161151f565b9050919050565b7f496e70757420616d6f756e74206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f6115b96026836114e7565b91506115c48261155f565b604082019050919050565b5f6020820190508181035f8301526115e6816115ad565b9050919050565b5f6060820190506116005f8301866113af565b61160d60208301856113af565b61161a6040830184611298565b949350505050565b61162b81611174565b8114611635575f80fd5b50565b5f8151905061164681611622565b92915050565b5f60208284031215611661576116606110f0565b5b5f61166e84828501611638565b91505092915050565b5f60408201905061168a5f8301856113af565b6116976020830184611298565b9392505050565b6116a7816111c6565b82525050565b6116b6816114b1565b82525050565b6116c581611201565b82525050565b6116d4816111a7565b82525050565b61010082015f8201516116ef5f85018261169e565b506020820151611702602085018261169e565b50604082015161171560408501826116ad565b506060820151611728606085018261169e565b50608082015161173b60808501826116bc565b5060a082015161174e60a08501826116bc565b5060c082015161176160c08501826116bc565b5060e082015161177460e08501826116cb565b50505050565b5f6101008201905061178e5f8301846116da565b92915050565b5f815190506117a28161120a565b92915050565b5f602082840312156117bd576117bc6110f0565b5b5f6117ca84828501611794565b91505092915050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f611807601a836114e7565b9150611812826117d3565b602082019050919050565b5f6020820190508181035f830152611834816117fb565b9050919050565b5f60408201905061184e5f830185611298565b61185b6020830184611298565b9392505050565b7f5553444320697320616c7265616479207468652074617267657420746f6b656e5f82015250565b5f6118966020836114e7565b91506118a182611862565b602082019050919050565b5f6020820190508181035f8301526118c38161188a565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6118fe6015836114e7565b9150611909826118ca565b602082019050919050565b5f6020820190508181035f83015261192b816118f2565b9050919050565b7f546f6b656e206973206e6f7420617070726f76656400000000000000000000005f82015250565b5f6119666015836114e7565b915061197182611932565b602082019050919050565b5f6020820190508181035f8301526119938161195a565b9050919050565b7f496e76616c6964207377617020726f75746572206164647265737300000000005f82015250565b5f6119ce601b836114e7565b91506119d98261199a565b602082019050919050565b5f6020820190508181035f8301526119fb816119c2565b9050919050565b5f604082019050611a155f8301856113af565b611a22602083018461131e565b939250505056fea2646970667358221220670e813ce75eb630d7eb2b6111b20c6443ffc10e9b1a03956ec997cc31e68c0864736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F6E CODESIZE SUB DUP1 PUSH2 0x1F6E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B SWAP1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x19A PUSH0 DUP1 SHL CALLER PUSH2 0x1D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1CB PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x1D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x4E9 JUMP JUMPDEST PUSH0 PUSH2 0x1E4 DUP4 DUP4 PUSH2 0x2C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2BE JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x25B PUSH2 0x32B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x35F DUP3 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x370 DUP3 PUSH2 0x355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x380 DUP2 PUSH2 0x366 JUMP JUMPDEST DUP2 EQ PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x39B DUP2 PUSH2 0x377 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x355 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C5 DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x332 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3EE DUP6 DUP3 DUP7 ADD PUSH2 0x38D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FF DUP6 DUP3 DUP7 ADD PUSH2 0x3B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207377617020726F7574657220616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x44D PUSH1 0x1B DUP4 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP PUSH2 0x458 DUP3 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x47A DUP2 PUSH2 0x441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420555344432061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B5 PUSH1 0x14 DUP4 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0 DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1A5F PUSH2 0x50F PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x5FF ADD MSTORE DUP2 DUP2 PUSH2 0x90E ADD MSTORE PUSH2 0xAA6 ADD MSTORE PUSH2 0x1A5F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A30271 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xB98B677F EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xDD1B9C4A EQ PUSH2 0x34D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x89A30271 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x933F4EEF EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x9D93D352 EQ PUSH2 0x2A9 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x6D1EA3FA EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x80B2EDD8 EQ PUSH2 0x223 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x2197545C EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x19D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3DD JUMPI POP PUSH2 0x3DC DUP3 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3ED PUSH2 0xE63 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP3 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x706 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST SWAP3 POP DUP5 DUP4 LT ISZERO PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x766 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7CE SWAP3 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x7E0 PUSH2 0xEA9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80D DUP3 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x816 DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x820 DUP4 DUP4 PUSH2 0xEC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x82E PUSH2 0xFAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x89C DUP3 DUP3 PUSH2 0xFB6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x90C DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x991 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5F5916D70D5479C1795A9D461360DFA5C673BC37904C8AB4FCBDC970B9E90F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xB55 DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD5 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45F62F30E7B8439E0DA7D8E560FE39D01238091CE9E789E3D12B514EDF98ACEA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xCFB DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xDDB DUP3 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0xDEE DUP4 DUP4 PUSH2 0xFB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xEC3 DUP2 PUSH2 0xEBE PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xED1 DUP4 DUP4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xFA5 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF42 PUSH2 0xFAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFA9 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFC1 DUP4 DUP4 PUSH2 0xAC8 JUMP JUMPDEST ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1032 PUSH2 0xFAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1099 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A9 DUP3 DUP3 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x10EC JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x10F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1132 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1143 DUP2 PUSH2 0x111F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x116B DUP5 DUP3 DUP6 ADD PUSH2 0x1135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 DUP2 PUSH2 0x1174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D0 DUP3 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E0 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x11EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FB DUP2 PUSH2 0x11D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1213 DUP2 PUSH2 0x1201 JUMP JUMPDEST DUP2 EQ PUSH2 0x121D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x122E DUP2 PUSH2 0x120A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1259 DUP8 DUP3 DUP9 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x126A DUP8 DUP3 DUP9 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x127B DUP8 DUP3 DUP9 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x128C DUP8 DUP3 DUP9 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x12A1 DUP2 PUSH2 0x1201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D2 DUP2 PUSH2 0x12C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x12DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12ED DUP2 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1315 DUP5 DUP3 DUP6 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1327 DUP2 PUSH2 0x12C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1340 PUSH0 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1369 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x137A DUP6 DUP3 DUP7 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1398 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13A6 DUP5 DUP3 DUP6 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B8 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x13AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP3 PUSH2 0x11C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x13D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140C DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1434 DUP5 DUP3 DUP6 ADD PUSH2 0x13FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1460 PUSH2 0x145B PUSH2 0x1456 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x143D JUMP JUMPDEST PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1471 DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1482 DUP3 PUSH2 0x1467 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x1478 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14AB PUSH0 DUP4 ADD DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420617070726F76656420666F72207377617070696E6700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x152B PUSH1 0x1F DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1536 DUP3 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1558 DUP2 PUSH2 0x151F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E70757420616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15B9 PUSH1 0x26 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C4 DUP3 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15E6 DUP2 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1600 PUSH0 DUP4 ADD DUP7 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x160D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x161A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x162B DUP2 PUSH2 0x1174 JUMP JUMPDEST DUP2 EQ PUSH2 0x1635 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1646 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x168A PUSH0 DUP4 ADD DUP6 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1697 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B6 DUP2 PUSH2 0x14B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C5 DUP2 PUSH2 0x1201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16D4 DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16EF PUSH0 DUP6 ADD DUP3 PUSH2 0x169E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1702 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x169E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1715 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x16AD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1728 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x169E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x173B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x16BC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x174E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x16BC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1761 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x16BC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1774 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x16CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x178E PUSH0 DUP4 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17A2 DUP2 PUSH2 0x120A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BD JUMPI PUSH2 0x17BC PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17CA DUP5 DUP3 DUP6 ADD PUSH2 0x1794 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1807 PUSH1 0x1A DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1812 DUP3 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1834 DUP2 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x184E PUSH0 DUP4 ADD DUP6 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x185B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5553444320697320616C7265616479207468652074617267657420746F6B656E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1896 PUSH1 0x20 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A1 DUP3 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C3 DUP2 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18FE PUSH1 0x15 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP3 PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x192B DUP2 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F7420617070726F7665640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1966 PUSH1 0x15 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1971 DUP3 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1993 DUP2 PUSH2 0x195A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207377617020726F7574657220616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19CE PUSH1 0x1B DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D9 DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19FB DUP2 PUSH2 0x19C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A15 PUSH0 DUP4 ADD DUP6 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1A22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xE813CE75EB630D7 0xEB 0x2B PUSH2 0x11B2 0xC PUSH5 0x43FFC10E9B BYTE SUB SWAP6 PUSH15 0xC997CC31E68C0864736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "484:5114:9:-:0;;;1680:359;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:4;2061:7;:21;;;;1782:1:9;1750:34;;1758:11;1750:34;;;1742:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;1834:19;;:5;:19;;;1826:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1902:11;1889:10;;:24;;;;;;;;;;;;;;;;;;1930:5;1923:12;;;;;;;;;;1946:42;2232:4:0;1957:18:9;;1977:10;1946;;;:42;;:::i;:::-;;1998:34;647:23;2021:10;1998;;;:34;;:::i;:::-;;1680:359;;484:5114;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:122::-;1115:24;1133:5;1115:24;:::i;:::-;1108:5;1105:35;1095:63;;1154:1;1151;1144:12;1095:63;1042:122;:::o;1170:143::-;1227:5;1258:6;1252:13;1243:22;;1274:33;1301:5;1274:33;:::i;:::-;1170:143;;;;:::o;1319:545::-;1417:6;1425;1474:2;1462:9;1453:7;1449:23;1445:32;1442:119;;;1480:79;;:::i;:::-;1442:119;1600:1;1625:83;1700:7;1691:6;1680:9;1676:22;1625:83;:::i;:::-;1615:93;;1571:147;1757:2;1783:64;1839:7;1830:6;1819:9;1815:22;1783:64;:::i;:::-;1773:74;;1728:129;1319:545;;;;;:::o;1870:169::-;1954:11;1988:6;1983:3;1976:19;2028:4;2023:3;2019:14;2004:29;;1870:169;;;;:::o;2045:177::-;2185:29;2181:1;2173:6;2169:14;2162:53;2045:177;:::o;2228:366::-;2370:3;2391:67;2455:2;2450:3;2391:67;:::i;:::-;2384:74;;2467:93;2556:3;2467:93;:::i;:::-;2585:2;2580:3;2576:12;2569:19;;2228:366;;;:::o;2600:419::-;2766:4;2804:2;2793:9;2789:18;2781:26;;2853:9;2847:4;2843:20;2839:1;2828:9;2824:17;2817:47;2881:131;3007:4;2881:131;:::i;:::-;2873:139;;2600:419;;;:::o;3025:170::-;3165:22;3161:1;3153:6;3149:14;3142:46;3025:170;:::o;3201:366::-;3343:3;3364:67;3428:2;3423:3;3364:67;:::i;:::-;3357:74;;3440:93;3529:3;3440:93;:::i;:::-;3558:2;3553:3;3549:12;3542:19;;3201:366;;;:::o;3573:419::-;3739:4;3777:2;3766:9;3762:18;3754:26;;3826:9;3820:4;3816:20;3812:1;3801:9;3797:17;3790:47;3854:131;3980:4;3854:131;:::i;:::-;3846:139;;3573:419;;;:::o;484:5114:9:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_721": {
									"entryPoint": 2238,
									"id": 721,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3275,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@POOL_FEE_733": {
									"entryPoint": 3572,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_726": {
									"entryPoint": 2724,
									"id": 726,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4255,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3762,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 3782,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": 4015,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_543": {
									"entryPoint": 3753,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_535": {
									"entryPoint": 3683,
									"id": 535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 4022,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveToken_855": {
									"entryPoint": 2274,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approvedTokens_730": {
									"entryPoint": 2209,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2024,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2052,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2760,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isTokenApproved_1016": {
									"entryPoint": 3193,
									"id": 1016,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 2086,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 3538,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeToken_882": {
									"entryPoint": 2859,
									"id": 882,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_578": {
									"entryPoint": 3578,
									"id": 578,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 875,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapRouter_724": {
									"entryPoint": 3501,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapToUSDC_1001": {
									"entryPoint": 996,
									"id": 1001,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@updateSwapRouter_910": {
									"entryPoint": 3281,
									"id": 910,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$705": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$705": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$705_to_t_address_fromStack": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$629_memory_ptr_to_t_struct$_ExactInputSingleParams_$629_memory_ptr_fromStack": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$705__to_t_address__fromStack_reversed": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$629_memory_ptr__to_t_struct$_ExactInputSingleParams_$629_memory_ptr__fromStack_reversed": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$705": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 5297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$705_to_t_address": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22": {
									"entryPoint": 6450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469": {
									"entryPoint": 6554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$705": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20158:10",
										"nodeType": "YulBlock",
										"src": "0:20158:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "378:105:10",
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nativeSrc": "388:89:10",
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:10",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nativeSrc": "399:78:10",
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:10",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:10",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nativeSrc": "531:78:10",
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:10",
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:10",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nativeSrc": "589:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nativeSrc": "589:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nativeSrc": "561:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nativeSrc": "551:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nativeSrc": "544:42:10",
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nativeSrc": "541:62:10",
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:10",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nativeSrc": "666:86:10",
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nativeSrc": "676:29:10",
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nativeSrc": "685:20:10",
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nativeSrc": "714:32:10",
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nativeSrc": "714:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:10",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:10",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:10",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nativeSrc": "823:262:10",
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:10",
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nativeSrc": "871:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nativeSrc": "871:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nativeSrc": "840:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nativeSrc": "836:32:10",
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nativeSrc": "833:119:10",
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nativeSrc": "962:116:10",
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nativeSrc": "977:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:10",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:10",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:10",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nativeSrc": "1036:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nativeSrc": "1016:52:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:10",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:10",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:10",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nativeSrc": "1133:48:10",
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nativeSrc": "1143:32:10",
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nativeSrc": "1161:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nativeSrc": "1154:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:10",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:10",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nativeSrc": "1246:50:10",
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nativeSrc": "1268:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nativeSrc": "1256:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nativeSrc": "1256:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:10",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:10",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nativeSrc": "1394:118:10",
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nativeSrc": "1404:26:10",
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nativeSrc": "1412:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nativeSrc": "1487:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nativeSrc": "1440:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nativeSrc": "1440:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:10",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:10",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nativeSrc": "1563:81:10",
													"nodeType": "YulBlock",
													"src": "1563:81:10",
													"statements": [
														{
															"nativeSrc": "1573:65:10",
															"nodeType": "YulAssignment",
															"src": "1573:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:10"
																},
																"nativeSrc": "1584:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:10",
														"nodeType": "YulTypedName",
														"src": "1545:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:10",
														"nodeType": "YulTypedName",
														"src": "1555:7:10",
														"type": ""
													}
												],
												"src": "1518:126:10"
											},
											{
												"body": {
													"nativeSrc": "1695:51:10",
													"nodeType": "YulBlock",
													"src": "1695:51:10",
													"statements": [
														{
															"nativeSrc": "1705:35:10",
															"nodeType": "YulAssignment",
															"src": "1705:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:10"
																},
																"nativeSrc": "1716:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:10",
														"nodeType": "YulTypedName",
														"src": "1677:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:10",
														"nodeType": "YulTypedName",
														"src": "1687:7:10",
														"type": ""
													}
												],
												"src": "1650:96:10"
											},
											{
												"body": {
													"nativeSrc": "1795:79:10",
													"nodeType": "YulBlock",
													"src": "1795:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:10",
																"nodeType": "YulBlock",
																"src": "1852:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:10"
																			},
																			"nativeSrc": "1854:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:10"
																		},
																		"nativeSrc": "1854:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:10"
																				},
																				"nativeSrc": "1825:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:10"
																		},
																		"nativeSrc": "1815:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:10"
																},
																"nativeSrc": "1808:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:10"
															},
															"nativeSrc": "1805:63:10",
															"nodeType": "YulIf",
															"src": "1805:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:10",
														"nodeType": "YulTypedName",
														"src": "1788:5:10",
														"type": ""
													}
												],
												"src": "1752:122:10"
											},
											{
												"body": {
													"nativeSrc": "1932:87:10",
													"nodeType": "YulBlock",
													"src": "1932:87:10",
													"statements": [
														{
															"nativeSrc": "1942:29:10",
															"nodeType": "YulAssignment",
															"src": "1942:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:10"
																},
																"nativeSrc": "1951:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:10"
																},
																"nativeSrc": "1980:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:10"
															},
															"nativeSrc": "1980:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:10",
														"nodeType": "YulTypedName",
														"src": "1910:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:10",
														"nodeType": "YulTypedName",
														"src": "1918:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:10",
														"nodeType": "YulTypedName",
														"src": "1926:5:10",
														"type": ""
													}
												],
												"src": "1880:139:10"
											},
											{
												"body": {
													"nativeSrc": "2070:32:10",
													"nodeType": "YulBlock",
													"src": "2070:32:10",
													"statements": [
														{
															"nativeSrc": "2080:16:10",
															"nodeType": "YulAssignment",
															"src": "2080:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2091:5:10",
																"nodeType": "YulIdentifier",
																"src": "2091:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2080:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2025:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2052:5:10",
														"nodeType": "YulTypedName",
														"src": "2052:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2062:7:10",
														"nodeType": "YulTypedName",
														"src": "2062:7:10",
														"type": ""
													}
												],
												"src": "2025:77:10"
											},
											{
												"body": {
													"nativeSrc": "2151:79:10",
													"nodeType": "YulBlock",
													"src": "2151:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:10",
																"nodeType": "YulBlock",
																"src": "2208:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:10"
																			},
																			"nativeSrc": "2210:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:10"
																		},
																		"nativeSrc": "2210:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2181:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:10"
																				},
																				"nativeSrc": "2181:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:10"
																		},
																		"nativeSrc": "2171:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:10"
																},
																"nativeSrc": "2164:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:10"
															},
															"nativeSrc": "2161:63:10",
															"nodeType": "YulIf",
															"src": "2161:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2108:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:10",
														"nodeType": "YulTypedName",
														"src": "2144:5:10",
														"type": ""
													}
												],
												"src": "2108:122:10"
											},
											{
												"body": {
													"nativeSrc": "2288:87:10",
													"nodeType": "YulBlock",
													"src": "2288:87:10",
													"statements": [
														{
															"nativeSrc": "2298:29:10",
															"nodeType": "YulAssignment",
															"src": "2298:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:10"
																},
																"nativeSrc": "2307:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2336:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:10"
																},
																"nativeSrc": "2336:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:10"
															},
															"nativeSrc": "2336:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2236:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:10",
														"nodeType": "YulTypedName",
														"src": "2266:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:10",
														"nodeType": "YulTypedName",
														"src": "2274:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:10",
														"nodeType": "YulTypedName",
														"src": "2282:5:10",
														"type": ""
													}
												],
												"src": "2236:139:10"
											},
											{
												"body": {
													"nativeSrc": "2498:648:10",
													"nodeType": "YulBlock",
													"src": "2498:648:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2545:83:10",
																"nodeType": "YulBlock",
																"src": "2545:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2547:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2547:77:10"
																			},
																			"nativeSrc": "2547:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2547:79:10"
																		},
																		"nativeSrc": "2547:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2519:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2519:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2528:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2528:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2515:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2515:3:10"
																		},
																		"nativeSrc": "2515:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2515:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2540:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2540:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:10"
																},
																"nativeSrc": "2511:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2511:33:10"
															},
															"nativeSrc": "2508:120:10",
															"nodeType": "YulIf",
															"src": "2508:120:10"
														},
														{
															"nativeSrc": "2638:117:10",
															"nodeType": "YulBlock",
															"src": "2638:117:10",
															"statements": [
																{
																	"nativeSrc": "2653:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2653:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2667:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2667:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2657:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2657:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2682:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2682:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2717:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2717:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2728:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2728:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2713:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2713:3:10"
																				},
																				"nativeSrc": "2713:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2713:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2737:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2737:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2692:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2692:20:10"
																		},
																		"nativeSrc": "2692:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2682:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2682:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2765:118:10",
															"nodeType": "YulBlock",
															"src": "2765:118:10",
															"statements": [
																{
																	"nativeSrc": "2780:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2780:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2784:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2784:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2810:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2810:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2845:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2845:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2856:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2856:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2841:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2841:3:10"
																				},
																				"nativeSrc": "2841:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2841:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2865:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2865:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2820:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2820:20:10"
																		},
																		"nativeSrc": "2820:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2820:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2810:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2810:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2893:118:10",
															"nodeType": "YulBlock",
															"src": "2893:118:10",
															"statements": [
																{
																	"nativeSrc": "2908:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2908:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2922:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2912:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2912:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2938:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2938:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2973:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2973:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2984:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2984:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2969:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2969:3:10"
																				},
																				"nativeSrc": "2969:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2969:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2993:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2993:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2948:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2948:20:10"
																		},
																		"nativeSrc": "2948:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2938:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2938:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3021:118:10",
															"nodeType": "YulBlock",
															"src": "3021:118:10",
															"statements": [
																{
																	"nativeSrc": "3036:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3036:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3050:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3040:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3040:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3066:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3066:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3101:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3101:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3112:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3112:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3097:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3097:3:10"
																				},
																				"nativeSrc": "3097:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3097:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3121:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3121:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3076:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3076:20:10"
																		},
																		"nativeSrc": "3076:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3066:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3066:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
												"nativeSrc": "2381:765:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2444:9:10",
														"nodeType": "YulTypedName",
														"src": "2444:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2455:7:10",
														"nodeType": "YulTypedName",
														"src": "2455:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2467:6:10",
														"nodeType": "YulTypedName",
														"src": "2467:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2475:6:10",
														"nodeType": "YulTypedName",
														"src": "2475:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2483:6:10",
														"nodeType": "YulTypedName",
														"src": "2483:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2491:6:10",
														"nodeType": "YulTypedName",
														"src": "2491:6:10",
														"type": ""
													}
												],
												"src": "2381:765:10"
											},
											{
												"body": {
													"nativeSrc": "3217:53:10",
													"nodeType": "YulBlock",
													"src": "3217:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3234:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3257:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3257:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3239:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3239:17:10"
																		},
																		"nativeSrc": "3239:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3227:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:10"
																},
																"nativeSrc": "3227:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3227:37:10"
															},
															"nativeSrc": "3227:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3227:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3152:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3205:5:10",
														"nodeType": "YulTypedName",
														"src": "3205:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3212:3:10",
														"nodeType": "YulTypedName",
														"src": "3212:3:10",
														"type": ""
													}
												],
												"src": "3152:118:10"
											},
											{
												"body": {
													"nativeSrc": "3374:124:10",
													"nodeType": "YulBlock",
													"src": "3374:124:10",
													"statements": [
														{
															"nativeSrc": "3384:26:10",
															"nodeType": "YulAssignment",
															"src": "3384:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3396:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3396:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3407:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3407:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3392:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3392:3:10"
																},
																"nativeSrc": "3392:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3392:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3384:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3384:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3464:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3464:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3477:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3488:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3488:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:10"
																		},
																		"nativeSrc": "3473:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3473:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3420:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3420:43:10"
																},
																"nativeSrc": "3420:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3420:71:10"
															},
															"nativeSrc": "3420:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3420:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3276:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3346:9:10",
														"nodeType": "YulTypedName",
														"src": "3346:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3358:6:10",
														"nodeType": "YulTypedName",
														"src": "3358:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3369:4:10",
														"nodeType": "YulTypedName",
														"src": "3369:4:10",
														"type": ""
													}
												],
												"src": "3276:222:10"
											},
											{
												"body": {
													"nativeSrc": "3549:32:10",
													"nodeType": "YulBlock",
													"src": "3549:32:10",
													"statements": [
														{
															"nativeSrc": "3559:16:10",
															"nodeType": "YulAssignment",
															"src": "3559:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3570:5:10",
																"nodeType": "YulIdentifier",
																"src": "3570:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3559:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3559:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3504:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3531:5:10",
														"nodeType": "YulTypedName",
														"src": "3531:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3541:7:10",
														"nodeType": "YulTypedName",
														"src": "3541:7:10",
														"type": ""
													}
												],
												"src": "3504:77:10"
											},
											{
												"body": {
													"nativeSrc": "3630:79:10",
													"nodeType": "YulBlock",
													"src": "3630:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3687:16:10",
																"nodeType": "YulBlock",
																"src": "3687:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3696:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3696:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3699:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3699:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3689:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3689:6:10"
																			},
																			"nativeSrc": "3689:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3689:12:10"
																		},
																		"nativeSrc": "3689:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3689:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3653:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3653:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3678:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3678:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "3660:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3660:17:10"
																				},
																				"nativeSrc": "3660:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3660:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3650:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3650:2:10"
																		},
																		"nativeSrc": "3650:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3650:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:10"
																},
																"nativeSrc": "3643:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3643:43:10"
															},
															"nativeSrc": "3640:63:10",
															"nodeType": "YulIf",
															"src": "3640:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "3587:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:10",
														"nodeType": "YulTypedName",
														"src": "3623:5:10",
														"type": ""
													}
												],
												"src": "3587:122:10"
											},
											{
												"body": {
													"nativeSrc": "3767:87:10",
													"nodeType": "YulBlock",
													"src": "3767:87:10",
													"statements": [
														{
															"nativeSrc": "3777:29:10",
															"nodeType": "YulAssignment",
															"src": "3777:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3799:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3799:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3786:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3786:12:10"
																},
																"nativeSrc": "3786:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3786:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3777:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3777:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3842:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3842:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3815:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3815:26:10"
																},
																"nativeSrc": "3815:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3815:33:10"
															},
															"nativeSrc": "3815:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3815:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3715:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3745:6:10",
														"nodeType": "YulTypedName",
														"src": "3745:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3753:3:10",
														"nodeType": "YulTypedName",
														"src": "3753:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3761:5:10",
														"nodeType": "YulTypedName",
														"src": "3761:5:10",
														"type": ""
													}
												],
												"src": "3715:139:10"
											},
											{
												"body": {
													"nativeSrc": "3926:263:10",
													"nodeType": "YulBlock",
													"src": "3926:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3972:83:10",
																"nodeType": "YulBlock",
																"src": "3972:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3974:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3974:77:10"
																			},
																			"nativeSrc": "3974:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3974:79:10"
																		},
																		"nativeSrc": "3974:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3974:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3947:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3947:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3956:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3943:3:10"
																		},
																		"nativeSrc": "3943:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3943:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3968:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3968:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3939:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3939:3:10"
																},
																"nativeSrc": "3939:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3939:32:10"
															},
															"nativeSrc": "3936:119:10",
															"nodeType": "YulIf",
															"src": "3936:119:10"
														},
														{
															"nativeSrc": "4065:117:10",
															"nodeType": "YulBlock",
															"src": "4065:117:10",
															"statements": [
																{
																	"nativeSrc": "4080:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4080:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4094:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4094:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4084:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4084:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4109:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4109:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4144:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4144:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4155:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4155:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4140:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4140:3:10"
																				},
																				"nativeSrc": "4140:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4140:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4119:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4119:20:10"
																		},
																		"nativeSrc": "4119:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4109:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4109:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3860:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3896:9:10",
														"nodeType": "YulTypedName",
														"src": "3896:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3907:7:10",
														"nodeType": "YulTypedName",
														"src": "3907:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3919:6:10",
														"nodeType": "YulTypedName",
														"src": "3919:6:10",
														"type": ""
													}
												],
												"src": "3860:329:10"
											},
											{
												"body": {
													"nativeSrc": "4260:53:10",
													"nodeType": "YulBlock",
													"src": "4260:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4277:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4300:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4300:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4282:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4282:17:10"
																		},
																		"nativeSrc": "4282:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4282:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:10"
																},
																"nativeSrc": "4270:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4270:37:10"
															},
															"nativeSrc": "4270:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4270:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4195:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4248:5:10",
														"nodeType": "YulTypedName",
														"src": "4248:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4255:3:10",
														"nodeType": "YulTypedName",
														"src": "4255:3:10",
														"type": ""
													}
												],
												"src": "4195:118:10"
											},
											{
												"body": {
													"nativeSrc": "4417:124:10",
													"nodeType": "YulBlock",
													"src": "4417:124:10",
													"statements": [
														{
															"nativeSrc": "4427:26:10",
															"nodeType": "YulAssignment",
															"src": "4427:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4439:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4439:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4450:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4450:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:10"
																},
																"nativeSrc": "4435:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4435:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4427:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4427:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4507:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4507:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4520:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4520:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4531:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4531:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4516:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4516:3:10"
																		},
																		"nativeSrc": "4516:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4516:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4463:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4463:43:10"
																},
																"nativeSrc": "4463:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4463:71:10"
															},
															"nativeSrc": "4463:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4463:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4319:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4389:9:10",
														"nodeType": "YulTypedName",
														"src": "4389:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4401:6:10",
														"nodeType": "YulTypedName",
														"src": "4401:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4412:4:10",
														"nodeType": "YulTypedName",
														"src": "4412:4:10",
														"type": ""
													}
												],
												"src": "4319:222:10"
											},
											{
												"body": {
													"nativeSrc": "4630:391:10",
													"nodeType": "YulBlock",
													"src": "4630:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4676:83:10",
																"nodeType": "YulBlock",
																"src": "4676:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4678:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4678:77:10"
																			},
																			"nativeSrc": "4678:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4678:79:10"
																		},
																		"nativeSrc": "4678:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4678:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4651:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4651:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4660:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4660:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4647:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4647:3:10"
																		},
																		"nativeSrc": "4647:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4647:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4643:3:10"
																},
																"nativeSrc": "4643:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4643:32:10"
															},
															"nativeSrc": "4640:119:10",
															"nodeType": "YulIf",
															"src": "4640:119:10"
														},
														{
															"nativeSrc": "4769:117:10",
															"nodeType": "YulBlock",
															"src": "4769:117:10",
															"statements": [
																{
																	"nativeSrc": "4784:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4784:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4798:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4798:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4788:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4788:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4813:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4813:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4848:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4848:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4859:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4859:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4844:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4844:3:10"
																				},
																				"nativeSrc": "4844:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4844:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4868:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4868:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4823:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4823:20:10"
																		},
																		"nativeSrc": "4823:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4823:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4813:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4813:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4896:118:10",
															"nodeType": "YulBlock",
															"src": "4896:118:10",
															"statements": [
																{
																	"nativeSrc": "4911:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4911:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4925:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4915:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4915:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4941:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4941:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4976:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4976:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4987:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4987:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4972:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4972:3:10"
																				},
																				"nativeSrc": "4972:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4972:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4996:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4996:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4951:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4951:20:10"
																		},
																		"nativeSrc": "4951:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4951:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4941:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4941:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4547:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:10",
														"nodeType": "YulTypedName",
														"src": "4592:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4603:7:10",
														"nodeType": "YulTypedName",
														"src": "4603:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4615:6:10",
														"nodeType": "YulTypedName",
														"src": "4615:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4623:6:10",
														"nodeType": "YulTypedName",
														"src": "4623:6:10",
														"type": ""
													}
												],
												"src": "4547:474:10"
											},
											{
												"body": {
													"nativeSrc": "5093:263:10",
													"nodeType": "YulBlock",
													"src": "5093:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5139:83:10",
																"nodeType": "YulBlock",
																"src": "5139:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5141:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5141:77:10"
																			},
																			"nativeSrc": "5141:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5141:79:10"
																		},
																		"nativeSrc": "5141:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5141:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5114:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5114:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5110:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5110:3:10"
																		},
																		"nativeSrc": "5110:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5110:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5135:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5106:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5106:3:10"
																},
																"nativeSrc": "5106:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5106:32:10"
															},
															"nativeSrc": "5103:119:10",
															"nodeType": "YulIf",
															"src": "5103:119:10"
														},
														{
															"nativeSrc": "5232:117:10",
															"nodeType": "YulBlock",
															"src": "5232:117:10",
															"statements": [
																{
																	"nativeSrc": "5247:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5247:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5261:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5261:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5251:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5251:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5276:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5276:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5311:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5311:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5322:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5322:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5307:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5307:3:10"
																				},
																				"nativeSrc": "5307:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5307:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5331:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5331:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5286:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5286:20:10"
																		},
																		"nativeSrc": "5286:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5286:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5276:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5276:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5027:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5063:9:10",
														"nodeType": "YulTypedName",
														"src": "5063:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5074:7:10",
														"nodeType": "YulTypedName",
														"src": "5074:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5086:6:10",
														"nodeType": "YulTypedName",
														"src": "5086:6:10",
														"type": ""
													}
												],
												"src": "5027:329:10"
											},
											{
												"body": {
													"nativeSrc": "5427:53:10",
													"nodeType": "YulBlock",
													"src": "5427:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5444:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5444:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5467:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5467:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5449:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5449:17:10"
																		},
																		"nativeSrc": "5449:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5437:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5437:6:10"
																},
																"nativeSrc": "5437:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5437:37:10"
															},
															"nativeSrc": "5437:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5437:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5362:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5415:5:10",
														"nodeType": "YulTypedName",
														"src": "5415:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5422:3:10",
														"nodeType": "YulTypedName",
														"src": "5422:3:10",
														"type": ""
													}
												],
												"src": "5362:118:10"
											},
											{
												"body": {
													"nativeSrc": "5584:124:10",
													"nodeType": "YulBlock",
													"src": "5584:124:10",
													"statements": [
														{
															"nativeSrc": "5594:26:10",
															"nodeType": "YulAssignment",
															"src": "5594:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5606:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5606:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:10"
																},
																"nativeSrc": "5602:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5602:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5594:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5594:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5674:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5674:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5687:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5687:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5698:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5698:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5683:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5683:3:10"
																		},
																		"nativeSrc": "5683:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5683:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5630:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5630:43:10"
																},
																"nativeSrc": "5630:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5630:71:10"
															},
															"nativeSrc": "5630:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5630:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5486:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5556:9:10",
														"nodeType": "YulTypedName",
														"src": "5556:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5568:6:10",
														"nodeType": "YulTypedName",
														"src": "5568:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5579:4:10",
														"nodeType": "YulTypedName",
														"src": "5579:4:10",
														"type": ""
													}
												],
												"src": "5486:222:10"
											},
											{
												"body": {
													"nativeSrc": "5778:51:10",
													"nodeType": "YulBlock",
													"src": "5778:51:10",
													"statements": [
														{
															"nativeSrc": "5788:35:10",
															"nodeType": "YulAssignment",
															"src": "5788:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5817:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5817:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "5799:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5799:17:10"
																},
																"nativeSrc": "5799:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5799:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5788:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5788:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$705",
												"nativeSrc": "5714:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5760:5:10",
														"nodeType": "YulTypedName",
														"src": "5760:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5770:7:10",
														"nodeType": "YulTypedName",
														"src": "5770:7:10",
														"type": ""
													}
												],
												"src": "5714:115:10"
											},
											{
												"body": {
													"nativeSrc": "5897:98:10",
													"nodeType": "YulBlock",
													"src": "5897:98:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5973:16:10",
																"nodeType": "YulBlock",
																"src": "5973:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5982:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5982:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5985:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5985:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5975:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5975:6:10"
																			},
																			"nativeSrc": "5975:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5975:12:10"
																		},
																		"nativeSrc": "5975:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5975:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5920:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5920:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5964:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5964:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$705",
																					"nativeSrc": "5927:36:10",
																					"nodeType": "YulIdentifier",
																					"src": "5927:36:10"
																				},
																				"nativeSrc": "5927:43:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5927:43:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5917:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5917:2:10"
																		},
																		"nativeSrc": "5917:54:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5917:54:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5910:6:10"
																},
																"nativeSrc": "5910:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5910:62:10"
															},
															"nativeSrc": "5907:82:10",
															"nodeType": "YulIf",
															"src": "5907:82:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$705",
												"nativeSrc": "5835:160:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5890:5:10",
														"nodeType": "YulTypedName",
														"src": "5890:5:10",
														"type": ""
													}
												],
												"src": "5835:160:10"
											},
											{
												"body": {
													"nativeSrc": "6072:106:10",
													"nodeType": "YulBlock",
													"src": "6072:106:10",
													"statements": [
														{
															"nativeSrc": "6082:29:10",
															"nodeType": "YulAssignment",
															"src": "6082:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6104:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6104:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6091:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6091:12:10"
																},
																"nativeSrc": "6091:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6091:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6082:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6082:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6166:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6166:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$705",
																	"nativeSrc": "6120:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "6120:45:10"
																},
																"nativeSrc": "6120:52:10",
																"nodeType": "YulFunctionCall",
																"src": "6120:52:10"
															},
															"nativeSrc": "6120:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "6120:52:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$705",
												"nativeSrc": "6001:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6050:6:10",
														"nodeType": "YulTypedName",
														"src": "6050:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6058:3:10",
														"nodeType": "YulTypedName",
														"src": "6058:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6066:5:10",
														"nodeType": "YulTypedName",
														"src": "6066:5:10",
														"type": ""
													}
												],
												"src": "6001:177:10"
											},
											{
												"body": {
													"nativeSrc": "6269:282:10",
													"nodeType": "YulBlock",
													"src": "6269:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6315:83:10",
																"nodeType": "YulBlock",
																"src": "6315:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6317:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6317:77:10"
																			},
																			"nativeSrc": "6317:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6317:79:10"
																		},
																		"nativeSrc": "6317:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6317:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6290:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6290:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6299:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6299:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6286:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6286:3:10"
																		},
																		"nativeSrc": "6286:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6286:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6311:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6311:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6282:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6282:3:10"
																},
																"nativeSrc": "6282:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6282:32:10"
															},
															"nativeSrc": "6279:119:10",
															"nodeType": "YulIf",
															"src": "6279:119:10"
														},
														{
															"nativeSrc": "6408:136:10",
															"nodeType": "YulBlock",
															"src": "6408:136:10",
															"statements": [
																{
																	"nativeSrc": "6423:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6423:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6437:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6437:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6427:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6427:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6452:82:10",
																	"nodeType": "YulAssignment",
																	"src": "6452:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6506:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6506:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6517:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6517:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6502:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6502:3:10"
																				},
																				"nativeSrc": "6502:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6502:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6526:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6526:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$705",
																			"nativeSrc": "6462:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "6462:39:10"
																		},
																		"nativeSrc": "6462:72:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6452:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6452:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$705",
												"nativeSrc": "6184:367:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6239:9:10",
														"nodeType": "YulTypedName",
														"src": "6239:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6250:7:10",
														"nodeType": "YulTypedName",
														"src": "6250:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6262:6:10",
														"nodeType": "YulTypedName",
														"src": "6262:6:10",
														"type": ""
													}
												],
												"src": "6184:367:10"
											},
											{
												"body": {
													"nativeSrc": "6589:28:10",
													"nodeType": "YulBlock",
													"src": "6589:28:10",
													"statements": [
														{
															"nativeSrc": "6599:12:10",
															"nodeType": "YulAssignment",
															"src": "6599:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "6606:5:10",
																"nodeType": "YulIdentifier",
																"src": "6606:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6599:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6599:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6557:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6575:5:10",
														"nodeType": "YulTypedName",
														"src": "6575:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6585:3:10",
														"nodeType": "YulTypedName",
														"src": "6585:3:10",
														"type": ""
													}
												],
												"src": "6557:60:10"
											},
											{
												"body": {
													"nativeSrc": "6683:82:10",
													"nodeType": "YulBlock",
													"src": "6683:82:10",
													"statements": [
														{
															"nativeSrc": "6693:66:10",
															"nodeType": "YulAssignment",
															"src": "6693:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6751:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6751:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6733:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "6733:17:10"
																				},
																				"nativeSrc": "6733:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6733:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6724:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "6724:8:10"
																		},
																		"nativeSrc": "6724:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6724:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6706:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6706:17:10"
																},
																"nativeSrc": "6706:53:10",
																"nodeType": "YulFunctionCall",
																"src": "6706:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6693:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6693:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6623:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6663:5:10",
														"nodeType": "YulTypedName",
														"src": "6663:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6673:9:10",
														"nodeType": "YulTypedName",
														"src": "6673:9:10",
														"type": ""
													}
												],
												"src": "6623:142:10"
											},
											{
												"body": {
													"nativeSrc": "6831:66:10",
													"nodeType": "YulBlock",
													"src": "6831:66:10",
													"statements": [
														{
															"nativeSrc": "6841:50:10",
															"nodeType": "YulAssignment",
															"src": "6841:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6885:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6885:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6854:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6854:30:10"
																},
																"nativeSrc": "6854:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6854:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6841:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6841:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6771:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6811:5:10",
														"nodeType": "YulTypedName",
														"src": "6811:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6821:9:10",
														"nodeType": "YulTypedName",
														"src": "6821:9:10",
														"type": ""
													}
												],
												"src": "6771:126:10"
											},
											{
												"body": {
													"nativeSrc": "6982:66:10",
													"nodeType": "YulBlock",
													"src": "6982:66:10",
													"statements": [
														{
															"nativeSrc": "6992:50:10",
															"nodeType": "YulAssignment",
															"src": "6992:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7036:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7036:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7005:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "7005:30:10"
																},
																"nativeSrc": "7005:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7005:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6992:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6992:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$705_to_t_address",
												"nativeSrc": "6903:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6962:5:10",
														"nodeType": "YulTypedName",
														"src": "6962:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6972:9:10",
														"nodeType": "YulTypedName",
														"src": "6972:9:10",
														"type": ""
													}
												],
												"src": "6903:145:10"
											},
											{
												"body": {
													"nativeSrc": "7138:85:10",
													"nodeType": "YulBlock",
													"src": "7138:85:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7155:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7155:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7210:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7210:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$705_to_t_address",
																			"nativeSrc": "7160:49:10",
																			"nodeType": "YulIdentifier",
																			"src": "7160:49:10"
																		},
																		"nativeSrc": "7160:56:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7160:56:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7148:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:10"
																},
																"nativeSrc": "7148:69:10",
																"nodeType": "YulFunctionCall",
																"src": "7148:69:10"
															},
															"nativeSrc": "7148:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "7148:69:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$705_to_t_address_fromStack",
												"nativeSrc": "7054:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7126:5:10",
														"nodeType": "YulTypedName",
														"src": "7126:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7133:3:10",
														"nodeType": "YulTypedName",
														"src": "7133:3:10",
														"type": ""
													}
												],
												"src": "7054:169:10"
											},
											{
												"body": {
													"nativeSrc": "7346:143:10",
													"nodeType": "YulBlock",
													"src": "7346:143:10",
													"statements": [
														{
															"nativeSrc": "7356:26:10",
															"nodeType": "YulAssignment",
															"src": "7356:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7368:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7368:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7379:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7379:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7364:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7364:3:10"
																},
																"nativeSrc": "7364:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7364:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7356:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7356:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7455:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7455:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7468:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7468:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7479:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7479:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7464:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:10"
																		},
																		"nativeSrc": "7464:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$705_to_t_address_fromStack",
																	"nativeSrc": "7392:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "7392:62:10"
																},
																"nativeSrc": "7392:90:10",
																"nodeType": "YulFunctionCall",
																"src": "7392:90:10"
															},
															"nativeSrc": "7392:90:10",
															"nodeType": "YulExpressionStatement",
															"src": "7392:90:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$705__to_t_address__fromStack_reversed",
												"nativeSrc": "7229:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7318:9:10",
														"nodeType": "YulTypedName",
														"src": "7318:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7330:6:10",
														"nodeType": "YulTypedName",
														"src": "7330:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7341:4:10",
														"nodeType": "YulTypedName",
														"src": "7341:4:10",
														"type": ""
													}
												],
												"src": "7229:260:10"
											},
											{
												"body": {
													"nativeSrc": "7539:47:10",
													"nodeType": "YulBlock",
													"src": "7539:47:10",
													"statements": [
														{
															"nativeSrc": "7549:31:10",
															"nodeType": "YulAssignment",
															"src": "7549:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7564:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7564:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7571:8:10",
																		"nodeType": "YulLiteral",
																		"src": "7571:8:10",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7560:3:10"
																},
																"nativeSrc": "7560:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7560:20:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7549:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7549:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7495:91:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7521:5:10",
														"nodeType": "YulTypedName",
														"src": "7521:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7531:7:10",
														"nodeType": "YulTypedName",
														"src": "7531:7:10",
														"type": ""
													}
												],
												"src": "7495:91:10"
											},
											{
												"body": {
													"nativeSrc": "7655:52:10",
													"nodeType": "YulBlock",
													"src": "7655:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7672:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7672:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7694:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7694:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "7677:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "7677:16:10"
																		},
																		"nativeSrc": "7677:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7677:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:10"
																},
																"nativeSrc": "7665:36:10",
																"nodeType": "YulFunctionCall",
																"src": "7665:36:10"
															},
															"nativeSrc": "7665:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "7665:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "7592:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7643:5:10",
														"nodeType": "YulTypedName",
														"src": "7643:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7650:3:10",
														"nodeType": "YulTypedName",
														"src": "7650:3:10",
														"type": ""
													}
												],
												"src": "7592:115:10"
											},
											{
												"body": {
													"nativeSrc": "7809:122:10",
													"nodeType": "YulBlock",
													"src": "7809:122:10",
													"statements": [
														{
															"nativeSrc": "7819:26:10",
															"nodeType": "YulAssignment",
															"src": "7819:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7831:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7831:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7842:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7842:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7827:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7827:3:10"
																},
																"nativeSrc": "7827:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7827:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7819:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7819:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7897:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7897:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7910:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7910:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7921:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7921:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7906:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:10"
																		},
																		"nativeSrc": "7906:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "7855:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "7855:41:10"
																},
																"nativeSrc": "7855:69:10",
																"nodeType": "YulFunctionCall",
																"src": "7855:69:10"
															},
															"nativeSrc": "7855:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "7855:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "7713:218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7781:9:10",
														"nodeType": "YulTypedName",
														"src": "7781:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7793:6:10",
														"nodeType": "YulTypedName",
														"src": "7793:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7804:4:10",
														"nodeType": "YulTypedName",
														"src": "7804:4:10",
														"type": ""
													}
												],
												"src": "7713:218:10"
											},
											{
												"body": {
													"nativeSrc": "8033:73:10",
													"nodeType": "YulBlock",
													"src": "8033:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8050:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8050:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8055:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8055:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8043:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8043:6:10"
																},
																"nativeSrc": "8043:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8043:19:10"
															},
															"nativeSrc": "8043:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "8043:19:10"
														},
														{
															"nativeSrc": "8071:29:10",
															"nodeType": "YulAssignment",
															"src": "8071:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8090:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8095:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8095:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8086:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:10"
																},
																"nativeSrc": "8086:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8086:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8071:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "8071:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7937:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8005:3:10",
														"nodeType": "YulTypedName",
														"src": "8005:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8010:6:10",
														"nodeType": "YulTypedName",
														"src": "8010:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8021:11:10",
														"nodeType": "YulTypedName",
														"src": "8021:11:10",
														"type": ""
													}
												],
												"src": "7937:169:10"
											},
											{
												"body": {
													"nativeSrc": "8218:75:10",
													"nodeType": "YulBlock",
													"src": "8218:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8240:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8240:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8248:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8248:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8236:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8236:3:10"
																		},
																		"nativeSrc": "8236:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8236:14:10"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420617070726f76656420666f72207377617070696e67",
																		"kind": "string",
																		"nativeSrc": "8252:33:10",
																		"nodeType": "YulLiteral",
																		"src": "8252:33:10",
																		"type": "",
																		"value": "Token not approved for swapping"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8229:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8229:6:10"
																},
																"nativeSrc": "8229:57:10",
																"nodeType": "YulFunctionCall",
																"src": "8229:57:10"
															},
															"nativeSrc": "8229:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "8229:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e",
												"nativeSrc": "8112:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8210:6:10",
														"nodeType": "YulTypedName",
														"src": "8210:6:10",
														"type": ""
													}
												],
												"src": "8112:181:10"
											},
											{
												"body": {
													"nativeSrc": "8445:220:10",
													"nodeType": "YulBlock",
													"src": "8445:220:10",
													"statements": [
														{
															"nativeSrc": "8455:74:10",
															"nodeType": "YulAssignment",
															"src": "8455:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8521:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8521:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8526:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8526:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8462:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8462:58:10"
																},
																"nativeSrc": "8462:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8462:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8455:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8455:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8627:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8627:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e",
																	"nativeSrc": "8538:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8538:88:10"
																},
																"nativeSrc": "8538:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8538:93:10"
															},
															"nativeSrc": "8538:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8538:93:10"
														},
														{
															"nativeSrc": "8640:19:10",
															"nodeType": "YulAssignment",
															"src": "8640:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8651:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8651:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8656:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8647:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8647:3:10"
																},
																"nativeSrc": "8647:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8647:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8640:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8640:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8299:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8433:3:10",
														"nodeType": "YulTypedName",
														"src": "8433:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8441:3:10",
														"nodeType": "YulTypedName",
														"src": "8441:3:10",
														"type": ""
													}
												],
												"src": "8299:366:10"
											},
											{
												"body": {
													"nativeSrc": "8842:248:10",
													"nodeType": "YulBlock",
													"src": "8842:248:10",
													"statements": [
														{
															"nativeSrc": "8852:26:10",
															"nodeType": "YulAssignment",
															"src": "8852:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8864:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8864:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8875:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8860:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8860:3:10"
																},
																"nativeSrc": "8860:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8860:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8852:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8852:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8899:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8899:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8910:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8910:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8895:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8895:3:10"
																		},
																		"nativeSrc": "8895:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8895:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8918:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8918:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8924:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8924:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8914:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8914:3:10"
																		},
																		"nativeSrc": "8914:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8914:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8888:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:10"
																},
																"nativeSrc": "8888:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8888:47:10"
															},
															"nativeSrc": "8888:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8888:47:10"
														},
														{
															"nativeSrc": "8944:139:10",
															"nodeType": "YulAssignment",
															"src": "8944:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9078:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9078:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8952:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8952:124:10"
																},
																"nativeSrc": "8952:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8952:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8944:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8944:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8671:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8822:9:10",
														"nodeType": "YulTypedName",
														"src": "8822:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8837:4:10",
														"nodeType": "YulTypedName",
														"src": "8837:4:10",
														"type": ""
													}
												],
												"src": "8671:419:10"
											},
											{
												"body": {
													"nativeSrc": "9202:119:10",
													"nodeType": "YulBlock",
													"src": "9202:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9224:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9224:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9232:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9232:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9220:3:10"
																		},
																		"nativeSrc": "9220:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9220:14:10"
																	},
																	{
																		"hexValue": "496e70757420616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "9236:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9236:34:10",
																		"type": "",
																		"value": "Input amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9213:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9213:6:10"
																},
																"nativeSrc": "9213:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9213:58:10"
															},
															"nativeSrc": "9213:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9213:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9292:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9292:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9300:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9300:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9288:3:10"
																		},
																		"nativeSrc": "9288:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9288:15:10"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "9305:8:10",
																		"nodeType": "YulLiteral",
																		"src": "9305:8:10",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9281:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9281:6:10"
																},
																"nativeSrc": "9281:33:10",
																"nodeType": "YulFunctionCall",
																"src": "9281:33:10"
															},
															"nativeSrc": "9281:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "9281:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774",
												"nativeSrc": "9096:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9194:6:10",
														"nodeType": "YulTypedName",
														"src": "9194:6:10",
														"type": ""
													}
												],
												"src": "9096:225:10"
											},
											{
												"body": {
													"nativeSrc": "9473:220:10",
													"nodeType": "YulBlock",
													"src": "9473:220:10",
													"statements": [
														{
															"nativeSrc": "9483:74:10",
															"nodeType": "YulAssignment",
															"src": "9483:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9549:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9549:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9554:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9554:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9490:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9490:58:10"
																},
																"nativeSrc": "9490:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9490:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9483:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9655:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9655:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774",
																	"nativeSrc": "9566:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9566:88:10"
																},
																"nativeSrc": "9566:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9566:93:10"
															},
															"nativeSrc": "9566:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9566:93:10"
														},
														{
															"nativeSrc": "9668:19:10",
															"nodeType": "YulAssignment",
															"src": "9668:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9679:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9679:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9684:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9684:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9675:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9675:3:10"
																},
																"nativeSrc": "9675:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9675:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9668:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9668:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9327:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9461:3:10",
														"nodeType": "YulTypedName",
														"src": "9461:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9469:3:10",
														"nodeType": "YulTypedName",
														"src": "9469:3:10",
														"type": ""
													}
												],
												"src": "9327:366:10"
											},
											{
												"body": {
													"nativeSrc": "9870:248:10",
													"nodeType": "YulBlock",
													"src": "9870:248:10",
													"statements": [
														{
															"nativeSrc": "9880:26:10",
															"nodeType": "YulAssignment",
															"src": "9880:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9892:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9892:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9903:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9903:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9888:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9888:3:10"
																},
																"nativeSrc": "9888:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9888:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9880:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9880:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9927:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9927:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9938:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9923:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:10"
																		},
																		"nativeSrc": "9923:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9923:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9946:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9946:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9942:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9942:3:10"
																		},
																		"nativeSrc": "9942:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9942:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9916:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9916:6:10"
																},
																"nativeSrc": "9916:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9916:47:10"
															},
															"nativeSrc": "9916:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9916:47:10"
														},
														{
															"nativeSrc": "9972:139:10",
															"nodeType": "YulAssignment",
															"src": "9972:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10106:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10106:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9980:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9980:124:10"
																},
																"nativeSrc": "9980:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9980:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9972:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9972:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9699:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9850:9:10",
														"nodeType": "YulTypedName",
														"src": "9850:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9865:4:10",
														"nodeType": "YulTypedName",
														"src": "9865:4:10",
														"type": ""
													}
												],
												"src": "9699:419:10"
											},
											{
												"body": {
													"nativeSrc": "10278:288:10",
													"nodeType": "YulBlock",
													"src": "10278:288:10",
													"statements": [
														{
															"nativeSrc": "10288:26:10",
															"nodeType": "YulAssignment",
															"src": "10288:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:10"
																},
																"nativeSrc": "10296:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:10"
																		},
																		"nativeSrc": "10377:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:10"
																},
																"nativeSrc": "10324:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:10"
															},
															"nativeSrc": "10324:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:10"
																		},
																		"nativeSrc": "10458:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10405:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:10"
																},
																"nativeSrc": "10405:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:10"
															},
															"nativeSrc": "10405:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:10"
																		},
																		"nativeSrc": "10540:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:10"
																},
																"nativeSrc": "10487:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:10"
															},
															"nativeSrc": "10487:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:10",
														"nodeType": "YulTypedName",
														"src": "10234:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:10",
														"nodeType": "YulTypedName",
														"src": "10246:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:10",
														"nodeType": "YulTypedName",
														"src": "10254:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:10",
														"nodeType": "YulTypedName",
														"src": "10262:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:10",
														"nodeType": "YulTypedName",
														"src": "10273:4:10",
														"type": ""
													}
												],
												"src": "10124:442:10"
											},
											{
												"body": {
													"nativeSrc": "10612:76:10",
													"nodeType": "YulBlock",
													"src": "10612:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10666:16:10",
																"nodeType": "YulBlock",
																"src": "10666:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10675:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10675:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10678:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10678:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10668:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10668:6:10"
																			},
																			"nativeSrc": "10668:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10668:12:10"
																		},
																		"nativeSrc": "10668:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10668:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10635:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10635:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10657:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10657:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10642:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "10642:14:10"
																				},
																				"nativeSrc": "10642:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10642:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10632:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10632:2:10"
																		},
																		"nativeSrc": "10632:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10632:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10625:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10625:6:10"
																},
																"nativeSrc": "10625:40:10",
																"nodeType": "YulFunctionCall",
																"src": "10625:40:10"
															},
															"nativeSrc": "10622:60:10",
															"nodeType": "YulIf",
															"src": "10622:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10572:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10605:5:10",
														"nodeType": "YulTypedName",
														"src": "10605:5:10",
														"type": ""
													}
												],
												"src": "10572:116:10"
											},
											{
												"body": {
													"nativeSrc": "10754:77:10",
													"nodeType": "YulBlock",
													"src": "10754:77:10",
													"statements": [
														{
															"nativeSrc": "10764:22:10",
															"nodeType": "YulAssignment",
															"src": "10764:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10779:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10779:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10773:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10773:5:10"
																},
																"nativeSrc": "10773:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10773:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10764:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10764:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10819:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10819:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10795:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "10795:23:10"
																},
																"nativeSrc": "10795:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10795:30:10"
															},
															"nativeSrc": "10795:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10795:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10694:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10732:6:10",
														"nodeType": "YulTypedName",
														"src": "10732:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10740:3:10",
														"nodeType": "YulTypedName",
														"src": "10740:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10748:5:10",
														"nodeType": "YulTypedName",
														"src": "10748:5:10",
														"type": ""
													}
												],
												"src": "10694:137:10"
											},
											{
												"body": {
													"nativeSrc": "10911:271:10",
													"nodeType": "YulBlock",
													"src": "10911:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10957:83:10",
																"nodeType": "YulBlock",
																"src": "10957:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10959:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10959:77:10"
																			},
																			"nativeSrc": "10959:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10959:79:10"
																		},
																		"nativeSrc": "10959:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10959:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10932:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10932:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10941:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10928:3:10"
																		},
																		"nativeSrc": "10928:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10928:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10953:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10953:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10924:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10924:3:10"
																},
																"nativeSrc": "10924:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10924:32:10"
															},
															"nativeSrc": "10921:119:10",
															"nodeType": "YulIf",
															"src": "10921:119:10"
														},
														{
															"nativeSrc": "11050:125:10",
															"nodeType": "YulBlock",
															"src": "11050:125:10",
															"statements": [
																{
																	"nativeSrc": "11065:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11065:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11079:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11079:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11069:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11069:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11094:71:10",
																	"nodeType": "YulAssignment",
																	"src": "11094:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11133:3:10"
																				},
																				"nativeSrc": "11133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11104:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "11104:28:10"
																		},
																		"nativeSrc": "11104:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11104:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11094:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11094:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10837:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10881:9:10",
														"nodeType": "YulTypedName",
														"src": "10881:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10892:7:10",
														"nodeType": "YulTypedName",
														"src": "10892:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10904:6:10",
														"nodeType": "YulTypedName",
														"src": "10904:6:10",
														"type": ""
													}
												],
												"src": "10837:345:10"
											},
											{
												"body": {
													"nativeSrc": "11314:206:10",
													"nodeType": "YulBlock",
													"src": "11314:206:10",
													"statements": [
														{
															"nativeSrc": "11324:26:10",
															"nodeType": "YulAssignment",
															"src": "11324:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11336:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11336:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11347:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11347:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11332:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11332:3:10"
																},
																"nativeSrc": "11332:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11332:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11324:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11324:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11404:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11404:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11417:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11417:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11428:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11428:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11413:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11413:3:10"
																		},
																		"nativeSrc": "11413:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11413:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11360:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11360:43:10"
																},
																"nativeSrc": "11360:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11360:71:10"
															},
															"nativeSrc": "11360:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11360:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11485:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11485:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11498:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11498:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11509:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11509:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11494:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11494:3:10"
																		},
																		"nativeSrc": "11494:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11494:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11441:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11441:43:10"
																},
																"nativeSrc": "11441:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11441:72:10"
															},
															"nativeSrc": "11441:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11441:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11188:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11278:9:10",
														"nodeType": "YulTypedName",
														"src": "11278:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11290:6:10",
														"nodeType": "YulTypedName",
														"src": "11290:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11298:6:10",
														"nodeType": "YulTypedName",
														"src": "11298:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11309:4:10",
														"nodeType": "YulTypedName",
														"src": "11309:4:10",
														"type": ""
													}
												],
												"src": "11188:332:10"
											},
											{
												"body": {
													"nativeSrc": "11581:53:10",
													"nodeType": "YulBlock",
													"src": "11581:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11598:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11598:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11621:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11621:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11603:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "11603:17:10"
																		},
																		"nativeSrc": "11603:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11603:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11591:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11591:6:10"
																},
																"nativeSrc": "11591:37:10",
																"nodeType": "YulFunctionCall",
																"src": "11591:37:10"
															},
															"nativeSrc": "11591:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "11591:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "11526:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11569:5:10",
														"nodeType": "YulTypedName",
														"src": "11569:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11576:3:10",
														"nodeType": "YulTypedName",
														"src": "11576:3:10",
														"type": ""
													}
												],
												"src": "11526:108:10"
											},
											{
												"body": {
													"nativeSrc": "11693:52:10",
													"nodeType": "YulBlock",
													"src": "11693:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11710:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11710:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11732:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11732:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "11715:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "11715:16:10"
																		},
																		"nativeSrc": "11715:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11715:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11703:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11703:6:10"
																},
																"nativeSrc": "11703:36:10",
																"nodeType": "YulFunctionCall",
																"src": "11703:36:10"
															},
															"nativeSrc": "11703:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "11703:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "11640:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11681:5:10",
														"nodeType": "YulTypedName",
														"src": "11681:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11688:3:10",
														"nodeType": "YulTypedName",
														"src": "11688:3:10",
														"type": ""
													}
												],
												"src": "11640:105:10"
											},
											{
												"body": {
													"nativeSrc": "11806:53:10",
													"nodeType": "YulBlock",
													"src": "11806:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11823:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11823:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11846:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11846:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11828:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "11828:17:10"
																		},
																		"nativeSrc": "11828:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11828:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11816:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11816:6:10"
																},
																"nativeSrc": "11816:37:10",
																"nodeType": "YulFunctionCall",
																"src": "11816:37:10"
															},
															"nativeSrc": "11816:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "11816:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "11751:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11794:5:10",
														"nodeType": "YulTypedName",
														"src": "11794:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11801:3:10",
														"nodeType": "YulTypedName",
														"src": "11801:3:10",
														"type": ""
													}
												],
												"src": "11751:108:10"
											},
											{
												"body": {
													"nativeSrc": "11920:53:10",
													"nodeType": "YulBlock",
													"src": "11920:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11937:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11937:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11960:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11960:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "11942:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "11942:17:10"
																		},
																		"nativeSrc": "11942:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11942:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11930:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11930:6:10"
																},
																"nativeSrc": "11930:37:10",
																"nodeType": "YulFunctionCall",
																"src": "11930:37:10"
															},
															"nativeSrc": "11930:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "11930:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "11865:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11908:5:10",
														"nodeType": "YulTypedName",
														"src": "11908:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11915:3:10",
														"nodeType": "YulTypedName",
														"src": "11915:3:10",
														"type": ""
													}
												],
												"src": "11865:108:10"
											},
											{
												"body": {
													"nativeSrc": "12217:1479:10",
													"nodeType": "YulBlock",
													"src": "12217:1479:10",
													"statements": [
														{
															"nativeSrc": "12227:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12227:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12243:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12243:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12248:6:10",
																		"nodeType": "YulLiteral",
																		"src": "12248:6:10",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:10"
																},
																"nativeSrc": "12239:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12239:16:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "12231:4:10",
																	"nodeType": "YulTypedName",
																	"src": "12231:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12265:167:10",
															"nodeType": "YulBlock",
															"src": "12265:167:10",
															"statements": [
																{
																	"nativeSrc": "12303:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12303:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12333:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12333:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12340:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12340:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12329:3:10"
																				},
																				"nativeSrc": "12329:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12329:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12323:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12323:5:10"
																		},
																		"nativeSrc": "12323:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12323:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12307:12:10",
																			"nodeType": "YulTypedName",
																			"src": "12307:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12393:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "12393:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12411:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12411:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12416:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12416:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12407:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12407:3:10"
																				},
																				"nativeSrc": "12407:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12407:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "12359:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "12359:33:10"
																		},
																		"nativeSrc": "12359:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12359:63:10"
																	},
																	"nativeSrc": "12359:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "12359:63:10"
																}
															]
														},
														{
															"nativeSrc": "12442:168:10",
															"nodeType": "YulBlock",
															"src": "12442:168:10",
															"statements": [
																{
																	"nativeSrc": "12481:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12481:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12511:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12511:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12518:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12518:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12507:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12507:3:10"
																				},
																				"nativeSrc": "12507:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12507:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12501:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12501:5:10"
																		},
																		"nativeSrc": "12501:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12501:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12485:12:10",
																			"nodeType": "YulTypedName",
																			"src": "12485:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12571:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "12571:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12589:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12589:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12594:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12594:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12585:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12585:3:10"
																				},
																				"nativeSrc": "12585:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12585:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "12537:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "12537:33:10"
																		},
																		"nativeSrc": "12537:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12537:63:10"
																	},
																	"nativeSrc": "12537:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "12537:63:10"
																}
															]
														},
														{
															"nativeSrc": "12620:161:10",
															"nodeType": "YulBlock",
															"src": "12620:161:10",
															"statements": [
																{
																	"nativeSrc": "12654:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12654:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12684:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12684:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12691:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12691:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12680:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12680:3:10"
																				},
																				"nativeSrc": "12680:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12680:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12674:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12674:5:10"
																		},
																		"nativeSrc": "12674:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12674:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12658:12:10",
																			"nodeType": "YulTypedName",
																			"src": "12658:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12742:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "12742:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12760:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12760:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12765:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12765:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12756:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12756:3:10"
																				},
																				"nativeSrc": "12756:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12756:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "12710:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "12710:31:10"
																		},
																		"nativeSrc": "12710:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12710:61:10"
																	},
																	"nativeSrc": "12710:61:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "12710:61:10"
																}
															]
														},
														{
															"nativeSrc": "12791:169:10",
															"nodeType": "YulBlock",
															"src": "12791:169:10",
															"statements": [
																{
																	"nativeSrc": "12831:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12831:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12861:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12861:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12868:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12868:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12857:3:10"
																				},
																				"nativeSrc": "12857:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12857:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12851:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12851:5:10"
																		},
																		"nativeSrc": "12851:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12851:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12835:12:10",
																			"nodeType": "YulTypedName",
																			"src": "12835:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12921:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "12921:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12939:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12939:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12944:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12944:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12935:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12935:3:10"
																				},
																				"nativeSrc": "12935:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12935:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "12887:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "12887:33:10"
																		},
																		"nativeSrc": "12887:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12887:63:10"
																	},
																	"nativeSrc": "12887:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "12887:63:10"
																}
															]
														},
														{
															"nativeSrc": "12970:168:10",
															"nodeType": "YulBlock",
															"src": "12970:168:10",
															"statements": [
																{
																	"nativeSrc": "13009:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13009:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13039:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13039:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13046:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13046:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13035:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13035:3:10"
																				},
																				"nativeSrc": "13035:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13035:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13029:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "13029:5:10"
																		},
																		"nativeSrc": "13029:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13029:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13013:12:10",
																			"nodeType": "YulTypedName",
																			"src": "13013:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13099:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "13099:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13117:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "13117:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13122:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13122:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13113:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13113:3:10"
																				},
																				"nativeSrc": "13113:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13113:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13065:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "13065:33:10"
																		},
																		"nativeSrc": "13065:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13065:63:10"
																	},
																	"nativeSrc": "13065:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "13065:63:10"
																}
															]
														},
														{
															"nativeSrc": "13148:168:10",
															"nodeType": "YulBlock",
															"src": "13148:168:10",
															"statements": [
																{
																	"nativeSrc": "13187:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13187:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13217:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13217:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13224:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13224:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13213:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13213:3:10"
																				},
																				"nativeSrc": "13213:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13213:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13207:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "13207:5:10"
																		},
																		"nativeSrc": "13207:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13207:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13191:12:10",
																			"nodeType": "YulTypedName",
																			"src": "13191:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13277:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "13277:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13295:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "13295:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13300:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13300:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13291:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13291:3:10"
																				},
																				"nativeSrc": "13291:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13291:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13243:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "13243:33:10"
																		},
																		"nativeSrc": "13243:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13243:63:10"
																	},
																	"nativeSrc": "13243:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "13243:63:10"
																}
															]
														},
														{
															"nativeSrc": "13326:176:10",
															"nodeType": "YulBlock",
															"src": "13326:176:10",
															"statements": [
																{
																	"nativeSrc": "13373:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13373:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13403:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13403:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13410:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13410:4:10",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13399:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13399:3:10"
																				},
																				"nativeSrc": "13399:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13399:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13393:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "13393:5:10"
																		},
																		"nativeSrc": "13393:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13393:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13377:12:10",
																			"nodeType": "YulTypedName",
																			"src": "13377:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13463:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "13463:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13481:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "13481:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13486:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13486:4:10",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13477:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13477:3:10"
																				},
																				"nativeSrc": "13477:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13477:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13429:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "13429:33:10"
																		},
																		"nativeSrc": "13429:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13429:63:10"
																	},
																	"nativeSrc": "13429:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "13429:63:10"
																}
															]
														},
														{
															"nativeSrc": "13512:177:10",
															"nodeType": "YulBlock",
															"src": "13512:177:10",
															"statements": [
																{
																	"nativeSrc": "13560:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13560:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13590:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13590:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13597:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13597:4:10",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13586:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13586:3:10"
																				},
																				"nativeSrc": "13586:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13586:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13580:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "13580:5:10"
																		},
																		"nativeSrc": "13580:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13580:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13564:12:10",
																			"nodeType": "YulTypedName",
																			"src": "13564:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13650:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "13650:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13668:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "13668:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13673:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13673:4:10",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13664:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13664:3:10"
																				},
																				"nativeSrc": "13664:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13664:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "13616:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "13616:33:10"
																		},
																		"nativeSrc": "13616:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13616:63:10"
																	},
																	"nativeSrc": "13616:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "13616:63:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$629_memory_ptr_to_t_struct$_ExactInputSingleParams_$629_memory_ptr_fromStack",
												"nativeSrc": "12073:1623:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12204:5:10",
														"nodeType": "YulTypedName",
														"src": "12204:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12211:3:10",
														"nodeType": "YulTypedName",
														"src": "12211:3:10",
														"type": ""
													}
												],
												"src": "12073:1623:10"
											},
											{
												"body": {
													"nativeSrc": "13878:203:10",
													"nodeType": "YulBlock",
													"src": "13878:203:10",
													"statements": [
														{
															"nativeSrc": "13888:27:10",
															"nodeType": "YulAssignment",
															"src": "13888:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13900:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13900:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13911:3:10",
																		"nodeType": "YulLiteral",
																		"src": "13911:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13896:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13896:3:10"
																},
																"nativeSrc": "13896:19:10",
																"nodeType": "YulFunctionCall",
																"src": "13896:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13888:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13888:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14047:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14047:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14060:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14060:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14071:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14071:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14056:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14056:3:10"
																		},
																		"nativeSrc": "14056:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14056:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$629_memory_ptr_to_t_struct$_ExactInputSingleParams_$629_memory_ptr_fromStack",
																	"nativeSrc": "13925:121:10",
																	"nodeType": "YulIdentifier",
																	"src": "13925:121:10"
																},
																"nativeSrc": "13925:149:10",
																"nodeType": "YulFunctionCall",
																"src": "13925:149:10"
															},
															"nativeSrc": "13925:149:10",
															"nodeType": "YulExpressionStatement",
															"src": "13925:149:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$629_memory_ptr__to_t_struct$_ExactInputSingleParams_$629_memory_ptr__fromStack_reversed",
												"nativeSrc": "13702:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13850:9:10",
														"nodeType": "YulTypedName",
														"src": "13850:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13862:6:10",
														"nodeType": "YulTypedName",
														"src": "13862:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13873:4:10",
														"nodeType": "YulTypedName",
														"src": "13873:4:10",
														"type": ""
													}
												],
												"src": "13702:379:10"
											},
											{
												"body": {
													"nativeSrc": "14150:80:10",
													"nodeType": "YulBlock",
													"src": "14150:80:10",
													"statements": [
														{
															"nativeSrc": "14160:22:10",
															"nodeType": "YulAssignment",
															"src": "14160:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14175:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14175:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14169:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14169:5:10"
																},
																"nativeSrc": "14169:13:10",
																"nodeType": "YulFunctionCall",
																"src": "14169:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14160:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14160:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14218:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14218:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14191:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "14191:26:10"
																},
																"nativeSrc": "14191:33:10",
																"nodeType": "YulFunctionCall",
																"src": "14191:33:10"
															},
															"nativeSrc": "14191:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "14191:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "14087:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14128:6:10",
														"nodeType": "YulTypedName",
														"src": "14128:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14136:3:10",
														"nodeType": "YulTypedName",
														"src": "14136:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14144:5:10",
														"nodeType": "YulTypedName",
														"src": "14144:5:10",
														"type": ""
													}
												],
												"src": "14087:143:10"
											},
											{
												"body": {
													"nativeSrc": "14313:274:10",
													"nodeType": "YulBlock",
													"src": "14313:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "14359:83:10",
																"nodeType": "YulBlock",
																"src": "14359:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14361:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "14361:77:10"
																			},
																			"nativeSrc": "14361:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14361:79:10"
																		},
																		"nativeSrc": "14361:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14361:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14334:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14334:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14343:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14343:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14330:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14330:3:10"
																		},
																		"nativeSrc": "14330:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14330:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14326:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14326:3:10"
																},
																"nativeSrc": "14326:32:10",
																"nodeType": "YulFunctionCall",
																"src": "14326:32:10"
															},
															"nativeSrc": "14323:119:10",
															"nodeType": "YulIf",
															"src": "14323:119:10"
														},
														{
															"nativeSrc": "14452:128:10",
															"nodeType": "YulBlock",
															"src": "14452:128:10",
															"statements": [
																{
																	"nativeSrc": "14467:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14467:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14481:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14481:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14471:6:10",
																			"nodeType": "YulTypedName",
																			"src": "14471:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14496:74:10",
																	"nodeType": "YulAssignment",
																	"src": "14496:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14542:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14542:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14553:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14553:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14538:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14538:3:10"
																				},
																				"nativeSrc": "14538:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14538:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14562:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14562:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14506:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "14506:31:10"
																		},
																		"nativeSrc": "14506:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14506:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14496:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14496:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14236:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14283:9:10",
														"nodeType": "YulTypedName",
														"src": "14283:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14294:7:10",
														"nodeType": "YulTypedName",
														"src": "14294:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14306:6:10",
														"nodeType": "YulTypedName",
														"src": "14306:6:10",
														"type": ""
													}
												],
												"src": "14236:351:10"
											},
											{
												"body": {
													"nativeSrc": "14699:70:10",
													"nodeType": "YulBlock",
													"src": "14699:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14721:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14721:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14729:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14729:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14717:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14717:3:10"
																		},
																		"nativeSrc": "14717:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14717:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "14733:28:10",
																		"nodeType": "YulLiteral",
																		"src": "14733:28:10",
																		"type": "",
																		"value": "Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14710:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14710:6:10"
																},
																"nativeSrc": "14710:52:10",
																"nodeType": "YulFunctionCall",
																"src": "14710:52:10"
															},
															"nativeSrc": "14710:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "14710:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
												"nativeSrc": "14593:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14691:6:10",
														"nodeType": "YulTypedName",
														"src": "14691:6:10",
														"type": ""
													}
												],
												"src": "14593:176:10"
											},
											{
												"body": {
													"nativeSrc": "14921:220:10",
													"nodeType": "YulBlock",
													"src": "14921:220:10",
													"statements": [
														{
															"nativeSrc": "14931:74:10",
															"nodeType": "YulAssignment",
															"src": "14931:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14997:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14997:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15002:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14938:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14938:58:10"
																},
																"nativeSrc": "14938:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14938:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14931:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14931:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15103:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15103:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																	"nativeSrc": "15014:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15014:88:10"
																},
																"nativeSrc": "15014:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15014:93:10"
															},
															"nativeSrc": "15014:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15014:93:10"
														},
														{
															"nativeSrc": "15116:19:10",
															"nodeType": "YulAssignment",
															"src": "15116:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15127:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15127:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15132:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15123:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15123:3:10"
																},
																"nativeSrc": "15123:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15123:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15116:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15116:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14775:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14909:3:10",
														"nodeType": "YulTypedName",
														"src": "14909:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14917:3:10",
														"nodeType": "YulTypedName",
														"src": "14917:3:10",
														"type": ""
													}
												],
												"src": "14775:366:10"
											},
											{
												"body": {
													"nativeSrc": "15318:248:10",
													"nodeType": "YulBlock",
													"src": "15318:248:10",
													"statements": [
														{
															"nativeSrc": "15328:26:10",
															"nodeType": "YulAssignment",
															"src": "15328:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15340:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15340:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15351:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15351:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15336:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15336:3:10"
																},
																"nativeSrc": "15336:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15336:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15328:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15328:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15375:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15375:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15386:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15386:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15371:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15371:3:10"
																		},
																		"nativeSrc": "15371:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15371:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15394:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15394:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15400:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15400:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15390:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15390:3:10"
																		},
																		"nativeSrc": "15390:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15390:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15364:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15364:6:10"
																},
																"nativeSrc": "15364:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15364:47:10"
															},
															"nativeSrc": "15364:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15364:47:10"
														},
														{
															"nativeSrc": "15420:139:10",
															"nodeType": "YulAssignment",
															"src": "15420:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15554:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15554:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15428:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15428:124:10"
																},
																"nativeSrc": "15428:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15428:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15420:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15420:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15147:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15298:9:10",
														"nodeType": "YulTypedName",
														"src": "15298:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15313:4:10",
														"nodeType": "YulTypedName",
														"src": "15313:4:10",
														"type": ""
													}
												],
												"src": "15147:419:10"
											},
											{
												"body": {
													"nativeSrc": "15698:206:10",
													"nodeType": "YulBlock",
													"src": "15698:206:10",
													"statements": [
														{
															"nativeSrc": "15708:26:10",
															"nodeType": "YulAssignment",
															"src": "15708:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15720:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15720:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15731:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15731:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15716:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15716:3:10"
																},
																"nativeSrc": "15716:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15716:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15708:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15708:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15788:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15788:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15801:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15801:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15812:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15812:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15797:3:10"
																		},
																		"nativeSrc": "15797:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15797:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15744:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15744:43:10"
																},
																"nativeSrc": "15744:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15744:71:10"
															},
															"nativeSrc": "15744:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15744:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15869:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15869:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15882:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15882:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15893:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15893:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15878:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15878:3:10"
																		},
																		"nativeSrc": "15878:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15878:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15825:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15825:43:10"
																},
																"nativeSrc": "15825:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15825:72:10"
															},
															"nativeSrc": "15825:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15825:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15572:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15662:9:10",
														"nodeType": "YulTypedName",
														"src": "15662:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15674:6:10",
														"nodeType": "YulTypedName",
														"src": "15674:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15682:6:10",
														"nodeType": "YulTypedName",
														"src": "15682:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15693:4:10",
														"nodeType": "YulTypedName",
														"src": "15693:4:10",
														"type": ""
													}
												],
												"src": "15572:332:10"
											},
											{
												"body": {
													"nativeSrc": "16016:76:10",
													"nodeType": "YulBlock",
													"src": "16016:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16038:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16038:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16046:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16046:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16034:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16034:3:10"
																		},
																		"nativeSrc": "16034:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16034:14:10"
																	},
																	{
																		"hexValue": "5553444320697320616c7265616479207468652074617267657420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "16050:34:10",
																		"nodeType": "YulLiteral",
																		"src": "16050:34:10",
																		"type": "",
																		"value": "USDC is already the target token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16027:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16027:6:10"
																},
																"nativeSrc": "16027:58:10",
																"nodeType": "YulFunctionCall",
																"src": "16027:58:10"
															},
															"nativeSrc": "16027:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "16027:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2",
												"nativeSrc": "15910:182:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16008:6:10",
														"nodeType": "YulTypedName",
														"src": "16008:6:10",
														"type": ""
													}
												],
												"src": "15910:182:10"
											},
											{
												"body": {
													"nativeSrc": "16244:220:10",
													"nodeType": "YulBlock",
													"src": "16244:220:10",
													"statements": [
														{
															"nativeSrc": "16254:74:10",
															"nodeType": "YulAssignment",
															"src": "16254:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16320:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16320:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16325:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16261:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16261:58:10"
																},
																"nativeSrc": "16261:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16261:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16254:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16426:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16426:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2",
																	"nativeSrc": "16337:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16337:88:10"
																},
																"nativeSrc": "16337:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16337:93:10"
															},
															"nativeSrc": "16337:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16337:93:10"
														},
														{
															"nativeSrc": "16439:19:10",
															"nodeType": "YulAssignment",
															"src": "16439:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16450:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16455:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16455:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16446:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16446:3:10"
																},
																"nativeSrc": "16446:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16446:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16439:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16439:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16098:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16232:3:10",
														"nodeType": "YulTypedName",
														"src": "16232:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16240:3:10",
														"nodeType": "YulTypedName",
														"src": "16240:3:10",
														"type": ""
													}
												],
												"src": "16098:366:10"
											},
											{
												"body": {
													"nativeSrc": "16641:248:10",
													"nodeType": "YulBlock",
													"src": "16641:248:10",
													"statements": [
														{
															"nativeSrc": "16651:26:10",
															"nodeType": "YulAssignment",
															"src": "16651:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16663:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16663:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16674:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16674:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16659:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16659:3:10"
																},
																"nativeSrc": "16659:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16659:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16651:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16651:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16698:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16709:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16694:3:10"
																		},
																		"nativeSrc": "16694:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16694:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16717:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16717:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16723:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16723:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16713:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16713:3:10"
																		},
																		"nativeSrc": "16713:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16713:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16687:6:10"
																},
																"nativeSrc": "16687:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16687:47:10"
															},
															"nativeSrc": "16687:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16687:47:10"
														},
														{
															"nativeSrc": "16743:139:10",
															"nodeType": "YulAssignment",
															"src": "16743:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16877:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16877:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16751:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16751:124:10"
																},
																"nativeSrc": "16751:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16751:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16743:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16470:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16621:9:10",
														"nodeType": "YulTypedName",
														"src": "16621:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16636:4:10",
														"nodeType": "YulTypedName",
														"src": "16636:4:10",
														"type": ""
													}
												],
												"src": "16470:419:10"
											},
											{
												"body": {
													"nativeSrc": "17001:65:10",
													"nodeType": "YulBlock",
													"src": "17001:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17023:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17023:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17031:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17031:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17019:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17019:3:10"
																		},
																		"nativeSrc": "17019:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17019:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "17035:23:10",
																		"nodeType": "YulLiteral",
																		"src": "17035:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17012:6:10"
																},
																"nativeSrc": "17012:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17012:47:10"
															},
															"nativeSrc": "17012:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17012:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "16895:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16993:6:10",
														"nodeType": "YulTypedName",
														"src": "16993:6:10",
														"type": ""
													}
												],
												"src": "16895:171:10"
											},
											{
												"body": {
													"nativeSrc": "17218:220:10",
													"nodeType": "YulBlock",
													"src": "17218:220:10",
													"statements": [
														{
															"nativeSrc": "17228:74:10",
															"nodeType": "YulAssignment",
															"src": "17228:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17294:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17294:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17299:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17299:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17235:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17235:58:10"
																},
																"nativeSrc": "17235:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17235:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17228:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17228:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17400:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17400:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "17311:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17311:88:10"
																},
																"nativeSrc": "17311:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17311:93:10"
															},
															"nativeSrc": "17311:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17311:93:10"
														},
														{
															"nativeSrc": "17413:19:10",
															"nodeType": "YulAssignment",
															"src": "17413:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17424:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17424:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17429:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17429:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17420:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17420:3:10"
																},
																"nativeSrc": "17420:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17420:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17413:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17072:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17206:3:10",
														"nodeType": "YulTypedName",
														"src": "17206:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17214:3:10",
														"nodeType": "YulTypedName",
														"src": "17214:3:10",
														"type": ""
													}
												],
												"src": "17072:366:10"
											},
											{
												"body": {
													"nativeSrc": "17615:248:10",
													"nodeType": "YulBlock",
													"src": "17615:248:10",
													"statements": [
														{
															"nativeSrc": "17625:26:10",
															"nodeType": "YulAssignment",
															"src": "17625:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17637:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17637:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17648:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17648:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17633:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17633:3:10"
																},
																"nativeSrc": "17633:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17633:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17625:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17625:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17672:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17672:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17683:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17683:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17668:3:10"
																		},
																		"nativeSrc": "17668:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17668:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17691:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17691:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17697:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17697:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17687:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17687:3:10"
																		},
																		"nativeSrc": "17687:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17687:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17661:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17661:6:10"
																},
																"nativeSrc": "17661:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17661:47:10"
															},
															"nativeSrc": "17661:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17661:47:10"
														},
														{
															"nativeSrc": "17717:139:10",
															"nodeType": "YulAssignment",
															"src": "17717:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17851:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17851:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17725:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17725:124:10"
																},
																"nativeSrc": "17725:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17725:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17717:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17717:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17444:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17595:9:10",
														"nodeType": "YulTypedName",
														"src": "17595:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17610:4:10",
														"nodeType": "YulTypedName",
														"src": "17610:4:10",
														"type": ""
													}
												],
												"src": "17444:419:10"
											},
											{
												"body": {
													"nativeSrc": "17975:65:10",
													"nodeType": "YulBlock",
													"src": "17975:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17997:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17997:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18005:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18005:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17993:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17993:3:10"
																		},
																		"nativeSrc": "17993:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17993:14:10"
																	},
																	{
																		"hexValue": "546f6b656e206973206e6f7420617070726f766564",
																		"kind": "string",
																		"nativeSrc": "18009:23:10",
																		"nodeType": "YulLiteral",
																		"src": "18009:23:10",
																		"type": "",
																		"value": "Token is not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17986:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17986:6:10"
																},
																"nativeSrc": "17986:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17986:47:10"
															},
															"nativeSrc": "17986:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17986:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22",
												"nativeSrc": "17869:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17967:6:10",
														"nodeType": "YulTypedName",
														"src": "17967:6:10",
														"type": ""
													}
												],
												"src": "17869:171:10"
											},
											{
												"body": {
													"nativeSrc": "18192:220:10",
													"nodeType": "YulBlock",
													"src": "18192:220:10",
													"statements": [
														{
															"nativeSrc": "18202:74:10",
															"nodeType": "YulAssignment",
															"src": "18202:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18268:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18268:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18273:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18273:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18209:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18209:58:10"
																},
																"nativeSrc": "18209:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18209:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18202:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18202:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18374:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18374:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22",
																	"nativeSrc": "18285:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18285:88:10"
																},
																"nativeSrc": "18285:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18285:93:10"
															},
															"nativeSrc": "18285:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18285:93:10"
														},
														{
															"nativeSrc": "18387:19:10",
															"nodeType": "YulAssignment",
															"src": "18387:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18398:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18398:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18403:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18394:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18394:3:10"
																},
																"nativeSrc": "18394:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18394:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18387:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18387:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18046:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18180:3:10",
														"nodeType": "YulTypedName",
														"src": "18180:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18188:3:10",
														"nodeType": "YulTypedName",
														"src": "18188:3:10",
														"type": ""
													}
												],
												"src": "18046:366:10"
											},
											{
												"body": {
													"nativeSrc": "18589:248:10",
													"nodeType": "YulBlock",
													"src": "18589:248:10",
													"statements": [
														{
															"nativeSrc": "18599:26:10",
															"nodeType": "YulAssignment",
															"src": "18599:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18611:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18611:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18622:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18607:3:10"
																},
																"nativeSrc": "18607:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18607:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18599:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18599:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18646:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18646:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18657:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18657:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18642:3:10"
																		},
																		"nativeSrc": "18642:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18642:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18665:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18665:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18671:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18671:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18661:3:10"
																		},
																		"nativeSrc": "18661:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18661:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18635:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18635:6:10"
																},
																"nativeSrc": "18635:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18635:47:10"
															},
															"nativeSrc": "18635:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18635:47:10"
														},
														{
															"nativeSrc": "18691:139:10",
															"nodeType": "YulAssignment",
															"src": "18691:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18825:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18825:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18699:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18699:124:10"
																},
																"nativeSrc": "18699:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18699:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18691:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18691:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18418:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18569:9:10",
														"nodeType": "YulTypedName",
														"src": "18569:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18584:4:10",
														"nodeType": "YulTypedName",
														"src": "18584:4:10",
														"type": ""
													}
												],
												"src": "18418:419:10"
											},
											{
												"body": {
													"nativeSrc": "18949:71:10",
													"nodeType": "YulBlock",
													"src": "18949:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18971:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18971:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18979:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18979:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18967:3:10"
																		},
																		"nativeSrc": "18967:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18967:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207377617020726f757465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "18983:29:10",
																		"nodeType": "YulLiteral",
																		"src": "18983:29:10",
																		"type": "",
																		"value": "Invalid swap router address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18960:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18960:6:10"
																},
																"nativeSrc": "18960:53:10",
																"nodeType": "YulFunctionCall",
																"src": "18960:53:10"
															},
															"nativeSrc": "18960:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "18960:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
												"nativeSrc": "18843:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18941:6:10",
														"nodeType": "YulTypedName",
														"src": "18941:6:10",
														"type": ""
													}
												],
												"src": "18843:177:10"
											},
											{
												"body": {
													"nativeSrc": "19172:220:10",
													"nodeType": "YulBlock",
													"src": "19172:220:10",
													"statements": [
														{
															"nativeSrc": "19182:74:10",
															"nodeType": "YulAssignment",
															"src": "19182:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19248:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19248:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19253:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19253:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19189:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19189:58:10"
																},
																"nativeSrc": "19189:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19189:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19182:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19182:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19354:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19354:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
																	"nativeSrc": "19265:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19265:88:10"
																},
																"nativeSrc": "19265:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19265:93:10"
															},
															"nativeSrc": "19265:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19265:93:10"
														},
														{
															"nativeSrc": "19367:19:10",
															"nodeType": "YulAssignment",
															"src": "19367:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19378:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19378:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19383:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19383:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19374:3:10"
																},
																"nativeSrc": "19374:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19374:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19367:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19367:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19026:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19160:3:10",
														"nodeType": "YulTypedName",
														"src": "19160:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19168:3:10",
														"nodeType": "YulTypedName",
														"src": "19168:3:10",
														"type": ""
													}
												],
												"src": "19026:366:10"
											},
											{
												"body": {
													"nativeSrc": "19569:248:10",
													"nodeType": "YulBlock",
													"src": "19569:248:10",
													"statements": [
														{
															"nativeSrc": "19579:26:10",
															"nodeType": "YulAssignment",
															"src": "19579:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19591:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19591:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19602:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19602:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19587:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19587:3:10"
																},
																"nativeSrc": "19587:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19587:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19579:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19579:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19626:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19626:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19637:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19637:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19622:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19622:3:10"
																		},
																		"nativeSrc": "19622:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19622:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19645:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19645:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19651:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19651:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19641:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19641:3:10"
																		},
																		"nativeSrc": "19641:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19641:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19615:6:10"
																},
																"nativeSrc": "19615:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19615:47:10"
															},
															"nativeSrc": "19615:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19615:47:10"
														},
														{
															"nativeSrc": "19671:139:10",
															"nodeType": "YulAssignment",
															"src": "19671:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19805:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19805:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19679:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19679:124:10"
																},
																"nativeSrc": "19679:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19679:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19671:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19671:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19398:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19549:9:10",
														"nodeType": "YulTypedName",
														"src": "19549:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19564:4:10",
														"nodeType": "YulTypedName",
														"src": "19564:4:10",
														"type": ""
													}
												],
												"src": "19398:419:10"
											},
											{
												"body": {
													"nativeSrc": "19949:206:10",
													"nodeType": "YulBlock",
													"src": "19949:206:10",
													"statements": [
														{
															"nativeSrc": "19959:26:10",
															"nodeType": "YulAssignment",
															"src": "19959:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19971:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19971:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19982:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19982:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19967:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19967:3:10"
																},
																"nativeSrc": "19967:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19967:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19959:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19959:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20039:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20039:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20052:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20052:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20063:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20063:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20048:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20048:3:10"
																		},
																		"nativeSrc": "20048:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20048:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19995:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19995:43:10"
																},
																"nativeSrc": "19995:71:10",
																"nodeType": "YulFunctionCall",
																"src": "19995:71:10"
															},
															"nativeSrc": "19995:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "19995:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20120:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20120:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20133:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20133:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20144:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20144:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20129:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20129:3:10"
																		},
																		"nativeSrc": "20129:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20129:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20076:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20076:43:10"
																},
																"nativeSrc": "20076:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20076:72:10"
															},
															"nativeSrc": "20076:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20076:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "19823:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19913:9:10",
														"nodeType": "YulTypedName",
														"src": "19913:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19925:6:10",
														"nodeType": "YulTypedName",
														"src": "19925:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19933:6:10",
														"nodeType": "YulTypedName",
														"src": "19933:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19944:4:10",
														"nodeType": "YulTypedName",
														"src": "19944:4:10",
														"type": ""
													}
												],
												"src": "19823:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$705(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$705(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$705(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$705(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ISwapRouter_$705(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$705(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$705(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$705_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$705_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$705_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$705__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$705_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not approved for swapping\")\n\n    }\n\n    function abi_encode_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input amount must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$629_memory_ptr_to_t_struct$_ExactInputSingleParams_$629_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$629_memory_ptr__to_t_struct$_ExactInputSingleParams_$629_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$629_memory_ptr_to_t_struct$_ExactInputSingleParams_$629_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDC is already the target token\")\n\n    }\n\n    function abi_encode_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token is not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid swap router address\")\n\n    }\n\n    function abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"726": [
									{
										"length": 32,
										"start": 1535
									},
									{
										"length": 32,
										"start": 2318
									},
									{
										"length": 32,
										"start": 2726
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806389a30271116100a0578063a217fddf1161006f578063a217fddf146102d9578063b98b677f146102f7578063c31c9c0714610313578063d547741f14610331578063dd1b9c4a1461034d57610109565b806389a302711461023f57806391d148541461025d578063933f4eef1461028d5780639d93d352146102a957610109565b806336568abe116100dc57806336568abe146101b95780636d1ea3fa146101d557806375b238fc1461020557806380b2edd81461022357610109565b806301ffc9a71461010d5780632197545c1461013d578063248a9ca31461016d5780632f2ff15d1461019d575b5f80fd5b61012760048036038101906101229190611149565b61036b565b604051610134919061118e565b60405180910390f35b61015760048036038101906101529190611234565b6103e4565b60405161016491906112a7565b60405180910390f35b610187600480360381019061018291906112f3565b6107e8565b604051610194919061132d565b60405180910390f35b6101b760048036038101906101b29190611346565b610804565b005b6101d360048036038101906101ce9190611346565b610826565b005b6101ef60048036038101906101ea9190611384565b6108a1565b6040516101fc919061118e565b60405180910390f35b61020d6108be565b60405161021a919061132d565b60405180910390f35b61023d60048036038101906102389190611384565b6108e2565b005b610247610aa4565b60405161025491906113be565b60405180910390f35b61027760048036038101906102729190611346565b610ac8565b604051610284919061118e565b60405180910390f35b6102a760048036038101906102a29190611384565b610b2b565b005b6102c360048036038101906102be9190611384565b610c79565b6040516102d0919061118e565b60405180910390f35b6102e1610ccb565b6040516102ee919061132d565b60405180910390f35b610311600480360381019061030c9190611412565b610cd1565b005b61031b610dad565b6040516103289190611498565b60405180910390f35b61034b60048036038101906103469190611346565b610dd2565b005b610355610df4565b60405161036291906114ce565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103dd57506103dc82610dfa565b5b9050919050565b5f6103ed610e63565b8460035f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e90611541565b60405180910390fd5b5f85116104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b0906115cf565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016104f6939291906115ed565b6020604051808303815f875af1158015610512573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610536919061164c565b508573ffffffffffffffffffffffffffffffffffffffff1663095ea7b360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b8152600401610593929190611677565b6020604051808303815f875af11580156105af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d3919061164c565b505f6040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018781526020018681526020015f73ffffffffffffffffffffffffffffffffffffffff16815250905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016106ea919061177a565b6020604051808303815f875af1158015610706573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072a91906117a8565b92508483101561076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061181d565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d6688866040516107ce92919061183b565b60405180910390a350506107e0610ea9565b949350505050565b5f805f8381526020019081526020015f20600101549050919050565b61080d826107e8565b61081681610eb2565b6108208383610ec6565b50505050565b61082e610faf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610892576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61089c8282610fb6565b505050565b6003602052805f5260405f205f915054906101000a900460ff1681565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561090c81610eb2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610991906118ac565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ff90611914565b60405180910390fd5b600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5f5916d70d5479c1795a9d461360dfa5c673bc37904c8ab4fcbdc970b9e90f3d60405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610b5581610eb2565b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd59061197c565b60405180910390fd5b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f45f62f30e7b8439e0da7d8e560fe39d01238091ce9e789e3d12b514edf98acea60405160405180910390a25050565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f801b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610cfb81610eb2565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d60906119e4565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ddb826107e8565b610de481610eb2565b610dee8383610fb6565b50505050565b610bb881565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600260015403610e9f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b610ec381610ebe610faf565b61109f565b50565b5f610ed18383610ac8565b610fa55760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610f42610faf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610fa9565b5f90505b92915050565b5f33905090565b5f610fc18383610ac8565b15611095575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611032610faf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611099565b5f90505b92915050565b6110a98282610ac8565b6110ec5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110e3929190611a02565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611128816110f4565b8114611132575f80fd5b50565b5f813590506111438161111f565b92915050565b5f6020828403121561115e5761115d6110f0565b5b5f61116b84828501611135565b91505092915050565b5f8115159050919050565b61118881611174565b82525050565b5f6020820190506111a15f83018461117f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111d0826111a7565b9050919050565b6111e0816111c6565b81146111ea575f80fd5b50565b5f813590506111fb816111d7565b92915050565b5f819050919050565b61121381611201565b811461121d575f80fd5b50565b5f8135905061122e8161120a565b92915050565b5f805f806080858703121561124c5761124b6110f0565b5b5f611259878288016111ed565b945050602061126a87828801611220565b935050604061127b87828801611220565b925050606061128c87828801611220565b91505092959194509250565b6112a181611201565b82525050565b5f6020820190506112ba5f830184611298565b92915050565b5f819050919050565b6112d2816112c0565b81146112dc575f80fd5b50565b5f813590506112ed816112c9565b92915050565b5f60208284031215611308576113076110f0565b5b5f611315848285016112df565b91505092915050565b611327816112c0565b82525050565b5f6020820190506113405f83018461131e565b92915050565b5f806040838503121561135c5761135b6110f0565b5b5f611369858286016112df565b925050602061137a858286016111ed565b9150509250929050565b5f60208284031215611399576113986110f0565b5b5f6113a6848285016111ed565b91505092915050565b6113b8816111c6565b82525050565b5f6020820190506113d15f8301846113af565b92915050565b5f6113e1826111c6565b9050919050565b6113f1816113d7565b81146113fb575f80fd5b50565b5f8135905061140c816113e8565b92915050565b5f60208284031215611427576114266110f0565b5b5f611434848285016113fe565b91505092915050565b5f819050919050565b5f61146061145b611456846111a7565b61143d565b6111a7565b9050919050565b5f61147182611446565b9050919050565b5f61148282611467565b9050919050565b61149281611478565b82525050565b5f6020820190506114ab5f830184611489565b92915050565b5f62ffffff82169050919050565b6114c8816114b1565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420617070726f76656420666f72207377617070696e67005f82015250565b5f61152b601f836114e7565b9150611536826114f7565b602082019050919050565b5f6020820190508181035f8301526115588161151f565b9050919050565b7f496e70757420616d6f756e74206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f6115b96026836114e7565b91506115c48261155f565b604082019050919050565b5f6020820190508181035f8301526115e6816115ad565b9050919050565b5f6060820190506116005f8301866113af565b61160d60208301856113af565b61161a6040830184611298565b949350505050565b61162b81611174565b8114611635575f80fd5b50565b5f8151905061164681611622565b92915050565b5f60208284031215611661576116606110f0565b5b5f61166e84828501611638565b91505092915050565b5f60408201905061168a5f8301856113af565b6116976020830184611298565b9392505050565b6116a7816111c6565b82525050565b6116b6816114b1565b82525050565b6116c581611201565b82525050565b6116d4816111a7565b82525050565b61010082015f8201516116ef5f85018261169e565b506020820151611702602085018261169e565b50604082015161171560408501826116ad565b506060820151611728606085018261169e565b50608082015161173b60808501826116bc565b5060a082015161174e60a08501826116bc565b5060c082015161176160c08501826116bc565b5060e082015161177460e08501826116cb565b50505050565b5f6101008201905061178e5f8301846116da565b92915050565b5f815190506117a28161120a565b92915050565b5f602082840312156117bd576117bc6110f0565b5b5f6117ca84828501611794565b91505092915050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f611807601a836114e7565b9150611812826117d3565b602082019050919050565b5f6020820190508181035f830152611834816117fb565b9050919050565b5f60408201905061184e5f830185611298565b61185b6020830184611298565b9392505050565b7f5553444320697320616c7265616479207468652074617267657420746f6b656e5f82015250565b5f6118966020836114e7565b91506118a182611862565b602082019050919050565b5f6020820190508181035f8301526118c38161188a565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6118fe6015836114e7565b9150611909826118ca565b602082019050919050565b5f6020820190508181035f83015261192b816118f2565b9050919050565b7f546f6b656e206973206e6f7420617070726f76656400000000000000000000005f82015250565b5f6119666015836114e7565b915061197182611932565b602082019050919050565b5f6020820190508181035f8301526119938161195a565b9050919050565b7f496e76616c6964207377617020726f75746572206164647265737300000000005f82015250565b5f6119ce601b836114e7565b91506119d98261199a565b602082019050919050565b5f6020820190508181035f8301526119fb816119c2565b9050919050565b5f604082019050611a155f8301856113af565b611a22602083018461131e565b939250505056fea2646970667358221220670e813ce75eb630d7eb2b6111b20c6443ffc10e9b1a03956ec997cc31e68c0864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A30271 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xB98B677F EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xDD1B9C4A EQ PUSH2 0x34D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x89A30271 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x933F4EEF EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x9D93D352 EQ PUSH2 0x2A9 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x6D1EA3FA EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x80B2EDD8 EQ PUSH2 0x223 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x2197545C EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x19D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3DD JUMPI POP PUSH2 0x3DC DUP3 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3ED PUSH2 0xE63 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP3 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x706 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST SWAP3 POP DUP5 DUP4 LT ISZERO PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x766 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7CE SWAP3 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x7E0 PUSH2 0xEA9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80D DUP3 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x816 DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x820 DUP4 DUP4 PUSH2 0xEC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x82E PUSH2 0xFAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x89C DUP3 DUP3 PUSH2 0xFB6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x90C DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x991 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5F5916D70D5479C1795A9D461360DFA5C673BC37904C8AB4FCBDC970B9E90F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xB55 DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD5 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45F62F30E7B8439E0DA7D8E560FE39D01238091CE9E789E3D12B514EDF98ACEA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xCFB DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xDDB DUP3 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0xDEE DUP4 DUP4 PUSH2 0xFB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xEC3 DUP2 PUSH2 0xEBE PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xED1 DUP4 DUP4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xFA5 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF42 PUSH2 0xFAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFA9 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFC1 DUP4 DUP4 PUSH2 0xAC8 JUMP JUMPDEST ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1032 PUSH2 0xFAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1099 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A9 DUP3 DUP3 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x10EC JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x10F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1132 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1143 DUP2 PUSH2 0x111F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x116B DUP5 DUP3 DUP6 ADD PUSH2 0x1135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 DUP2 PUSH2 0x1174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D0 DUP3 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E0 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x11EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FB DUP2 PUSH2 0x11D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1213 DUP2 PUSH2 0x1201 JUMP JUMPDEST DUP2 EQ PUSH2 0x121D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x122E DUP2 PUSH2 0x120A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1259 DUP8 DUP3 DUP9 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x126A DUP8 DUP3 DUP9 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x127B DUP8 DUP3 DUP9 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x128C DUP8 DUP3 DUP9 ADD PUSH2 0x1220 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x12A1 DUP2 PUSH2 0x1201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D2 DUP2 PUSH2 0x12C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x12DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12ED DUP2 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1315 DUP5 DUP3 DUP6 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1327 DUP2 PUSH2 0x12C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1340 PUSH0 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1369 DUP6 DUP3 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x137A DUP6 DUP3 DUP7 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1398 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13A6 DUP5 DUP3 DUP6 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B8 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x13AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP3 PUSH2 0x11C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x13D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140C DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1434 DUP5 DUP3 DUP6 ADD PUSH2 0x13FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1460 PUSH2 0x145B PUSH2 0x1456 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x143D JUMP JUMPDEST PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1471 DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1482 DUP3 PUSH2 0x1467 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x1478 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14AB PUSH0 DUP4 ADD DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420617070726F76656420666F72207377617070696E6700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x152B PUSH1 0x1F DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1536 DUP3 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1558 DUP2 PUSH2 0x151F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E70757420616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15B9 PUSH1 0x26 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C4 DUP3 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15E6 DUP2 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1600 PUSH0 DUP4 ADD DUP7 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x160D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x161A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x162B DUP2 PUSH2 0x1174 JUMP JUMPDEST DUP2 EQ PUSH2 0x1635 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1646 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x168A PUSH0 DUP4 ADD DUP6 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1697 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B6 DUP2 PUSH2 0x14B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16C5 DUP2 PUSH2 0x1201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16D4 DUP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16EF PUSH0 DUP6 ADD DUP3 PUSH2 0x169E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1702 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x169E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1715 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x16AD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1728 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x169E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x173B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x16BC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x174E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x16BC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1761 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x16BC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1774 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x16CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x178E PUSH0 DUP4 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17A2 DUP2 PUSH2 0x120A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BD JUMPI PUSH2 0x17BC PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17CA DUP5 DUP3 DUP6 ADD PUSH2 0x1794 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1807 PUSH1 0x1A DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1812 DUP3 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1834 DUP2 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x184E PUSH0 DUP4 ADD DUP6 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x185B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5553444320697320616C7265616479207468652074617267657420746F6B656E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1896 PUSH1 0x20 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A1 DUP3 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C3 DUP2 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18FE PUSH1 0x15 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP3 PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x192B DUP2 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F7420617070726F7665640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1966 PUSH1 0x15 DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1971 DUP3 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1993 DUP2 PUSH2 0x195A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207377617020726F7574657220616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19CE PUSH1 0x1B DUP4 PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D9 DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19FB DUP2 PUSH2 0x19C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A15 PUSH0 DUP4 ADD DUP6 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1A22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x131E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xE813CE75EB630D7 0xEB 0x2B PUSH2 0x11B2 0xC PUSH5 0x43FFC10E9B BYTE SUB SWAP6 PUSH15 0xC997CC31E68C0864736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "484:5114:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4080:1117:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;898:46:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;610:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2589:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;789:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:211:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5465:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3342:206:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1005:38:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;4080:1117:9:-;4313:17;2500:21:4;:19;:21::i;:::-;4284:10:9::1;2306:14;:21;2321:5;2306:21;;;;;;;;;;;;;;;;;;;;;;;;;2298:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4365:1:::2;4354:8;:12;4346:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4427:10;4420:31;;;4452:10;4472:4;4479:8;4420:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4505:10;4498:26;;;4533:10;;;;;;;;;;;4546:8;4498:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4566:48;4629:351;;;;;;;;4691:10;4629:351;;;;;;4729:4;4629:351;;;;;;1039:4;4629:351;;;;;;4793:10;4629:351;;;;;;4831:8;4629:351;;;;4867:8;4629:351;;;;4911:16;4629:351;;;;4964:1;4629:351;;;;::::0;4566:414:::2;;5003:10;;;;;;;;;;;:27;;;5031:6;5003:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4991:47;;5070:16;5057:9;:29;;5049:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5158:10;5133:57;;5146:10;5133:57;;;5170:8;5180:9;5133:57;;;;;;;:::i;:::-;;;;;;;;4336:861;2531:1:4::1;2542:20:::0;:18;:20::i;:::-;4080:1117:9;;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;898:46:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;610:60::-;647:23;610:60;:::o;2589:278::-;647:23;2464:16:0;2475:4;2464:10;:16::i;:::-;2683:4:9::1;2674:13;;:5;:13;;::::0;2666:58:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2759:1;2742:19;;:5;:19;;::::0;2734:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2821:4;2797:14;:21;2812:5;2797:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2854:5;2840:20;;;;;;;;;;;;2589:278:::0;;:::o;789:29::-;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;3002:211:9:-;647:23;2464:16:0;2475:4;2464:10;:16::i;:::-;3086:14:9::1;:21;3101:5;3086:21;;;;;;;;;;;;;;;;;;;;;;;;;3078:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3167:5;3143:14;:21;3158:5;3143:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3200:5;3187:19;;;;;;;;;;;;3002:211:::0;;:::o;5465:131::-;5528:15;5568:14;:21;5583:5;5568:21;;;;;;;;;;;;;;;;;;;;;;;;;5555:34;;5465:131;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3342:206:9:-;647:23;2464:16:0;2475:4;2464:10;:16::i;:::-;3473:1:9::1;3441:34;;3449:11;3441:34;;::::0;3433:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3530:11;3517:10;;:24;;;;;;;;;;;;;;;;;;3342:206:::0;;:::o;754:29::-;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;1005:38:9:-;1039:4;1005:38;:::o;763:146:5:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;2575:307:4:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;2888:208::-;1857:1;3068:7;:21;;;;2888:208::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:10:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:765::-;2467:6;2475;2483;2491;2540:3;2528:9;2519:7;2515:23;2511:33;2508:120;;;2547:79;;:::i;:::-;2508:120;2667:1;2692:53;2737:7;2728:6;2717:9;2713:22;2692:53;:::i;:::-;2682:63;;2638:117;2794:2;2820:53;2865:7;2856:6;2845:9;2841:22;2820:53;:::i;:::-;2810:63;;2765:118;2922:2;2948:53;2993:7;2984:6;2973:9;2969:22;2948:53;:::i;:::-;2938:63;;2893:118;3050:2;3076:53;3121:7;3112:6;3101:9;3097:22;3076:53;:::i;:::-;3066:63;;3021:118;2381:765;;;;;;;:::o;3152:118::-;3239:24;3257:5;3239:24;:::i;:::-;3234:3;3227:37;3152:118;;:::o;3276:222::-;3369:4;3407:2;3396:9;3392:18;3384:26;;3420:71;3488:1;3477:9;3473:17;3464:6;3420:71;:::i;:::-;3276:222;;;;:::o;3504:77::-;3541:7;3570:5;3559:16;;3504:77;;;:::o;3587:122::-;3660:24;3678:5;3660:24;:::i;:::-;3653:5;3650:35;3640:63;;3699:1;3696;3689:12;3640:63;3587:122;:::o;3715:139::-;3761:5;3799:6;3786:20;3777:29;;3815:33;3842:5;3815:33;:::i;:::-;3715:139;;;;:::o;3860:329::-;3919:6;3968:2;3956:9;3947:7;3943:23;3939:32;3936:119;;;3974:79;;:::i;:::-;3936:119;4094:1;4119:53;4164:7;4155:6;4144:9;4140:22;4119:53;:::i;:::-;4109:63;;4065:117;3860:329;;;;:::o;4195:118::-;4282:24;4300:5;4282:24;:::i;:::-;4277:3;4270:37;4195:118;;:::o;4319:222::-;4412:4;4450:2;4439:9;4435:18;4427:26;;4463:71;4531:1;4520:9;4516:17;4507:6;4463:71;:::i;:::-;4319:222;;;;:::o;4547:474::-;4615:6;4623;4672:2;4660:9;4651:7;4647:23;4643:32;4640:119;;;4678:79;;:::i;:::-;4640:119;4798:1;4823:53;4868:7;4859:6;4848:9;4844:22;4823:53;:::i;:::-;4813:63;;4769:117;4925:2;4951:53;4996:7;4987:6;4976:9;4972:22;4951:53;:::i;:::-;4941:63;;4896:118;4547:474;;;;;:::o;5027:329::-;5086:6;5135:2;5123:9;5114:7;5110:23;5106:32;5103:119;;;5141:79;;:::i;:::-;5103:119;5261:1;5286:53;5331:7;5322:6;5311:9;5307:22;5286:53;:::i;:::-;5276:63;;5232:117;5027:329;;;;:::o;5362:118::-;5449:24;5467:5;5449:24;:::i;:::-;5444:3;5437:37;5362:118;;:::o;5486:222::-;5579:4;5617:2;5606:9;5602:18;5594:26;;5630:71;5698:1;5687:9;5683:17;5674:6;5630:71;:::i;:::-;5486:222;;;;:::o;5714:115::-;5770:7;5799:24;5817:5;5799:24;:::i;:::-;5788:35;;5714:115;;;:::o;5835:160::-;5927:43;5964:5;5927:43;:::i;:::-;5920:5;5917:54;5907:82;;5985:1;5982;5975:12;5907:82;5835:160;:::o;6001:177::-;6066:5;6104:6;6091:20;6082:29;;6120:52;6166:5;6120:52;:::i;:::-;6001:177;;;;:::o;6184:367::-;6262:6;6311:2;6299:9;6290:7;6286:23;6282:32;6279:119;;;6317:79;;:::i;:::-;6279:119;6437:1;6462:72;6526:7;6517:6;6506:9;6502:22;6462:72;:::i;:::-;6452:82;;6408:136;6184:367;;;;:::o;6557:60::-;6585:3;6606:5;6599:12;;6557:60;;;:::o;6623:142::-;6673:9;6706:53;6724:34;6733:24;6751:5;6733:24;:::i;:::-;6724:34;:::i;:::-;6706:53;:::i;:::-;6693:66;;6623:142;;;:::o;6771:126::-;6821:9;6854:37;6885:5;6854:37;:::i;:::-;6841:50;;6771:126;;;:::o;6903:145::-;6972:9;7005:37;7036:5;7005:37;:::i;:::-;6992:50;;6903:145;;;:::o;7054:169::-;7160:56;7210:5;7160:56;:::i;:::-;7155:3;7148:69;7054:169;;:::o;7229:260::-;7341:4;7379:2;7368:9;7364:18;7356:26;;7392:90;7479:1;7468:9;7464:17;7455:6;7392:90;:::i;:::-;7229:260;;;;:::o;7495:91::-;7531:7;7571:8;7564:5;7560:20;7549:31;;7495:91;;;:::o;7592:115::-;7677:23;7694:5;7677:23;:::i;:::-;7672:3;7665:36;7592:115;;:::o;7713:218::-;7804:4;7842:2;7831:9;7827:18;7819:26;;7855:69;7921:1;7910:9;7906:17;7897:6;7855:69;:::i;:::-;7713:218;;;;:::o;7937:169::-;8021:11;8055:6;8050:3;8043:19;8095:4;8090:3;8086:14;8071:29;;7937:169;;;;:::o;8112:181::-;8252:33;8248:1;8240:6;8236:14;8229:57;8112:181;:::o;8299:366::-;8441:3;8462:67;8526:2;8521:3;8462:67;:::i;:::-;8455:74;;8538:93;8627:3;8538:93;:::i;:::-;8656:2;8651:3;8647:12;8640:19;;8299:366;;;:::o;8671:419::-;8837:4;8875:2;8864:9;8860:18;8852:26;;8924:9;8918:4;8914:20;8910:1;8899:9;8895:17;8888:47;8952:131;9078:4;8952:131;:::i;:::-;8944:139;;8671:419;;;:::o;9096:225::-;9236:34;9232:1;9224:6;9220:14;9213:58;9305:8;9300:2;9292:6;9288:15;9281:33;9096:225;:::o;9327:366::-;9469:3;9490:67;9554:2;9549:3;9490:67;:::i;:::-;9483:74;;9566:93;9655:3;9566:93;:::i;:::-;9684:2;9679:3;9675:12;9668:19;;9327:366;;;:::o;9699:419::-;9865:4;9903:2;9892:9;9888:18;9880:26;;9952:9;9946:4;9942:20;9938:1;9927:9;9923:17;9916:47;9980:131;10106:4;9980:131;:::i;:::-;9972:139;;9699:419;;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:116::-;10642:21;10657:5;10642:21;:::i;:::-;10635:5;10632:32;10622:60;;10678:1;10675;10668:12;10622:60;10572:116;:::o;10694:137::-;10748:5;10779:6;10773:13;10764:22;;10795:30;10819:5;10795:30;:::i;:::-;10694:137;;;;:::o;10837:345::-;10904:6;10953:2;10941:9;10932:7;10928:23;10924:32;10921:119;;;10959:79;;:::i;:::-;10921:119;11079:1;11104:61;11157:7;11148:6;11137:9;11133:22;11104:61;:::i;:::-;11094:71;;11050:125;10837:345;;;;:::o;11188:332::-;11309:4;11347:2;11336:9;11332:18;11324:26;;11360:71;11428:1;11417:9;11413:17;11404:6;11360:71;:::i;:::-;11441:72;11509:2;11498:9;11494:18;11485:6;11441:72;:::i;:::-;11188:332;;;;;:::o;11526:108::-;11603:24;11621:5;11603:24;:::i;:::-;11598:3;11591:37;11526:108;;:::o;11640:105::-;11715:23;11732:5;11715:23;:::i;:::-;11710:3;11703:36;11640:105;;:::o;11751:108::-;11828:24;11846:5;11828:24;:::i;:::-;11823:3;11816:37;11751:108;;:::o;11865:::-;11942:24;11960:5;11942:24;:::i;:::-;11937:3;11930:37;11865:108;;:::o;12073:1623::-;12248:6;12243:3;12239:16;12340:4;12333:5;12329:16;12323:23;12359:63;12416:4;12411:3;12407:14;12393:12;12359:63;:::i;:::-;12265:167;12518:4;12511:5;12507:16;12501:23;12537:63;12594:4;12589:3;12585:14;12571:12;12537:63;:::i;:::-;12442:168;12691:4;12684:5;12680:16;12674:23;12710:61;12765:4;12760:3;12756:14;12742:12;12710:61;:::i;:::-;12620:161;12868:4;12861:5;12857:16;12851:23;12887:63;12944:4;12939:3;12935:14;12921:12;12887:63;:::i;:::-;12791:169;13046:4;13039:5;13035:16;13029:23;13065:63;13122:4;13117:3;13113:14;13099:12;13065:63;:::i;:::-;12970:168;13224:4;13217:5;13213:16;13207:23;13243:63;13300:4;13295:3;13291:14;13277:12;13243:63;:::i;:::-;13148:168;13410:4;13403:5;13399:16;13393:23;13429:63;13486:4;13481:3;13477:14;13463:12;13429:63;:::i;:::-;13326:176;13597:4;13590:5;13586:16;13580:23;13616:63;13673:4;13668:3;13664:14;13650:12;13616:63;:::i;:::-;13512:177;12217:1479;12073:1623;;:::o;13702:379::-;13873:4;13911:3;13900:9;13896:19;13888:27;;13925:149;14071:1;14060:9;14056:17;14047:6;13925:149;:::i;:::-;13702:379;;;;:::o;14087:143::-;14144:5;14175:6;14169:13;14160:22;;14191:33;14218:5;14191:33;:::i;:::-;14087:143;;;;:::o;14236:351::-;14306:6;14355:2;14343:9;14334:7;14330:23;14326:32;14323:119;;;14361:79;;:::i;:::-;14323:119;14481:1;14506:64;14562:7;14553:6;14542:9;14538:22;14506:64;:::i;:::-;14496:74;;14452:128;14236:351;;;;:::o;14593:176::-;14733:28;14729:1;14721:6;14717:14;14710:52;14593:176;:::o;14775:366::-;14917:3;14938:67;15002:2;14997:3;14938:67;:::i;:::-;14931:74;;15014:93;15103:3;15014:93;:::i;:::-;15132:2;15127:3;15123:12;15116:19;;14775:366;;;:::o;15147:419::-;15313:4;15351:2;15340:9;15336:18;15328:26;;15400:9;15394:4;15390:20;15386:1;15375:9;15371:17;15364:47;15428:131;15554:4;15428:131;:::i;:::-;15420:139;;15147:419;;;:::o;15572:332::-;15693:4;15731:2;15720:9;15716:18;15708:26;;15744:71;15812:1;15801:9;15797:17;15788:6;15744:71;:::i;:::-;15825:72;15893:2;15882:9;15878:18;15869:6;15825:72;:::i;:::-;15572:332;;;;;:::o;15910:182::-;16050:34;16046:1;16038:6;16034:14;16027:58;15910:182;:::o;16098:366::-;16240:3;16261:67;16325:2;16320:3;16261:67;:::i;:::-;16254:74;;16337:93;16426:3;16337:93;:::i;:::-;16455:2;16450:3;16446:12;16439:19;;16098:366;;;:::o;16470:419::-;16636:4;16674:2;16663:9;16659:18;16651:26;;16723:9;16717:4;16713:20;16709:1;16698:9;16694:17;16687:47;16751:131;16877:4;16751:131;:::i;:::-;16743:139;;16470:419;;;:::o;16895:171::-;17035:23;17031:1;17023:6;17019:14;17012:47;16895:171;:::o;17072:366::-;17214:3;17235:67;17299:2;17294:3;17235:67;:::i;:::-;17228:74;;17311:93;17400:3;17311:93;:::i;:::-;17429:2;17424:3;17420:12;17413:19;;17072:366;;;:::o;17444:419::-;17610:4;17648:2;17637:9;17633:18;17625:26;;17697:9;17691:4;17687:20;17683:1;17672:9;17668:17;17661:47;17725:131;17851:4;17725:131;:::i;:::-;17717:139;;17444:419;;;:::o;17869:171::-;18009:23;18005:1;17997:6;17993:14;17986:47;17869:171;:::o;18046:366::-;18188:3;18209:67;18273:2;18268:3;18209:67;:::i;:::-;18202:74;;18285:93;18374:3;18285:93;:::i;:::-;18403:2;18398:3;18394:12;18387:19;;18046:366;;;:::o;18418:419::-;18584:4;18622:2;18611:9;18607:18;18599:26;;18671:9;18665:4;18661:20;18657:1;18646:9;18642:17;18635:47;18699:131;18825:4;18699:131;:::i;:::-;18691:139;;18418:419;;;:::o;18843:177::-;18983:29;18979:1;18971:6;18967:14;18960:53;18843:177;:::o;19026:366::-;19168:3;19189:67;19253:2;19248:3;19189:67;:::i;:::-;19182:74;;19265:93;19354:3;19265:93;:::i;:::-;19383:2;19378:3;19374:12;19367:19;;19026:366;;;:::o;19398:419::-;19564:4;19602:2;19591:9;19587:18;19579:26;;19651:9;19645:4;19641:20;19637:1;19626:9;19622:17;19615:47;19679:131;19805:4;19679:131;:::i;:::-;19671:139;;19398:419;;;:::o;19823:332::-;19944:4;19982:2;19971:9;19967:18;19959:26;;19995:71;20063:1;20052:9;20048:17;20039:6;19995:71;:::i;:::-;20076:72;20144:2;20133:9;20129:18;20120:6;20076:72;:::i;:::-;19823:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1350200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "392",
								"DEFAULT_ADMIN_ROLE()": "352",
								"POOL_FEE()": "441",
								"USDC()": "infinite",
								"approveToken(address)": "infinite",
								"approvedTokens(address)": "2878",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"isTokenApproved(address)": "2959",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"revokeToken(address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"swapRouter()": "infinite",
								"swapToUSDC(address,uint256,uint256,uint256)": "infinite",
								"updateSwapRouter(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1680,
									"end": 2039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1758,
									"end": 1769,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1784,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1742,
									"end": 1816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1742,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1851,
									"end": 1852,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1834,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1834,
									"end": 1853,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1839,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1834,
									"end": 1853,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1853,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1826,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1826,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1902,
									"end": 1913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1899,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1889,
									"end": 1899,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1930,
									"end": 1935,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 1975,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1975,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1977,
									"end": 1987,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1946,
									"end": 1956,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1956,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1988,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1988,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1988,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1946,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1988,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 670,
									"name": "PUSH",
									"source": 9,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2021,
									"end": 2031,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1998,
									"end": 2008,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1998,
									"end": 2008,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2032,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1998,
									"end": 2032,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2032,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1998,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2032,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 2039,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1133,
									"end": 1138,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1115,
									"end": 1139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1115,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1140,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1154,
									"end": 1155,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1156,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1095,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1042,
									"end": 1164,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1042,
									"end": 1164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1264,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1252,
									"end": 1265,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1301,
									"end": 1306,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1274,
									"end": 1307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1274,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1313,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1425,
									"end": 1431,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1476,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1471,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1453,
									"end": 1460,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1449,
									"end": 1472,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1445,
									"end": 1477,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1480,
									"end": 1559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1480,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1442,
									"end": 1561,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1697,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1689,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1676,
									"end": 1698,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1625,
									"end": 1708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1625,
									"end": 1708,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1708,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1708,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1571,
									"end": 1718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1759,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1839,
									"end": 1846,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1836,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1819,
									"end": 1828,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1815,
									"end": 1837,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1783,
									"end": 1847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1783,
									"end": 1847,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1847,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1847,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 1857,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 2039,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1870,
									"end": 2039,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1954,
									"end": 1965,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1988,
									"end": 1994,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1983,
									"end": 1986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 1995,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2028,
									"end": 2032,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2023,
									"end": 2026,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2019,
									"end": 2033,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2004,
									"end": 2033,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2004,
									"end": 2033,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 2039,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 2039,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 2039,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 2039,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 2039,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2222,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2045,
									"end": 2222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2185,
									"end": 2214,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964207377617020726F7574657220616464726573730000000000"
								},
								{
									"begin": 2181,
									"end": 2182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2173,
									"end": 2179,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2169,
									"end": 2183,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2215,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2594,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2228,
									"end": 2594,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2391,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2455,
									"end": 2457,
									"name": "PUSH",
									"source": 10,
									"value": "1B"
								},
								{
									"begin": 2450,
									"end": 2453,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2391,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2391,
									"end": 2458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2391,
									"end": 2458,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2391,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2458,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2556,
									"end": 2559,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2467,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2560,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2467,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2585,
									"end": 2587,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2580,
									"end": 2583,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2576,
									"end": 2588,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2569,
									"end": 2588,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2569,
									"end": 2588,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2594,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2594,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2594,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2594,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 3019,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2600,
									"end": 3019,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2766,
									"end": 2770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2804,
									"end": 2806,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2793,
									"end": 2802,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 2807,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2807,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2807,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2853,
									"end": 2862,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2847,
									"end": 2851,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2843,
									"end": 2863,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2828,
									"end": 2837,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2824,
									"end": 2841,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2864,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2881,
									"end": 3012,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3007,
									"end": 3011,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2881,
									"end": 3012,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2881,
									"end": 3012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2881,
									"end": 3012,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2881,
									"end": 3012,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2873,
									"end": 3012,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2873,
									"end": 3012,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 3019,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 3019,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 3019,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 3019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3025,
									"end": 3195,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3025,
									"end": 3195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420555344432061646472657373000000000000000000000000"
								},
								{
									"begin": 3161,
									"end": 3162,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3149,
									"end": 3163,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3142,
									"end": 3188,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3025,
									"end": 3195,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3025,
									"end": 3195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3567,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3201,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3343,
									"end": 3346,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3428,
									"end": 3430,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3423,
									"end": 3426,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3364,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3364,
									"end": 3431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3364,
									"end": 3431,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3364,
									"end": 3431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3357,
									"end": 3431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3357,
									"end": 3431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3440,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3529,
									"end": 3532,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3440,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3440,
									"end": 3533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3440,
									"end": 3533,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3440,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3560,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3553,
									"end": 3556,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3561,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3561,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3561,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3567,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3992,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3573,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3777,
									"end": 3779,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3766,
									"end": 3775,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3762,
									"end": 3780,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3754,
									"end": 3780,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3754,
									"end": 3780,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3826,
									"end": 3835,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3820,
									"end": 3824,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3816,
									"end": 3836,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3812,
									"end": 3813,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3810,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3797,
									"end": 3814,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3790,
									"end": 3837,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3854,
									"end": 3985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 3980,
									"end": 3984,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3854,
									"end": 3985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3854,
									"end": 3985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3854,
									"end": 3985,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 3854,
									"end": 3985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3985,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3985,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3992,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3992,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "726"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 5598,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220670e813ce75eb630d7eb2b6111b20c6443ffc10e9b1a03956ec997cc31e68c0864736f6c634300081a0033",
									".code": [
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "89A30271"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "B98B677F"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "C31C9C07"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "DD1B9C4A"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "89A30271"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "933F4EEF"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "9D93D352"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "6D1EA3FA"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "75B238FC"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "80B2EDD8"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "2197545C"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 484,
											"end": 5598,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4080,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4080,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4080,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 898,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 898,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 898,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 610,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2589,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2589,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 789,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 789,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5465,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5465,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5465,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3342,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3342,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 754,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 754,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1005,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1005,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4313,
											"end": 4330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2306,
											"end": 2327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2298,
											"end": 2363,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2298,
											"end": 2363,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4362,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4366,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4346,
											"end": 4409,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4346,
											"end": 4409,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4427,
											"end": 4437,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4451,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4451,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4451,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 4452,
											"end": 4462,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4476,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4487,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4420,
											"end": 4488,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4488,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4420,
											"end": 4488,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4515,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4498,
											"end": 4524,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4554,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4498,
											"end": 4555,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4498,
											"end": 4555,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4555,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4701,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4733,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "726"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4803,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4839,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4875,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4927,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4980,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5013,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5030,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "414BF389"
										},
										{
											"begin": 5031,
											"end": 5037,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 5003,
											"end": 5038,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5003,
											"end": 5038,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5003,
											"end": 5038,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4991,
											"end": 5038,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4991,
											"end": 5038,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5086,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5057,
											"end": 5066,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5057,
											"end": 5086,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5057,
											"end": 5086,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5049,
											"end": 5117,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5049,
											"end": 5117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5168,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5156,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66"
										},
										{
											"begin": 5170,
											"end": 5178,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5189,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5133,
											"end": 5190,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 5197,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 5197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 944,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 898,
											"end": 944,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 898,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 610,
											"end": 670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 610,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "726"
										},
										{
											"begin": 2674,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2679,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2687,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2666,
											"end": 2724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2666,
											"end": 2724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2742,
											"end": 2761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2742,
											"end": 2761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2734,
											"end": 2787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2734,
											"end": 2787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2797,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2817,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5F5916D70D5479C1795A9D461360DFA5C673BC37904C8AB4FCBDC970B9E90F3D"
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2860,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "726"
										},
										{
											"begin": 789,
											"end": 818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 789,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3106,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3078,
											"end": 3133,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3078,
											"end": 3133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3163,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3172,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "45F62F30E7B8439E0DA7D8E560FE39D01238091CE9E789E3D12B514EDF98ACEA"
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3206,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5528,
											"end": 5543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5555,
											"end": 5589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5555,
											"end": 5589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3460,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3433,
											"end": 3507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3433,
											"end": 3507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3517,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 754,
											"end": 783,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 754,
											"end": 783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2497,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2543,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2526,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2515,
											"end": 2538,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2544,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2547,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2692,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2796,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2820,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 2990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2948,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3001,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 3001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3121,
											"end": 3128,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3076,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3270,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3152,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3257,
											"end": 3262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3239,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3263,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3239,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3227,
											"end": 3264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3498,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3276,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3409,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3486,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3420,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3491,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3420,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3498,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3581,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3504,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3709,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3587,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3678,
											"end": 3683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3660,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3660,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3685,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3640,
											"end": 3703,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3697,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3701,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3703,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3640,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3854,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3715,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3806,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3842,
											"end": 3847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3815,
											"end": 3848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4189,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3860,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3966,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 4055,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3936,
											"end": 4055,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3974,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3974,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4053,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3974,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 4055,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3936,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4119,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4189,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4313,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4195,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4282,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4306,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4282,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4541,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4531,
											"end": 4532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4516,
											"end": 4533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4463,
											"end": 4534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4534,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4463,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4541,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4674,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4669,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4658,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4647,
											"end": 4670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4643,
											"end": 4675,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4640,
											"end": 4759,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4678,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4678,
											"end": 4757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4757,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4678,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4759,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4640,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4868,
											"end": 4875,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4859,
											"end": 4865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4857,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4823,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 4876,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4823,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4876,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4996,
											"end": 5003,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4976,
											"end": 4985,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4951,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5004,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4951,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 5004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 5004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5356,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5027,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5121,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5138,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5222,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5103,
											"end": 5222,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5141,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5222,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5103,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5261,
											"end": 5262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5331,
											"end": 5338,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 5286,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5480,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5362,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5467,
											"end": 5472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5449,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5473,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5449,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5444,
											"end": 5447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5708,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5486,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5680,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5630,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5630,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5708,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5829,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5714,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5799,
											"end": 5823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5995,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5835,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5964,
											"end": 5969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5927,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5970,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5927,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5971,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5907,
											"end": 5989,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5989,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5907,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6178,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6001,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6111,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6166,
											"end": 6171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 6120,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6172,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6120,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6178,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6551,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 6184,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6297,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6309,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6314,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6398,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6279,
											"end": 6398,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6317,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6317,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6317,
											"end": 6396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6317,
											"end": 6396,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6317,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6398,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6279,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 6526,
											"end": 6533,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6515,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6462,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6452,
											"end": 6534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6452,
											"end": 6534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6551,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6623,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6724,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6733,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 6751,
											"end": 6756,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6733,
											"end": 6757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6757,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 6733,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6724,
											"end": 6758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6758,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6724,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6706,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 6759,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6706,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6693,
											"end": 6759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6693,
											"end": 6759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6897,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6771,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6821,
											"end": 6830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 6885,
											"end": 6890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6854,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6891,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 6854,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 7048,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6903,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 6981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7036,
											"end": 7041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7005,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7005,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7005,
											"end": 7042,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7005,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 7048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 7048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 7048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 7048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7223,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 7054,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7160,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7210,
											"end": 7215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7160,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 7160,
											"end": 7216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7160,
											"end": 7216,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7160,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7489,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7229,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7341,
											"end": 7345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7464,
											"end": 7481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 7392,
											"end": 7482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7482,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 7392,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7586,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7495,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7579,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFF"
										},
										{
											"begin": 7564,
											"end": 7569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7707,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 7592,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7694,
											"end": 7699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7677,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7700,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7677,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7931,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7713,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7831,
											"end": 7840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 7845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 7845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 7855,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7924,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7855,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 8106,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7937,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8021,
											"end": 8032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8043,
											"end": 8062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8095,
											"end": 8099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 8106,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 8106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 8106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 8106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 8106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8293,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 8112,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8252,
											"end": 8285,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E206E6F7420617070726F76656420666F72207377617070696E6700"
										},
										{
											"begin": 8248,
											"end": 8249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8236,
											"end": 8250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8229,
											"end": 8286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8441,
											"end": 8444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8521,
											"end": 8524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 8462,
											"end": 8529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8455,
											"end": 8529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8455,
											"end": 8529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 8627,
											"end": 8630,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 8538,
											"end": 8631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8651,
											"end": 8654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8647,
											"end": 8659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8640,
											"end": 8659,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8640,
											"end": 8659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8837,
											"end": 8841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8924,
											"end": 8933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8888,
											"end": 8935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 8952,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9321,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 9096,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9236,
											"end": 9270,
											"name": "PUSH",
											"source": 10,
											"value": "496E70757420616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9220,
											"end": 9234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9305,
											"end": 9313,
											"name": "PUSH",
											"source": 10,
											"value": "6E207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9300,
											"end": 9302,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9288,
											"end": 9303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9693,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 9327,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9469,
											"end": 9472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9490,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 9554,
											"end": 9556,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 9549,
											"end": 9552,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9490,
											"end": 9557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9557,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 9490,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9483,
											"end": 9557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9483,
											"end": 9557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 9655,
											"end": 9658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 9566,
											"end": 9659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9659,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 9566,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9675,
											"end": 9687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9668,
											"end": 9687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9668,
											"end": 9687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9693,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 10118,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 9699,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9865,
											"end": 9869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9892,
											"end": 9901,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9952,
											"end": 9961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9950,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9927,
											"end": 9936,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9923,
											"end": 9940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 9963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10106,
											"end": 10110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 9980,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10111,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 9980,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 10118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 10118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 10118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 10118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10273,
											"end": 10277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10313,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10300,
											"end": 10309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10392,
											"end": 10393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10390,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10377,
											"end": 10394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10374,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 10324,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10324,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10473,
											"end": 10475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10462,
											"end": 10471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10455,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 10405,
											"end": 10477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10405,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10537,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10487,
											"end": 10559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10559,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 10487,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10688,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 10572,
											"end": 10688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10657,
											"end": 10662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 10642,
											"end": 10663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10663,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10642,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10664,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10622,
											"end": 10682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10680,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10682,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10622,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10831,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 10694,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10748,
											"end": 10753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10779,
											"end": 10785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10786,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10819,
											"end": 10824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 10795,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10825,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10795,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10831,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 11182,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 10837,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10904,
											"end": 10910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 10955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10941,
											"end": 10950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10932,
											"end": 10939,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10928,
											"end": 10951,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10956,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10921,
											"end": 11040,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10921,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10921,
											"end": 11040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 10959,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 10959,
											"end": 11038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 11038,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 10959,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10921,
											"end": 11040,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10921,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11104,
											"end": 11165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11157,
											"end": 11164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11137,
											"end": 11146,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11133,
											"end": 11155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11104,
											"end": 11165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 11104,
											"end": 11165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11104,
											"end": 11165,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11104,
											"end": 11165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11094,
											"end": 11165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11094,
											"end": 11165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11050,
											"end": 11175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 11182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 11182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 11182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 11182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 11182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11349,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11360,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11410,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11360,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11360,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11360,
											"end": 11431,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 11360,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 11509,
											"end": 11511,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11498,
											"end": 11507,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11494,
											"end": 11512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11485,
											"end": 11491,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 11441,
											"end": 11513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11513,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 11441,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11634,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 11526,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11621,
											"end": 11626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 11603,
											"end": 11627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11627,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11603,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11598,
											"end": 11601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11640,
											"end": 11745,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 11640,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11715,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 11732,
											"end": 11737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11715,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 11715,
											"end": 11738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11715,
											"end": 11738,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 11715,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11710,
											"end": 11713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11703,
											"end": 11739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11640,
											"end": 11745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11640,
											"end": 11745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11640,
											"end": 11745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11859,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 11751,
											"end": 11859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 11846,
											"end": 11851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 11828,
											"end": 11852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11852,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 11828,
											"end": 11852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11823,
											"end": 11826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11865,
											"end": 11973,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 11865,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11942,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 11960,
											"end": 11965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11942,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 11942,
											"end": 11966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11942,
											"end": 11966,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 11942,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11937,
											"end": 11940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 11967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11865,
											"end": 11973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11865,
											"end": 11973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11865,
											"end": 11973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 13696,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 12073,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12254,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12243,
											"end": 12246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12329,
											"end": 12345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12323,
											"end": 12346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 12416,
											"end": 12420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12393,
											"end": 12405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12359,
											"end": 12422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12422,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 12359,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12522,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12511,
											"end": 12516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12507,
											"end": 12523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12501,
											"end": 12524,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 12594,
											"end": 12598,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12592,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12571,
											"end": 12583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12537,
											"end": 12600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12600,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 12537,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12442,
											"end": 12610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12691,
											"end": 12695,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12684,
											"end": 12689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12680,
											"end": 12696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12697,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12710,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 12765,
											"end": 12769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12760,
											"end": 12763,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12742,
											"end": 12754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12710,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 12710,
											"end": 12771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12710,
											"end": 12771,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 12710,
											"end": 12771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12861,
											"end": 12866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12857,
											"end": 12873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12851,
											"end": 12874,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 12944,
											"end": 12948,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12939,
											"end": 12942,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12921,
											"end": 12933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12887,
											"end": 12950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 12887,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 12960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13046,
											"end": 13050,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13039,
											"end": 13044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13035,
											"end": 13051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 13122,
											"end": 13126,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13117,
											"end": 13120,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13113,
											"end": 13127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13099,
											"end": 13111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 13065,
											"end": 13128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13128,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 13065,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12970,
											"end": 13138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13228,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13217,
											"end": 13222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13230,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 13300,
											"end": 13304,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13295,
											"end": 13298,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13291,
											"end": 13305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 13243,
											"end": 13306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13306,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 13243,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13148,
											"end": 13316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13414,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 13403,
											"end": 13408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13399,
											"end": 13415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13393,
											"end": 13416,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 13486,
											"end": 13490,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 13481,
											"end": 13484,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13477,
											"end": 13491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13463,
											"end": 13475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 13429,
											"end": 13492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13492,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 13429,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13597,
											"end": 13601,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 13590,
											"end": 13595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13580,
											"end": 13603,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13616,
											"end": 13679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 13673,
											"end": 13677,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 13668,
											"end": 13671,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13650,
											"end": 13662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13616,
											"end": 13679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 13616,
											"end": 13679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13616,
											"end": 13679,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 13616,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13512,
											"end": 13689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12217,
											"end": 13696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 13696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 13696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 14081,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 13702,
											"end": 14081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13911,
											"end": 13914,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13900,
											"end": 13909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13896,
											"end": 13915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13888,
											"end": 13915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13888,
											"end": 13915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14060,
											"end": 14069,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14056,
											"end": 14073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14047,
											"end": 14053,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 13925,
											"end": 14074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 14074,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 13925,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 14081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 14081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 14081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 14081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 14081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14230,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 14087,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14144,
											"end": 14149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14175,
											"end": 14181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14182,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14160,
											"end": 14182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14160,
											"end": 14182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 14218,
											"end": 14223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 14191,
											"end": 14224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14224,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 14191,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14587,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 14236,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14334,
											"end": 14341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14330,
											"end": 14353,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14358,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14323,
											"end": 14442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14323,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14323,
											"end": 14442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14361,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 14361,
											"end": 14440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14440,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14361,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14323,
											"end": 14442,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14323,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14481,
											"end": 14482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14506,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 14562,
											"end": 14569,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14553,
											"end": 14559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14542,
											"end": 14551,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 14506,
											"end": 14570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14570,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 14506,
											"end": 14570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14496,
											"end": 14570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14496,
											"end": 14570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14452,
											"end": 14580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14769,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 14593,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14733,
											"end": 14761,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E74206F757470757420616D6F756E74000000000000"
										},
										{
											"begin": 14729,
											"end": 14730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14721,
											"end": 14727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 15141,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 14775,
											"end": 15141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 14920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 15005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 15002,
											"end": 15004,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 14997,
											"end": 15000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 14938,
											"end": 15005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15005,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 14938,
											"end": 15005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14931,
											"end": 15005,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14931,
											"end": 15005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15014,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 15103,
											"end": 15106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15014,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 15014,
											"end": 15107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15014,
											"end": 15107,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 15014,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15132,
											"end": 15134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15127,
											"end": 15130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 15141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 15141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 15141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 15141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15566,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 15147,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15313,
											"end": 15317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15351,
											"end": 15353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15340,
											"end": 15349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15328,
											"end": 15354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15328,
											"end": 15354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 15409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15394,
											"end": 15398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15410,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15386,
											"end": 15387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15375,
											"end": 15384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15371,
											"end": 15388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15428,
											"end": 15559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 15554,
											"end": 15558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15428,
											"end": 15559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 15428,
											"end": 15559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15428,
											"end": 15559,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 15428,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15420,
											"end": 15559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15420,
											"end": 15559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15693,
											"end": 15697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15733,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 15734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 15734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 15812,
											"end": 15813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15801,
											"end": 15810,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15788,
											"end": 15794,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 15744,
											"end": 15815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 15815,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 15744,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 15893,
											"end": 15895,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15882,
											"end": 15891,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15869,
											"end": 15875,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 15825,
											"end": 15897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15897,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 15825,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15910,
											"end": 16092,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 15910,
											"end": 16092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16050,
											"end": 16084,
											"name": "PUSH",
											"source": 10,
											"value": "5553444320697320616C7265616479207468652074617267657420746F6B656E"
										},
										{
											"begin": 16046,
											"end": 16047,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16038,
											"end": 16044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16027,
											"end": 16085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15910,
											"end": 16092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15910,
											"end": 16092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16464,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 16098,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16261,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 16325,
											"end": 16327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16320,
											"end": 16323,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 16261,
											"end": 16328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16328,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 16261,
											"end": 16328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16337,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 16426,
											"end": 16429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16337,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 16337,
											"end": 16430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16337,
											"end": 16430,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 16337,
											"end": 16430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 16457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16450,
											"end": 16453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16439,
											"end": 16458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16439,
											"end": 16458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16889,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 16470,
											"end": 16889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16636,
											"end": 16640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16674,
											"end": 16676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16663,
											"end": 16672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16659,
											"end": 16677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16651,
											"end": 16677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16651,
											"end": 16677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16723,
											"end": 16732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16717,
											"end": 16721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16713,
											"end": 16733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16709,
											"end": 16710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16698,
											"end": 16707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16694,
											"end": 16711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16751,
											"end": 16882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 16877,
											"end": 16881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16751,
											"end": 16882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 16751,
											"end": 16882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16751,
											"end": 16882,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 16751,
											"end": 16882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16743,
											"end": 16882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16743,
											"end": 16882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16895,
											"end": 17066,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 16895,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17035,
											"end": 17058,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
										},
										{
											"begin": 17031,
											"end": 17032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17023,
											"end": 17029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17019,
											"end": 17033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17012,
											"end": 17059,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16895,
											"end": 17066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16895,
											"end": 17066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17072,
											"end": 17438,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 17072,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17214,
											"end": 17217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17235,
											"end": 17302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 17299,
											"end": 17301,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 17294,
											"end": 17297,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17235,
											"end": 17302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 17235,
											"end": 17302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17235,
											"end": 17302,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 17235,
											"end": 17302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17302,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17311,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 17400,
											"end": 17403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17311,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 17311,
											"end": 17404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17311,
											"end": 17404,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 17311,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17429,
											"end": 17431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17424,
											"end": 17427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17420,
											"end": 17432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17072,
											"end": 17438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17072,
											"end": 17438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17072,
											"end": 17438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17072,
											"end": 17438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17444,
											"end": 17863,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 17444,
											"end": 17863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17610,
											"end": 17614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17648,
											"end": 17650,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17637,
											"end": 17646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17625,
											"end": 17651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17625,
											"end": 17651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17697,
											"end": 17706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17691,
											"end": 17695,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17687,
											"end": 17707,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17683,
											"end": 17684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17672,
											"end": 17681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17668,
											"end": 17685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17661,
											"end": 17708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17725,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 17851,
											"end": 17855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17725,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 17725,
											"end": 17856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17725,
											"end": 17856,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 17725,
											"end": 17856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17717,
											"end": 17856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17717,
											"end": 17856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17444,
											"end": 17863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17444,
											"end": 17863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17444,
											"end": 17863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17444,
											"end": 17863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17869,
											"end": 18040,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 17869,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18009,
											"end": 18032,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E206973206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 18005,
											"end": 18006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17986,
											"end": 18033,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17869,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17869,
											"end": 18040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18412,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 18046,
											"end": 18412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18188,
											"end": 18191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18209,
											"end": 18276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 18273,
											"end": 18275,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 18268,
											"end": 18271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18209,
											"end": 18276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 18209,
											"end": 18276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18209,
											"end": 18276,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 18209,
											"end": 18276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18202,
											"end": 18276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18202,
											"end": 18276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18285,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 18374,
											"end": 18377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18285,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 18285,
											"end": 18378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18285,
											"end": 18378,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 18285,
											"end": 18378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18403,
											"end": 18405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18398,
											"end": 18401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18394,
											"end": 18406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18387,
											"end": 18406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18387,
											"end": 18406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18418,
											"end": 18837,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 18418,
											"end": 18837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18584,
											"end": 18588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18622,
											"end": 18624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18611,
											"end": 18620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18607,
											"end": 18625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18599,
											"end": 18625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18599,
											"end": 18625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18671,
											"end": 18680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18665,
											"end": 18669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18661,
											"end": 18681,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18657,
											"end": 18658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18646,
											"end": 18655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18642,
											"end": 18659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18635,
											"end": 18682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18699,
											"end": 18830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 18825,
											"end": 18829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18699,
											"end": 18830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 18699,
											"end": 18830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18699,
											"end": 18830,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 18699,
											"end": 18830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18691,
											"end": 18830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18691,
											"end": 18830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18418,
											"end": 18837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18418,
											"end": 18837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18418,
											"end": 18837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18418,
											"end": 18837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18843,
											"end": 19020,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 18843,
											"end": 19020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18983,
											"end": 19012,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964207377617020726F7574657220616464726573730000000000"
										},
										{
											"begin": 18979,
											"end": 18980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18971,
											"end": 18977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18967,
											"end": 18981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18960,
											"end": 19013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18843,
											"end": 19020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18843,
											"end": 19020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19026,
											"end": 19392,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 19026,
											"end": 19392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19168,
											"end": 19171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19189,
											"end": 19256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 19253,
											"end": 19255,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 19248,
											"end": 19251,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19189,
											"end": 19256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 19189,
											"end": 19256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19189,
											"end": 19256,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 19189,
											"end": 19256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19256,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 19354,
											"end": 19357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 19265,
											"end": 19358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19358,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 19265,
											"end": 19358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 19385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19378,
											"end": 19381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19374,
											"end": 19386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19026,
											"end": 19392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19026,
											"end": 19392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19026,
											"end": 19392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19026,
											"end": 19392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19398,
											"end": 19817,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 19398,
											"end": 19817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19564,
											"end": 19568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19602,
											"end": 19604,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19591,
											"end": 19600,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19605,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19579,
											"end": 19605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19579,
											"end": 19605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19651,
											"end": 19660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19645,
											"end": 19649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19661,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19626,
											"end": 19635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19615,
											"end": 19662,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19679,
											"end": 19810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 19805,
											"end": 19809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19679,
											"end": 19810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 19679,
											"end": 19810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19679,
											"end": 19810,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 19679,
											"end": 19810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19671,
											"end": 19810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19671,
											"end": 19810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19398,
											"end": 19817,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19398,
											"end": 19817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19398,
											"end": 19817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19398,
											"end": 19817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19944,
											"end": 19948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19982,
											"end": 19984,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19971,
											"end": 19980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 19985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19959,
											"end": 19985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19959,
											"end": 19985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19995,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 20063,
											"end": 20064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20052,
											"end": 20061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20048,
											"end": 20065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20039,
											"end": 20045,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19995,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 19995,
											"end": 20066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19995,
											"end": 20066,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 19995,
											"end": 20066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20076,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 20144,
											"end": 20146,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20133,
											"end": 20142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20129,
											"end": 20147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20120,
											"end": 20126,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20076,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 20076,
											"end": 20148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20076,
											"end": 20148,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 20076,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 20155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"src/TokenSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"POOL_FEE()": "dd1b9c4a",
							"USDC()": "89a30271",
							"approveToken(address)": "80b2edd8",
							"approvedTokens(address)": "6d1ea3fa",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isTokenApproved(address)": "9d93d352",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"revokeToken(address)": "933f4eef",
							"supportsInterface(bytes4)": "01ffc9a7",
							"swapRouter()": "c31c9c07",
							"swapToUSDC(address,uint256,uint256,uint256)": "2197545c",
							"updateSwapRouter(address)": "b98b677f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcReceived\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revokeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapToUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"name\":\"updateSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External contract to handle swapping approved tokens to USDC using Uniswap V3.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"approveToken(address)\":{\"details\":\"Approves a new token for swapping to USDC.\",\"params\":{\"token\":\"Address of the token to approve.\"}},\"constructor\":{\"details\":\"Initializes the contract by setting the swap router and USDC address. Grants the deployer the DEFAULT_ADMIN_ROLE and ADMIN_ROLE.\",\"params\":{\"_swapRouter\":\"Address of the Uniswap V3 Swap Router.\",\"_usdc\":\"Address of the USDC token.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isTokenApproved(address)\":{\"details\":\"Checks if a token is approved for swapping.\",\"params\":{\"token\":\"Address of the token to check.\"},\"returns\":{\"isApproved\":\"Boolean indicating approval status.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"revokeToken(address)\":{\"details\":\"Revokes a token's approval for swapping to USDC.\",\"params\":{\"token\":\"Address of the token to revoke.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"swapToUSDC(address,uint256,uint256,uint256)\":{\"details\":\"Swaps a specified amount of an approved token to USDC.\",\"params\":{\"amountIn\":\"Amount of the input token to swap.\",\"amountOutMinimum\":\"Minimum amount of USDC expected from the swap to protect against slippage.\",\"deadline\":\"Unix timestamp after which the swap is no longer valid.\",\"inputToken\":\"Address of the token to swap from.\"},\"returns\":{\"amountOut\":\"Amount of USDC received from the swap.\"}},\"updateSwapRouter(address)\":{\"details\":\"Updates the Uniswap V3 Swap Router address.\",\"params\":{\"_swapRouter\":\"New Swap Router address.\"}}},\"title\":\"TokenSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"src/TokenSwap.sol\":{\"keccak256\":\"0xdb9d5ae608f51e1a8661256f0d0c72392dba5a81deb5d52ab1a7bc561c5cb981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2683ca6e247ddec98360bea5520d5c56d7bb3b2ffc1b0d26f5b5aaa7ea1d1558\",\"dweb:/ipfs/QmYx86pLPZ5aduxoGSGknH2CDsai7h1N3MPHGdMnWtjuib\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "src/TokenSwap.sol:TokenSwap",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 497,
								"contract": "src/TokenSwap.sol:TokenSwap",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 724,
								"contract": "src/TokenSwap.sol:TokenSwap",
								"label": "swapRouter",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ISwapRouter)705"
							},
							{
								"astId": 730,
								"contract": "src/TokenSwap.sol:TokenSwap",
								"label": "approvedTokens",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ISwapRouter)705": {
								"encoding": "inplace",
								"label": "contract ISwapRouter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/TokenSwap.sol:TokenSwap",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/TokenSwap.sol:TokenSwap",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							579
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 580,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								579,
								591,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										578
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 578,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 456,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 456,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 456,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 456,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 456,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 456,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 489,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 492,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1818:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 490,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 495,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1864:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 493,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "1907:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:4",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 500,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:4"
									},
									"src": "1994:37:4"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2051:38:4",
										"statements": [
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "2061:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "2071:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:4"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:4"
									},
									"scope": 555,
									"src": "2037:52:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "2490:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 511,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2500:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:4"
											},
											{
												"id": 514,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 515,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2542:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:4"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 519,
									"name": "nonReentrant",
									"nameLocation": "2475:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:4"
									},
									"src": "2466:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "2614:268:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "2702:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2713:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "2698:86:4",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "2722:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 525,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "2743:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 527,
															"nodeType": "RevertStatement",
															"src": "2736:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "2858:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2868:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:4"
											}
										]
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:4"
									},
									"scope": 555,
									"src": "2575:307:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "2926:170:4",
										"statements": [
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 538,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "3068:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 539,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3078:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:4"
											}
										]
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:4"
									},
									"scope": 555,
									"src": "2888:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3339:42:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "3356:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 550,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3367:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 548,
												"id": 552,
												"nodeType": "Return",
												"src": "3349:25:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3333:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:4"
									},
									"scope": 555,
									"src": "3275:106:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 556,
							"src": "1030:2353:4",
							"usedErrors": [
								500
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							579
						],
						"IERC165": [
							591
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 592,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 558,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 591,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 561,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 591,
										"src": "688:7:5"
									},
									"id": 562,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 560,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579,
								591
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "845:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 570,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "862:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "882:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$591_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$591_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 571,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$591",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 569,
												"id": 576,
												"nodeType": "Return",
												"src": "855:47:5"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "790:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 564,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:5"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "839:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:5"
									},
									"scope": 579,
									"src": "763:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 580,
							"src": "660:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							591
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 582,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 591,
							"linearizedBaseContracts": [
								591
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 584,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 591,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 592,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							605
						]
					},
					"id": 606,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 593,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 594,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:7",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 605,
							"linearizedBaseContracts": [
								605
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:7",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1197:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 596,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1226:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 598,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1255:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:7"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:7"
									},
									"scope": 605,
									"src": "1157:133:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 606,
							"src": "215:1077:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:7"
				},
				"id": 7
			},
			"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							705
						],
						"IUniswapV3SwapCallback": [
							605
						]
					},
					"id": 706,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 607,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"id": 608,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:8"
						},
						{
							"absolutePath": "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 706,
							"sourceUnit": 606,
							"src": "91:83:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 611,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 605,
										"src": "305:22:8"
									},
									"id": 612,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:8"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 610,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:8",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 705,
							"linearizedBaseContracts": [
								705,
								605
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 629,
									"members": [
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "374:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 613,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "399:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 615,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 618,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "425:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 617,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 620,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "445:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 619,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 622,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "472:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 621,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 624,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "498:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 623,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 626,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "524:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 625,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 628,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 629,
											"src": "558:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 627,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:8",
									"nodeType": "StructDefinition",
									"scope": 705,
									"src": "334:256:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:8",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "877:38:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 631,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 629,
														"src": "877:22:8"
													},
													"referencedDeclaration": 629,
													"src": "877:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:8"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "943:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:8"
									},
									"scope": 705,
									"src": "851:111:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 649,
									"members": [
										{
											"constant": false,
											"id": 640,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 649,
											"src": "1002:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 639,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 642,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 649,
											"src": "1022:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 641,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 644,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 649,
											"src": "1049:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 643,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 646,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 649,
											"src": "1075:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 645,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 648,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 649,
											"src": "1101:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 647,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:8",
									"nodeType": "StructDefinition",
									"scope": 705,
									"src": "968:164:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:8",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1436:32:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$649_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 651,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 649,
														"src": "1436:16:8"
													},
													"referencedDeclaration": 649,
													"src": "1436:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$649_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:8"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1496:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:8"
									},
									"scope": 705,
									"src": "1416:99:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 675,
									"members": [
										{
											"constant": false,
											"id": 660,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1562:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 659,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1587:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 661,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1613:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 663,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1633:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 665,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1660:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 667,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1686:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 669,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1713:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 671,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 674,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 675,
											"src": "1746:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 673,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:8",
									"nodeType": "StructDefinition",
									"scope": 705,
									"src": "1521:257:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:8",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2066:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$675_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 678,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 677,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 675,
														"src": "2066:23:8"
													},
													"referencedDeclaration": 675,
													"src": "2066:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$675_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:8"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2133:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:8"
									},
									"scope": 705,
									"src": "2039:112:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 695,
									"members": [
										{
											"constant": false,
											"id": 686,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "2192:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 685,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 688,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "2212:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 687,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 690,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "2239:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 692,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "2265:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 694,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "2292:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 693,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:8",
									"nodeType": "StructDefinition",
									"scope": 705,
									"src": "2157:165:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:8",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2638:33:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$695_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 697,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 695,
														"src": "2638:17:8"
													},
													"referencedDeclaration": 695,
													"src": "2638:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$695_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:8"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2699:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:8"
									},
									"scope": 705,
									"src": "2617:100:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 706,
							"src": "280:2439:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:8"
				},
				"id": 8
			},
			"src/TokenSwap.sol": {
				"ast": {
					"absolutePath": "src/TokenSwap.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							579
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"ISwapRouter": [
							705
						],
						"IUniswapV3SwapCallback": [
							605
						],
						"ReentrancyGuard": [
							555
						],
						"TokenSwap": [
							1017
						]
					},
					"id": 1018,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 708,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 296,
							"src": "90:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 556,
							"src": "149:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 457,
							"src": "209:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 706,
							"src": "299:68:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 713,
										"name": "AccessControl",
										"nameLocations": [
											"506:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "506:13:9"
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "506:13:9"
								},
								{
									"baseName": {
										"id": 715,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"521:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 555,
										"src": "521:15:9"
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "521:15:9"
								}
							],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 712,
								"nodeType": "StructuredDocumentation",
								"src": "369:114:9",
								"text": " @title TokenSwap\n @dev External contract to handle swapping approved tokens to USDC using Uniswap V3."
							},
							"fullyImplemented": true,
							"id": 1017,
							"linearizedBaseContracts": [
								1017,
								555,
								295,
								579,
								591,
								378,
								486
							],
							"name": "TokenSwap",
							"nameLocation": "493:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 721,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "634:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "610:60:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 717,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 719,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "657:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 718,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "647:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 720,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "647:23:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 724,
									"mutability": "mutable",
									"name": "swapRouter",
									"nameLocation": "773:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "754:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$705",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 723,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 722,
											"name": "ISwapRouter",
											"nameLocations": [
												"754:11:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 705,
											"src": "754:11:9"
										},
										"referencedDeclaration": 705,
										"src": "754:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$705",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 726,
									"mutability": "immutable",
									"name": "USDC",
									"nameLocation": "814:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "789:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 725,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "789:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d1ea3fa",
									"id": 730,
									"mutability": "mutable",
									"name": "approvedTokens",
									"nameLocation": "930:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "898:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 729,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 727,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "898:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 728,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "917:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "dd1b9c4a",
									"id": 733,
									"mutability": "constant",
									"name": "POOL_FEE",
									"nameLocation": "1028:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "1005:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 731,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "1005:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1039:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5f5916d70d5479c1795a9d461360dfa5c673bc37904c8ab4fcbdc970b9e90f3d",
									"id": 737,
									"name": "TokenApproved",
									"nameLocation": "1124:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1154:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1138:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:23:9"
									},
									"src": "1118:43:9"
								},
								{
									"anonymous": false,
									"eventSelector": "45f62f30e7b8439e0da7d8e560fe39d01238091ce9e789e3d12b514edf98acea",
									"id": 741,
									"name": "TokenRevoked",
									"nameLocation": "1172:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1201:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1185:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:23:9"
									},
									"src": "1166:42:9"
								},
								{
									"anonymous": false,
									"eventSelector": "30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66",
									"id": 751,
									"name": "TokenSwapped",
									"nameLocation": "1219:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1248:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1232:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"indexed": true,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "1270:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1254:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"indexed": false,
												"mutability": "mutable",
												"name": "inputAmount",
												"nameLocation": "1290:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1282:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcReceived",
												"nameLocation": "1311:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1303:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:93:9"
									},
									"src": "1213:112:9"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "1732:307:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 763,
																		"name": "_swapRouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "1758:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISwapRouter_$705",
																			"typeString": "contract ISwapRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ISwapRouter_$705",
																			"typeString": "contract ISwapRouter"
																		}
																	],
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1750:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 761,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1750:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1750:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1782:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1774:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1774:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1774:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1750:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207377617020726f757465722061646472657373",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1786:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
																"typeString": "literal_string \"Invalid swap router address\""
															},
															"value": "Invalid swap router address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
																"typeString": "literal_string \"Invalid swap router address\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1742:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "1742:74:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 774,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "1834:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1851:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1843:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 775,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1843:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1843:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1834:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420555344432061646472657373",
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1855:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe",
																"typeString": "literal_string \"Invalid USDC address\""
															},
															"value": "Invalid USDC address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe",
																"typeString": "literal_string \"Invalid USDC address\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1826:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "1826:52:9"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 783,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "1889:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$705",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 784,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "1902:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$705",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1889:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$705",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "1889:24:9"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 787,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1923:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 788,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "1930:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1923:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "1923:12:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1957:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1977:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1981:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1977:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 791,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1946:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1946:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1946:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "2009:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 799,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2021:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2025:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2021:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 797,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1998:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "1998:34:9"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1404:271:9",
										"text": " @dev Initializes the contract by setting the swap router and USDC address.\n Grants the deployer the DEFAULT_ADMIN_ROLE and ADMIN_ROLE.\n @param _swapRouter Address of the Uniswap V3 Swap Router.\n @param _usdc Address of the USDC token."
									},
									"id": 804,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "1704:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1692:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$705",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "ISwapRouter",
														"nameLocations": [
															"1692:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 705,
														"src": "1692:11:9"
													},
													"referencedDeclaration": 705,
													"src": "1692:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$705",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "1725:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1717:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:40:9"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:0:9"
									},
									"scope": 1017,
									"src": "1680:359:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "2288:93:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 810,
																"name": "approvedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "2306:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 812,
															"indexExpression": {
																"id": 811,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "2321:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2306:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420617070726f76656420666f72207377617070696e67",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2329:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e",
																"typeString": "literal_string \"Token not approved for swapping\""
															},
															"value": "Token not approved for swapping"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e98859f177752e2fecab170f04ea0335880e29fa6e01d2fc28a38ea43a08ef5e",
																"typeString": "literal_string \"Token not approved for swapping\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2298:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2298:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "2298:65:9"
											},
											{
												"id": 816,
												"nodeType": "PlaceholderStatement",
												"src": "2373:1:9"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "2117:124:9",
										"text": " @dev Ensures that only approved tokens can be swapped.\n @param token Address of the token to check."
									},
									"id": 818,
									"name": "onlyApprovedToken",
									"nameLocation": "2255:17:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2281:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2273:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:15:9"
									},
									"src": "2246:135:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "2656:211:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 828,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "2674:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 829,
																"name": "USDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "2683:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2674:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553444320697320616c7265616479207468652074617267657420746f6b656e",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2689:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2",
																"typeString": "literal_string \"USDC is already the target token\""
															},
															"value": "USDC is already the target token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19f954e90b8c5032430743768255b72663a8aaf9a5f40b77d31804a6fb5282f2",
																"typeString": "literal_string \"USDC is already the target token\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2666:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2666:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "2666:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 835,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "2742:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2759:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2751:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 836,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2751:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2742:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2734:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2734:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "2734:53:9"
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 844,
															"name": "approvedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2797:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 846,
														"indexExpression": {
															"id": 845,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2812:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2797:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2821:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2797:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "2797:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 851,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2854:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 850,
														"name": "TokenApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "2840:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2840:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "EmitStatement",
												"src": "2835:25:9"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "2465:119:9",
										"text": " @dev Approves a new token for swapping to USDC.\n @param token Address of the token to approve."
									},
									"functionSelector": "80b2edd8",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 824,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "2644:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 825,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 823,
												"name": "onlyRole",
												"nameLocations": [
													"2635:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2635:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2635:20:9"
										}
									],
									"name": "approveToken",
									"nameLocation": "2598:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2619:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2611:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:15:9"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:0:9"
									},
									"scope": 1017,
									"src": "2589:278:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "3068:145:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 865,
																"name": "approvedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "3086:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 867,
															"indexExpression": {
																"id": 866,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3086:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206973206e6f7420617070726f766564",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3109:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22",
																"typeString": "literal_string \"Token is not approved\""
															},
															"value": "Token is not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db1a4c823e0d29df5f86139fea1f14304067dc277090c1db6e05e48e1be96b22",
																"typeString": "literal_string \"Token is not approved\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3078:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "3078:55:9"
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 871,
															"name": "approvedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3143:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 873,
														"indexExpression": {
															"id": 872,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3158:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3143:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3167:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3143:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3143:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 878,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3200:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 877,
														"name": "TokenRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "3187:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3187:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "EmitStatement",
												"src": "3182:24:9"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "2873:124:9",
										"text": " @dev Revokes a token's approval for swapping to USDC.\n @param token Address of the token to revoke."
									},
									"functionSelector": "933f4eef",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 861,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "3056:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 860,
												"name": "onlyRole",
												"nameLocations": [
													"3047:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3047:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3047:20:9"
										}
									],
									"name": "revokeToken",
									"nameLocation": "3011:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3031:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3023:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:15:9"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3068:0:9"
									},
									"scope": 1017,
									"src": "3002:211:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "3423:125:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 895,
																		"name": "_swapRouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "3449:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISwapRouter_$705",
																			"typeString": "contract ISwapRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ISwapRouter_$705",
																			"typeString": "contract ISwapRouter"
																		}
																	],
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3441:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 893,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3441:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3441:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3473:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3465:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 897,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3465:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3465:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3441:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207377617020726f757465722061646472657373",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3477:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
																"typeString": "literal_string \"Invalid swap router address\""
															},
															"value": "Invalid swap router address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7d2382b7e7435055217f033c426cc55d9a1711ce338147fde5bc7b87fcc1469",
																"typeString": "literal_string \"Invalid swap router address\""
															}
														],
														"id": 892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3433:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3433:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "3433:74:9"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3517:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$705",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "3530:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$705",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "3517:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$705",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "3517:24:9"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "3219:118:9",
										"text": " @dev Updates the Uniswap V3 Swap Router address.\n @param _swapRouter New Swap Router address."
									},
									"functionSelector": "b98b677f",
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 889,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "3411:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 888,
												"name": "onlyRole",
												"nameLocations": [
													"3402:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3402:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3402:20:9"
										}
									],
									"name": "updateSwapRouter",
									"nameLocation": "3351:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "3380:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "3368:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$705",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 884,
														"name": "ISwapRouter",
														"nameLocations": [
															"3368:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 705,
														"src": "3368:11:9"
													},
													"referencedDeclaration": 705,
													"src": "3368:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$705",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3367:25:9"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3423:0:9"
									},
									"scope": 1017,
									"src": "3342:206:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "4336:861:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "4354:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4365:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4354:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e70757420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4368:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774",
																"typeString": "literal_string \"Input amount must be greater than zero\""
															},
															"value": "Input amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e36659f831fcb381702523a7d4c96f9043f8295919f8dbafd1748f6df57b774",
																"typeString": "literal_string \"Input amount must be greater than zero\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4346:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4346:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "4346:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 940,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4452:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4456:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4452:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 944,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4472:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenSwap_$1017",
																		"typeString": "contract TokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenSwap_$1017",
																		"typeString": "contract TokenSwap"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4464:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 942,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4464:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4464:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "4479:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 937,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "4427:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 936,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "4420:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4420:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4439:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 455,
														"src": "4420:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "4420:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 955,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "4533:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$705",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$705",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4525:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4525:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4525:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "4546:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "4505:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 949,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "4498:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4498:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4517:7:9",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 443,
														"src": "4498:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4498:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4498:57:9"
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4608:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1000,
														"src": "4566:48:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 963,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 962,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"4566:11:9",
																	"4578:22:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 629,
																"src": "4566:34:9"
															},
															"referencedDeclaration": 629,
															"src": "4566:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [
														{
															"id": 967,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "4691:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4729:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "POOL_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4756:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 970,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4793:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4797:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4793:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "4831:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 973,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "4867:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 974,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "4911:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4964:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 965,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "4629:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$705_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4641:22:9",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 629,
														"src": "4629:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$629_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4682:7:9",
														"4719:8:9",
														"4751:3:9",
														"4782:9:9",
														"4821:8:9",
														"4857:8:9",
														"4893:16:9",
														"4945:17:9"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "4629:351:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:414:9"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 978,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "4991:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 981,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "5031:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$629_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 979,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "5003:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$705",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5014:16:9",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 638,
															"src": "5003:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$629_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5003:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4991:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "4991:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 986,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "5057:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 987,
																"name": "amountOutMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "5070:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5057:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5088:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5049:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5049:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "5049:68:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 993,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5146:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5150:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5146:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5158:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "5170:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 997,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "5180:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 992,
														"name": "TokenSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5133:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5133:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "EmitStatement",
												"src": "5128:62:9"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "3630:445:9",
										"text": " @dev Swaps a specified amount of an approved token to USDC.\n @param inputToken Address of the token to swap from.\n @param amountIn Amount of the input token to swap.\n @param amountOutMinimum Minimum amount of USDC expected from the swap to protect against slippage.\n @param deadline Unix timestamp after which the swap is no longer valid.\n @return amountOut Amount of USDC received from the swap."
									},
									"functionSelector": "2197545c",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "nonReentrant",
												"nameLocations": [
													"4245:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 519,
												"src": "4245:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4245:12:9"
										},
										{
											"arguments": [
												{
													"id": 924,
													"name": "inputToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 913,
													"src": "4284:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 925,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 923,
												"name": "onlyApprovedToken",
												"nameLocations": [
													"4266:17:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 818,
												"src": "4266:17:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4266:29:9"
										}
									],
									"name": "swapToUSDC",
									"nameLocation": "4089:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "4117:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4109:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4145:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4137:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "amountOutMinimum",
												"nameLocation": "4171:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4163:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4205:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4197:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4099:120:9"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4321:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4313:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:19:9"
									},
									"scope": 1017,
									"src": "4080:1117:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "5545:51:9",
										"statements": [
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "isApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "5555:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1010,
															"name": "approvedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "5568:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1012,
														"indexExpression": {
															"id": 1011,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "5583:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5568:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5555:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "5555:34:9"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "5280:180:9",
										"text": " @dev Checks if a token is approved for swapping.\n @param token Address of the token to check.\n @return isApproved Boolean indicating approval status."
									},
									"functionSelector": "9d93d352",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenApproved",
									"nameLocation": "5474:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5498:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5490:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5489:15:9"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "isApproved",
												"nameLocation": "5533:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5528:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5528:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5527:17:9"
									},
									"scope": 1017,
									"src": "5465:131:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1018,
							"src": "484:5114:9",
							"usedErrors": [
								305,
								308,
								500
							],
							"usedEvents": [
								317,
								326,
								335,
								737,
								741,
								751
							]
						}
					],
					"src": "32:5567:9"
				},
				"id": 9
			}
		}
	}
}